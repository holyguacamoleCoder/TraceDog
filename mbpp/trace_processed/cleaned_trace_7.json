[
  {
    "code": "def smallest_missing(A, left_element, right_element):\r\n    if left_element > right_element:\r\n        return left_element\r\n    mid = left_element + (right_element - left_element) // 2\r\n    if A[mid] == mid:\r\n        return smallest_missing(A, mid + 1, right_element)\r\n    else:\r\n        return smallest_missing(A, left_element, mid - 1)",
    "entry_point": "smallest_missing",
    "input": [
      [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      0,
      6
    ],
    "output": 7,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "A": [
            0,
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "left_element": 7,
          "right_element": 6
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "RETURN",
        "vars": {
          "__return__": 7
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "left_element": 7
        }
      },
      {
        "line": 6,
        "step": 3,
        "action": "RETURN",
        "vars": {
          "__return__": 7
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "left_element": 7
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 7
        }
      },
      {
        "line": 3,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "left_element": 7
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "RETURN",
        "vars": {
          "__return__": 7
        }
      }
    ],
    "id": 1101,
    "task_id": 371,
    "exist_function": [
      "smallest_missing"
    ]
  },
  {
    "code": "def smallest_missing(A, left_element, right_element):\r\n    if left_element > right_element:\r\n        return left_element\r\n    mid = left_element + (right_element - left_element) // 2\r\n    if A[mid] == mid:\r\n        return smallest_missing(A, mid + 1, right_element)\r\n    else:\r\n        return smallest_missing(A, left_element, mid - 1)",
    "entry_point": "smallest_missing",
    "input": [
      [
        0,
        1,
        2,
        6,
        9,
        11,
        15
      ],
      0,
      6
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "A": [
            0,
            1,
            2,
            6,
            9,
            11,
            15
          ],
          "left_element": 3,
          "right_element": 2
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "left_element": 3
        }
      },
      {
        "line": 6,
        "step": 3,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "left_element": 3
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      },
      {
        "line": 3,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "left_element": 3,
          "right_element": 2
        }
      },
      {
        "line": 8,
        "step": 5,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 1102,
    "task_id": 371,
    "exist_function": [
      "smallest_missing"
    ]
  },
  {
    "code": "import heapq as hq\r\ndef heap_assending(nums):\r\n  hq.heapify(nums)\r\n  s_result = [hq.heappop(nums) for i in range(len(nums))]\r\n  return s_result",
    "entry_point": "heap_assending",
    "input": [
      []
    ],
    "output": [
      1,
      2,
      3,
      4,
      7,
      8,
      9,
      9,
      10,
      14,
      18
    ],
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "nums": [
            18,
            14,
            10,
            9,
            8,
            7,
            9,
            3,
            2,
            4,
            1
          ]
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "nums[3]": 3,
          "nums[2]": 7,
          "nums[0]": 1,
          "nums[1]": 2,
          "nums[5]": 10,
          "nums[10]": 8,
          "nums[8]": 9,
          "nums[4]": 4,
          "nums[9]": 14,
          "nums[7]": 18
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "s_result": [
            1,
            2,
            3,
            4,
            7,
            8,
            9,
            9,
            10,
            14,
            18
          ],
          "nums": []
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": [
            1,
            2,
            3,
            4,
            7,
            8,
            9,
            9,
            10,
            14,
            18
          ]
        }
      }
    ],
    "id": 1104,
    "task_id": 372,
    "exist_function": [
      "heap_assending"
    ]
  },
  {
    "code": "import heapq as hq\r\ndef heap_assending(nums):\r\n  hq.heapify(nums)\r\n  s_result = [hq.heappop(nums) for i in range(len(nums))]\r\n  return s_result",
    "entry_point": "heap_assending",
    "input": [
      []
    ],
    "output": [
      14,
      22,
      25,
      25,
      35,
      58,
      65,
      75,
      85
    ],
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "nums": [
            25,
            35,
            22,
            85,
            14,
            65,
            75,
            25,
            58
          ]
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "nums[3]": 25,
          "nums[0]": 14,
          "nums[1]": 25,
          "nums[4]": 35,
          "nums[7]": 85
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "s_result": [
            14,
            22,
            25,
            25,
            35,
            58,
            65,
            75,
            85
          ],
          "nums": []
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": [
            14,
            22,
            25,
            25,
            35,
            58,
            65,
            75,
            85
          ]
        }
      }
    ],
    "id": 1105,
    "task_id": 372,
    "exist_function": [
      "heap_assending"
    ]
  },
  {
    "code": "import heapq as hq\r\ndef heap_assending(nums):\r\n  hq.heapify(nums)\r\n  s_result = [hq.heappop(nums) for i in range(len(nums))]\r\n  return s_result",
    "entry_point": "heap_assending",
    "input": [
      []
    ],
    "output": [
      0,
      1,
      2,
      3,
      4,
      5,
      6,
      7,
      8,
      9
    ],
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "nums": [
            1,
            3,
            5,
            7,
            9,
            2,
            4,
            6,
            8,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "nums[3]": 6,
          "nums[2]": 2,
          "nums[0]": 0,
          "nums[1]": 1,
          "nums[5]": 5,
          "nums[9]": 9,
          "nums[4]": 3,
          "nums[7]": 7
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "s_result": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ],
          "nums": []
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": [
            0,
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9
          ]
        }
      }
    ],
    "id": 1106,
    "task_id": 372,
    "exist_function": [
      "heap_assending"
    ]
  },
  {
    "code": "def permute_string(str):\r\n    if len(str) == 0:\r\n        return ['']\r\n    prev_list = permute_string(str[1:len(str)])\r\n    next_list = []\r\n    for i in range(0,len(prev_list)):\r\n        for j in range(0,len(str)):\r\n            new_str = prev_list[i][0:j]+str[0]+prev_list[i][j:len(str)-1]\r\n            if new_str not in next_list:\r\n                next_list.append(new_str)\r\n    return next_list",
    "entry_point": "permute_string",
    "input": [
      "ab"
    ],
    "output": [
      "ab",
      "ba"
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "str": ""
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "RETURN",
        "vars": {
          "__return__": [
            ""
          ]
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "prev_list": [
            ""
          ],
          "str": "b"
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "next_list": []
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "new_str": "b"
        }
      },
      {
        "line": 10,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "next_list[0]": "b"
        }
      },
      {
        "line": 11,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "b"
          ]
        }
      },
      {
        "line": 11,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "prev_list[0]": "b",
          "str": "ab"
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "next_list": []
        }
      },
      {
        "line": 6,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "new_str": "ab"
        }
      },
      {
        "line": 10,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "next_list[0]": "ab"
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "new_str": "ba"
        }
      },
      {
        "line": 10,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "next_list[1]": "ba"
        }
      },
      {
        "line": 11,
        "step": 17,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "ab",
            "ba"
          ]
        }
      }
    ],
    "id": 1110,
    "task_id": 374,
    "exist_function": [
      "permute_string"
    ]
  },
  {
    "code": "def permute_string(str):\r\n    if len(str) == 0:\r\n        return ['']\r\n    prev_list = permute_string(str[1:len(str)])\r\n    next_list = []\r\n    for i in range(0,len(prev_list)):\r\n        for j in range(0,len(str)):\r\n            new_str = prev_list[i][0:j]+str[0]+prev_list[i][j:len(str)-1]\r\n            if new_str not in next_list:\r\n                next_list.append(new_str)\r\n    return next_list",
    "entry_point": "permute_string",
    "input": [
      "abc"
    ],
    "output": [
      "abc",
      "bac",
      "bca",
      "acb",
      "cab",
      "cba"
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "str": ""
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "RETURN",
        "vars": {
          "__return__": [
            ""
          ]
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "prev_list": [
            ""
          ],
          "str": "c"
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "next_list": []
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "new_str": "c"
        }
      },
      {
        "line": 10,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "next_list[0]": "c"
        }
      },
      {
        "line": 11,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "c"
          ]
        }
      },
      {
        "line": 11,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "prev_list[0]": "c",
          "str": "bc"
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "next_list": []
        }
      },
      {
        "line": 6,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "new_str": "bc"
        }
      },
      {
        "line": 10,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "next_list[0]": "bc"
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "new_str": "cb"
        }
      },
      {
        "line": 10,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "next_list[1]": "cb"
        }
      },
      {
        "line": 11,
        "step": 17,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "bc",
            "cb"
          ]
        }
      },
      {
        "line": 11,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "prev_list[0]": "bc",
          "prev_list[1]": "cb",
          "str": "abc"
        }
      },
      {
        "line": 5,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "next_list": []
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "new_str": "abc"
        }
      },
      {
        "line": 10,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "next_list[0]": "abc"
        }
      },
      {
        "line": 7,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "new_str": "bac"
        }
      },
      {
        "line": 10,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "next_list[1]": "bac"
        }
      },
      {
        "line": 7,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "new_str": "bca"
        }
      },
      {
        "line": 10,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "next_list[2]": "bca"
        }
      },
      {
        "line": 6,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 7,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "new_str": "acb"
        }
      },
      {
        "line": 10,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "next_list[3]": "acb"
        }
      },
      {
        "line": 7,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "new_str": "cab"
        }
      },
      {
        "line": 10,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "next_list[4]": "cab"
        }
      },
      {
        "line": 7,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "new_str": "cba"
        }
      },
      {
        "line": 10,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "next_list[5]": "cba"
        }
      },
      {
        "line": 11,
        "step": 39,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "abc",
            "bac",
            "bca",
            "acb",
            "cab",
            "cba"
          ]
        }
      }
    ],
    "id": 1111,
    "task_id": 374,
    "exist_function": [
      "permute_string"
    ]
  },
  {
    "code": "def permute_string(str):\r\n    if len(str) == 0:\r\n        return ['']\r\n    prev_list = permute_string(str[1:len(str)])\r\n    next_list = []\r\n    for i in range(0,len(prev_list)):\r\n        for j in range(0,len(str)):\r\n            new_str = prev_list[i][0:j]+str[0]+prev_list[i][j:len(str)-1]\r\n            if new_str not in next_list:\r\n                next_list.append(new_str)\r\n    return next_list",
    "entry_point": "permute_string",
    "input": [
      "abcd"
    ],
    "output": [
      "abcd",
      "bacd",
      "bcad",
      "bcda",
      "acbd",
      "cabd",
      "cbad",
      "cbda",
      "acdb",
      "cadb",
      "cdab",
      "cdba",
      "abdc",
      "badc",
      "bdac",
      "bdca",
      "adbc",
      "dabc",
      "dbac",
      "dbca",
      "adcb",
      "dacb",
      "dcab",
      "dcba"
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "str": ""
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "RETURN",
        "vars": {
          "__return__": [
            ""
          ]
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "prev_list": [
            ""
          ],
          "str": "d"
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "next_list": []
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "new_str": "d"
        }
      },
      {
        "line": 10,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "next_list[0]": "d"
        }
      },
      {
        "line": 11,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "d"
          ]
        }
      },
      {
        "line": 11,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "prev_list[0]": "d",
          "str": "cd"
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "next_list": []
        }
      },
      {
        "line": 6,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "new_str": "cd"
        }
      },
      {
        "line": 10,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "next_list[0]": "cd"
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "new_str": "dc"
        }
      },
      {
        "line": 10,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "next_list[1]": "dc"
        }
      },
      {
        "line": 11,
        "step": 17,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "cd",
            "dc"
          ]
        }
      },
      {
        "line": 11,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "prev_list[0]": "cd",
          "prev_list[1]": "dc",
          "str": "bcd"
        }
      },
      {
        "line": 5,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "next_list": []
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "new_str": "bcd"
        }
      },
      {
        "line": 10,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "next_list[0]": "bcd"
        }
      },
      {
        "line": 7,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "new_str": "cbd"
        }
      },
      {
        "line": 10,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "next_list[1]": "cbd"
        }
      },
      {
        "line": 7,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "new_str": "cdb"
        }
      },
      {
        "line": 10,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "next_list[2]": "cdb"
        }
      },
      {
        "line": 6,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 7,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "new_str": "bdc"
        }
      },
      {
        "line": 10,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "next_list[3]": "bdc"
        }
      },
      {
        "line": 7,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "new_str": "dbc"
        }
      },
      {
        "line": 10,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "next_list[4]": "dbc"
        }
      },
      {
        "line": 7,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "new_str": "dcb"
        }
      },
      {
        "line": 10,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "next_list[5]": "dcb"
        }
      },
      {
        "line": 11,
        "step": 39,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "bcd",
            "cbd",
            "cdb",
            "bdc",
            "dbc",
            "dcb"
          ]
        }
      },
      {
        "line": 11,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "prev_list[5]": "dcb",
          "prev_list[2]": "cdb",
          "prev_list[3]": "bdc",
          "prev_list[0]": "bcd",
          "prev_list[4]": "dbc",
          "prev_list[1]": "cbd",
          "str": "abcd"
        }
      },
      {
        "line": 5,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "next_list": []
        }
      },
      {
        "line": 6,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "new_str": "abcd"
        }
      },
      {
        "line": 10,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "next_list[0]": "abcd"
        }
      },
      {
        "line": 7,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "new_str": "bacd"
        }
      },
      {
        "line": 10,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "next_list[1]": "bacd"
        }
      },
      {
        "line": 7,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "new_str": "bcad"
        }
      },
      {
        "line": 10,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "next_list[2]": "bcad"
        }
      },
      {
        "line": 7,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 8,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "new_str": "bcda"
        }
      },
      {
        "line": 10,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "next_list[3]": "bcda"
        }
      },
      {
        "line": 6,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 7,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "new_str": "acbd"
        }
      },
      {
        "line": 10,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "next_list[4]": "acbd"
        }
      },
      {
        "line": 7,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "new_str": "cabd"
        }
      },
      {
        "line": 10,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "next_list[5]": "cabd"
        }
      },
      {
        "line": 7,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "new_str": "cbad"
        }
      },
      {
        "line": 10,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "next_list[6]": "cbad"
        }
      },
      {
        "line": 7,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 8,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "new_str": "cbda"
        }
      },
      {
        "line": 10,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "next_list[7]": "cbda"
        }
      },
      {
        "line": 6,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 7,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "new_str": "acdb"
        }
      },
      {
        "line": 10,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "next_list[8]": "acdb"
        }
      },
      {
        "line": 7,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "new_str": "cadb"
        }
      },
      {
        "line": 10,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "next_list[9]": "cadb"
        }
      },
      {
        "line": 7,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "new_str": "cdab"
        }
      },
      {
        "line": 10,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "next_list[10]": "cdab"
        }
      },
      {
        "line": 7,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 8,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "new_str": "cdba"
        }
      },
      {
        "line": 10,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "next_list[11]": "cdba"
        }
      },
      {
        "line": 6,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 7,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "new_str": "abdc"
        }
      },
      {
        "line": 10,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "next_list[12]": "abdc"
        }
      },
      {
        "line": 7,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "new_str": "badc"
        }
      },
      {
        "line": 10,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "next_list[13]": "badc"
        }
      },
      {
        "line": 7,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "new_str": "bdac"
        }
      },
      {
        "line": 10,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "next_list[14]": "bdac"
        }
      },
      {
        "line": 7,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 8,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "new_str": "bdca"
        }
      },
      {
        "line": 10,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "next_list[15]": "bdca"
        }
      },
      {
        "line": 6,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 7,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "new_str": "adbc"
        }
      },
      {
        "line": 10,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "next_list[16]": "adbc"
        }
      },
      {
        "line": 7,
        "step": 97,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 98,
        "action": "EXECUTE",
        "vars": {
          "new_str": "dabc"
        }
      },
      {
        "line": 10,
        "step": 99,
        "action": "EXECUTE",
        "vars": {
          "next_list[17]": "dabc"
        }
      },
      {
        "line": 7,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "new_str": "dbac"
        }
      },
      {
        "line": 10,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "next_list[18]": "dbac"
        }
      },
      {
        "line": 7,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 8,
        "step": 104,
        "action": "EXECUTE",
        "vars": {
          "new_str": "dbca"
        }
      },
      {
        "line": 10,
        "step": 105,
        "action": "EXECUTE",
        "vars": {
          "next_list[19]": "dbca"
        }
      },
      {
        "line": 6,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 7,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 8,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "new_str": "adcb"
        }
      },
      {
        "line": 10,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "next_list[20]": "adcb"
        }
      },
      {
        "line": 7,
        "step": 110,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 111,
        "action": "EXECUTE",
        "vars": {
          "new_str": "dacb"
        }
      },
      {
        "line": 10,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "next_list[21]": "dacb"
        }
      },
      {
        "line": 7,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "new_str": "dcab"
        }
      },
      {
        "line": 10,
        "step": 115,
        "action": "EXECUTE",
        "vars": {
          "next_list[22]": "dcab"
        }
      },
      {
        "line": 7,
        "step": 116,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 8,
        "step": 117,
        "action": "EXECUTE",
        "vars": {
          "new_str": "dcba"
        }
      },
      {
        "line": 10,
        "step": 118,
        "action": "EXECUTE",
        "vars": {
          "next_list[23]": "dcba"
        }
      },
      {
        "line": 11,
        "step": 119,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "abcd",
            "bacd",
            "bcad",
            "bcda",
            "acbd",
            "cabd",
            "cbad",
            "cbda",
            "acdb",
            "cadb",
            "cdab",
            "cdba",
            "abdc",
            "badc",
            "bdac",
            "bdca",
            "adbc",
            "dabc",
            "dbac",
            "dbca",
            "adcb",
            "dacb",
            "dcab",
            "dcba"
          ]
        }
      }
    ],
    "id": 1112,
    "task_id": 374,
    "exist_function": [
      "permute_string"
    ]
  },
  {
    "code": "def round_num(n,m):\r\n    a = (n //m) * m\r\n    b = a + m\r\n    return (b if n - a > b - n else a)",
    "entry_point": "round_num",
    "input": [
      4722,
      10
    ],
    "output": 4720,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 4722,
          "m": 10
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "a": 4720
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "b": 4730
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 4720
        }
      }
    ],
    "id": 1113,
    "task_id": 375,
    "exist_function": [
      "round_num"
    ]
  },
  {
    "code": "def round_num(n,m):\r\n    a = (n //m) * m\r\n    b = a + m\r\n    return (b if n - a > b - n else a)",
    "entry_point": "round_num",
    "input": [
      1111,
      5
    ],
    "output": 1110,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 1111,
          "m": 5
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "a": 1110
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "b": 1115
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 1110
        }
      }
    ],
    "id": 1114,
    "task_id": 375,
    "exist_function": [
      "round_num"
    ]
  },
  {
    "code": "def round_num(n,m):\r\n    a = (n //m) * m\r\n    b = a + m\r\n    return (b if n - a > b - n else a)",
    "entry_point": "round_num",
    "input": [
      219,
      2
    ],
    "output": 218,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 219,
          "m": 2
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "a": 218
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "b": 220
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 218
        }
      }
    ],
    "id": 1115,
    "task_id": 375,
    "exist_function": [
      "round_num"
    ]
  },
  {
    "code": "def remove_Char(s,c) :  \r\n    counts = s.count(c) \r\n    s = list(s) \r\n    while counts :  \r\n        s.remove(c) \r\n        counts -= 1 \r\n    s = '' . join(s)   \r\n    return (s)",
    "entry_point": "remove_Char",
    "input": [
      "aba",
      "a"
    ],
    "output": "b",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "s": "aba",
          "c": "a"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "counts": 2
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "s": [
            "a",
            "b",
            "a"
          ]
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "s[0]": "b",
          "s[1]": "a"
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "counts": 1
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "s": [
            "b"
          ]
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "counts": 0
        }
      },
      {
        "line": 7,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "s": "b"
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": "b"
        }
      }
    ],
    "id": 1119,
    "task_id": 377,
    "exist_function": [
      "remove_Char"
    ]
  },
  {
    "code": "def remove_Char(s,c) :  \r\n    counts = s.count(c) \r\n    s = list(s) \r\n    while counts :  \r\n        s.remove(c) \r\n        counts -= 1 \r\n    s = '' . join(s)   \r\n    return (s)",
    "entry_point": "remove_Char",
    "input": [
      "toggle",
      "g"
    ],
    "output": "tole",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "s": "toggle",
          "c": "g"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "counts": 2
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "s": [
            "t",
            "o",
            "g",
            "g",
            "l",
            "e"
          ]
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "s[3]": "l",
          "s[4]": "e"
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "counts": 1
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "s[2]": "l",
          "s[3]": "e"
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "counts": 0
        }
      },
      {
        "line": 7,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "s": "tole"
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": "tole"
        }
      }
    ],
    "id": 1120,
    "task_id": 377,
    "exist_function": [
      "remove_Char"
    ]
  },
  {
    "code": "def remove_Char(s,c) :  \r\n    counts = s.count(c) \r\n    s = list(s) \r\n    while counts :  \r\n        s.remove(c) \r\n        counts -= 1 \r\n    s = '' . join(s)   \r\n    return (s)",
    "entry_point": "remove_Char",
    "input": [
      "aabbc",
      "b"
    ],
    "output": "aac",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "s": "aabbc",
          "c": "b"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "counts": 2
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "s": [
            "a",
            "a",
            "b",
            "b",
            "c"
          ]
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "s[3]": "c"
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "counts": 1
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "s[2]": "c"
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "counts": 0
        }
      },
      {
        "line": 7,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "s": "aac"
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": "aac"
        }
      }
    ],
    "id": 1121,
    "task_id": 377,
    "exist_function": [
      "remove_Char"
    ]
  },
  {
    "code": "def multi_list(rownum,colnum):\r\n  multi_list = [[0 for col in range(colnum)] for row in range(rownum)]\r\n  for row in range(rownum):\r\n    for col in range(colnum):\r\n        multi_list[row][col]= row*col\r\n  return multi_list",
    "entry_point": "multi_list",
    "input": [
      3,
      4
    ],
    "output": [
      [
        0,
        0,
        0,
        0
      ],
      [
        0,
        1,
        2,
        3
      ],
      [
        0,
        2,
        4,
        6
      ]
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "rownum": 3,
          "colnum": 4
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "multi_list": [
            [
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0
            ]
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "row": 0
        }
      },
      {
        "line": 4,
        "step": "4~7",
        "action": "LOOP",
        "vars": {
          "col": "0→3"
        }
      },
      {
        "line": 3,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "row": 1
        }
      },
      {
        "line": 4,
        "step": "9~10",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][1]": 1
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][2]": 2
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][3]": 3
        }
      },
      {
        "line": 3,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "row": 2
        }
      },
      {
        "line": 4,
        "step": "17~18",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][1]": 2
        }
      },
      {
        "line": 4,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][2]": 4
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][3]": 6
        }
      },
      {
        "line": 6,
        "step": 24,
        "action": "RETURN",
        "vars": {
          "__return__": [
            [
              0,
              0,
              0,
              0
            ],
            [
              0,
              1,
              2,
              3
            ],
            [
              0,
              2,
              4,
              6
            ]
          ]
        }
      }
    ],
    "id": 1128,
    "task_id": 380,
    "exist_function": [
      "multi_list"
    ]
  },
  {
    "code": "def multi_list(rownum,colnum):\r\n  multi_list = [[0 for col in range(colnum)] for row in range(rownum)]\r\n  for row in range(rownum):\r\n    for col in range(colnum):\r\n        multi_list[row][col]= row*col\r\n  return multi_list",
    "entry_point": "multi_list",
    "input": [
      5,
      7
    ],
    "output": [
      [
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      [
        0,
        1,
        2,
        3,
        4,
        5,
        6
      ],
      [
        0,
        2,
        4,
        6,
        8,
        10,
        12
      ],
      [
        0,
        3,
        6,
        9,
        12,
        15,
        18
      ],
      [
        0,
        4,
        8,
        12,
        16,
        20,
        24
      ]
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "rownum": 5,
          "colnum": 7
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "multi_list": [
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ]
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "row": 0
        }
      },
      {
        "line": 4,
        "step": "4~10",
        "action": "LOOP",
        "vars": {
          "col": "0→6"
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "row": 1
        }
      },
      {
        "line": 4,
        "step": "12~13",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][1]": 1
        }
      },
      {
        "line": 4,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][2]": 2
        }
      },
      {
        "line": 4,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][3]": 3
        }
      },
      {
        "line": 4,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][4]": 4
        }
      },
      {
        "line": 4,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][5]": 5
        }
      },
      {
        "line": 4,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][6]": 6
        }
      },
      {
        "line": 3,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "row": 2
        }
      },
      {
        "line": 4,
        "step": "26~27",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][1]": 2
        }
      },
      {
        "line": 4,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][2]": 4
        }
      },
      {
        "line": 4,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][3]": 6
        }
      },
      {
        "line": 4,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][4]": 8
        }
      },
      {
        "line": 4,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][5]": 10
        }
      },
      {
        "line": 4,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][6]": 12
        }
      },
      {
        "line": 3,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "row": 3
        }
      },
      {
        "line": 4,
        "step": "40~41",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][1]": 3
        }
      },
      {
        "line": 4,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][2]": 6
        }
      },
      {
        "line": 4,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][3]": 9
        }
      },
      {
        "line": 4,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][4]": 12
        }
      },
      {
        "line": 4,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][5]": 15
        }
      },
      {
        "line": 4,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][6]": 18
        }
      },
      {
        "line": 3,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "row": 4
        }
      },
      {
        "line": 4,
        "step": "54~55",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][1]": 4
        }
      },
      {
        "line": 4,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][2]": 8
        }
      },
      {
        "line": 4,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][3]": 12
        }
      },
      {
        "line": 4,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][4]": 16
        }
      },
      {
        "line": 4,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][5]": 20
        }
      },
      {
        "line": 4,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][6]": 24
        }
      },
      {
        "line": 6,
        "step": 67,
        "action": "RETURN",
        "vars": {
          "__return__": [
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              1,
              2,
              3,
              4,
              5,
              6
            ],
            [
              0,
              2,
              4,
              6,
              8,
              10,
              12
            ],
            [
              0,
              3,
              6,
              9,
              12,
              15,
              18
            ],
            [
              0,
              4,
              8,
              12,
              16,
              20,
              24
            ]
          ]
        }
      }
    ],
    "id": 1129,
    "task_id": 380,
    "exist_function": [
      "multi_list"
    ]
  },
  {
    "code": "def multi_list(rownum,colnum):\r\n  multi_list = [[0 for col in range(colnum)] for row in range(rownum)]\r\n  for row in range(rownum):\r\n    for col in range(colnum):\r\n        multi_list[row][col]= row*col\r\n  return multi_list",
    "entry_point": "multi_list",
    "input": [
      10,
      15
    ],
    "output": [
      [
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14
      ],
      [
        0,
        2,
        4,
        6,
        8,
        10,
        12,
        14,
        16,
        18,
        20,
        22,
        24,
        26,
        28
      ],
      [
        0,
        3,
        6,
        9,
        12,
        15,
        18,
        21,
        24,
        27,
        30,
        33,
        36,
        39,
        42
      ],
      [
        0,
        4,
        8,
        12,
        16,
        20,
        24,
        28,
        32,
        36,
        40,
        44,
        48,
        52,
        56
      ],
      [
        0,
        5,
        10,
        15,
        20,
        25,
        30,
        35,
        40,
        45,
        50,
        55,
        60,
        65,
        70
      ],
      [
        0,
        6,
        12,
        18,
        24,
        30,
        36,
        42,
        48,
        54,
        60,
        66,
        72,
        78,
        84
      ],
      [
        0,
        7,
        14,
        21,
        28,
        35,
        42,
        49,
        56,
        63,
        70,
        77,
        84,
        91,
        98
      ],
      [
        0,
        8,
        16,
        24,
        32,
        40,
        48,
        56,
        64,
        72,
        80,
        88,
        96,
        104,
        112
      ],
      [
        0,
        9,
        18,
        27,
        36,
        45,
        54,
        63,
        72,
        81,
        90,
        99,
        108,
        117,
        126
      ]
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "rownum": 10,
          "colnum": 15
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "multi_list": [
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ]
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "row": 0
        }
      },
      {
        "line": 4,
        "step": "4~18",
        "action": "LOOP",
        "vars": {
          "col": "0→14"
        }
      },
      {
        "line": 3,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "row": 1
        }
      },
      {
        "line": 4,
        "step": "20~21",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][1]": 1
        }
      },
      {
        "line": 4,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][2]": 2
        }
      },
      {
        "line": 4,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][3]": 3
        }
      },
      {
        "line": 4,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][4]": 4
        }
      },
      {
        "line": 4,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][5]": 5
        }
      },
      {
        "line": 4,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][6]": 6
        }
      },
      {
        "line": 4,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "col": 7
        }
      },
      {
        "line": 5,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][7]": 7
        }
      },
      {
        "line": 4,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "col": 8
        }
      },
      {
        "line": 5,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][8]": 8
        }
      },
      {
        "line": 4,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "col": 9
        }
      },
      {
        "line": 5,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][9]": 9
        }
      },
      {
        "line": 4,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "col": 10
        }
      },
      {
        "line": 5,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][10]": 10
        }
      },
      {
        "line": 4,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "col": 11
        }
      },
      {
        "line": 5,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][11]": 11
        }
      },
      {
        "line": 4,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "col": 12
        }
      },
      {
        "line": 5,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][12]": 12
        }
      },
      {
        "line": 4,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "col": 13
        }
      },
      {
        "line": 5,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][13]": 13
        }
      },
      {
        "line": 4,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "col": 14
        }
      },
      {
        "line": 5,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "multi_list[1][14]": 14
        }
      },
      {
        "line": 3,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "row": 2
        }
      },
      {
        "line": 4,
        "step": "50~51",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][1]": 2
        }
      },
      {
        "line": 4,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][2]": 4
        }
      },
      {
        "line": 4,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][3]": 6
        }
      },
      {
        "line": 4,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][4]": 8
        }
      },
      {
        "line": 4,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][5]": 10
        }
      },
      {
        "line": 4,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][6]": 12
        }
      },
      {
        "line": 4,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "col": 7
        }
      },
      {
        "line": 5,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][7]": 14
        }
      },
      {
        "line": 4,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "col": 8
        }
      },
      {
        "line": 5,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][8]": 16
        }
      },
      {
        "line": 4,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "col": 9
        }
      },
      {
        "line": 5,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][9]": 18
        }
      },
      {
        "line": 4,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "col": 10
        }
      },
      {
        "line": 5,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][10]": 20
        }
      },
      {
        "line": 4,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "col": 11
        }
      },
      {
        "line": 5,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][11]": 22
        }
      },
      {
        "line": 4,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "col": 12
        }
      },
      {
        "line": 5,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][12]": 24
        }
      },
      {
        "line": 4,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "col": 13
        }
      },
      {
        "line": 5,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][13]": 26
        }
      },
      {
        "line": 4,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "col": 14
        }
      },
      {
        "line": 5,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "multi_list[2][14]": 28
        }
      },
      {
        "line": 3,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "row": 3
        }
      },
      {
        "line": 4,
        "step": "80~81",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][1]": 3
        }
      },
      {
        "line": 4,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][2]": 6
        }
      },
      {
        "line": 4,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][3]": 9
        }
      },
      {
        "line": 4,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][4]": 12
        }
      },
      {
        "line": 4,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][5]": 15
        }
      },
      {
        "line": 4,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][6]": 18
        }
      },
      {
        "line": 4,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "col": 7
        }
      },
      {
        "line": 5,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][7]": 21
        }
      },
      {
        "line": 4,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "col": 8
        }
      },
      {
        "line": 5,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][8]": 24
        }
      },
      {
        "line": 4,
        "step": 97,
        "action": "EXECUTE",
        "vars": {
          "col": 9
        }
      },
      {
        "line": 5,
        "step": 98,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][9]": 27
        }
      },
      {
        "line": 4,
        "step": 99,
        "action": "EXECUTE",
        "vars": {
          "col": 10
        }
      },
      {
        "line": 5,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][10]": 30
        }
      },
      {
        "line": 4,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "col": 11
        }
      },
      {
        "line": 5,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][11]": 33
        }
      },
      {
        "line": 4,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "col": 12
        }
      },
      {
        "line": 5,
        "step": 104,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][12]": 36
        }
      },
      {
        "line": 4,
        "step": 105,
        "action": "EXECUTE",
        "vars": {
          "col": 13
        }
      },
      {
        "line": 5,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][13]": 39
        }
      },
      {
        "line": 4,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "col": 14
        }
      },
      {
        "line": 5,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "multi_list[3][14]": 42
        }
      },
      {
        "line": 3,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "row": 4
        }
      },
      {
        "line": 4,
        "step": "110~111",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][1]": 4
        }
      },
      {
        "line": 4,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][2]": 8
        }
      },
      {
        "line": 4,
        "step": 115,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 116,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][3]": 12
        }
      },
      {
        "line": 4,
        "step": 117,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 118,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][4]": 16
        }
      },
      {
        "line": 4,
        "step": 119,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 120,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][5]": 20
        }
      },
      {
        "line": 4,
        "step": 121,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 122,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][6]": 24
        }
      },
      {
        "line": 4,
        "step": 123,
        "action": "EXECUTE",
        "vars": {
          "col": 7
        }
      },
      {
        "line": 5,
        "step": 124,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][7]": 28
        }
      },
      {
        "line": 4,
        "step": 125,
        "action": "EXECUTE",
        "vars": {
          "col": 8
        }
      },
      {
        "line": 5,
        "step": 126,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][8]": 32
        }
      },
      {
        "line": 4,
        "step": 127,
        "action": "EXECUTE",
        "vars": {
          "col": 9
        }
      },
      {
        "line": 5,
        "step": 128,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][9]": 36
        }
      },
      {
        "line": 4,
        "step": 129,
        "action": "EXECUTE",
        "vars": {
          "col": 10
        }
      },
      {
        "line": 5,
        "step": 130,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][10]": 40
        }
      },
      {
        "line": 4,
        "step": 131,
        "action": "EXECUTE",
        "vars": {
          "col": 11
        }
      },
      {
        "line": 5,
        "step": 132,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][11]": 44
        }
      },
      {
        "line": 4,
        "step": 133,
        "action": "EXECUTE",
        "vars": {
          "col": 12
        }
      },
      {
        "line": 5,
        "step": 134,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][12]": 48
        }
      },
      {
        "line": 4,
        "step": 135,
        "action": "EXECUTE",
        "vars": {
          "col": 13
        }
      },
      {
        "line": 5,
        "step": 136,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][13]": 52
        }
      },
      {
        "line": 4,
        "step": 137,
        "action": "EXECUTE",
        "vars": {
          "col": 14
        }
      },
      {
        "line": 5,
        "step": 138,
        "action": "EXECUTE",
        "vars": {
          "multi_list[4][14]": 56
        }
      },
      {
        "line": 3,
        "step": 139,
        "action": "EXECUTE",
        "vars": {
          "row": 5
        }
      },
      {
        "line": 4,
        "step": "140~141",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 142,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][1]": 5
        }
      },
      {
        "line": 4,
        "step": 143,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 144,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][2]": 10
        }
      },
      {
        "line": 4,
        "step": 145,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 146,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][3]": 15
        }
      },
      {
        "line": 4,
        "step": 147,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 148,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][4]": 20
        }
      },
      {
        "line": 4,
        "step": 149,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 150,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][5]": 25
        }
      },
      {
        "line": 4,
        "step": 151,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 152,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][6]": 30
        }
      },
      {
        "line": 4,
        "step": 153,
        "action": "EXECUTE",
        "vars": {
          "col": 7
        }
      },
      {
        "line": 5,
        "step": 154,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][7]": 35
        }
      },
      {
        "line": 4,
        "step": 155,
        "action": "EXECUTE",
        "vars": {
          "col": 8
        }
      },
      {
        "line": 5,
        "step": 156,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][8]": 40
        }
      },
      {
        "line": 4,
        "step": 157,
        "action": "EXECUTE",
        "vars": {
          "col": 9
        }
      },
      {
        "line": 5,
        "step": 158,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][9]": 45
        }
      },
      {
        "line": 4,
        "step": 159,
        "action": "EXECUTE",
        "vars": {
          "col": 10
        }
      },
      {
        "line": 5,
        "step": 160,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][10]": 50
        }
      },
      {
        "line": 4,
        "step": 161,
        "action": "EXECUTE",
        "vars": {
          "col": 11
        }
      },
      {
        "line": 5,
        "step": 162,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][11]": 55
        }
      },
      {
        "line": 4,
        "step": 163,
        "action": "EXECUTE",
        "vars": {
          "col": 12
        }
      },
      {
        "line": 5,
        "step": 164,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][12]": 60
        }
      },
      {
        "line": 4,
        "step": 165,
        "action": "EXECUTE",
        "vars": {
          "col": 13
        }
      },
      {
        "line": 5,
        "step": 166,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][13]": 65
        }
      },
      {
        "line": 4,
        "step": 167,
        "action": "EXECUTE",
        "vars": {
          "col": 14
        }
      },
      {
        "line": 5,
        "step": 168,
        "action": "EXECUTE",
        "vars": {
          "multi_list[5][14]": 70
        }
      },
      {
        "line": 3,
        "step": 169,
        "action": "EXECUTE",
        "vars": {
          "row": 6
        }
      },
      {
        "line": 4,
        "step": "170~171",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 172,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][1]": 6
        }
      },
      {
        "line": 4,
        "step": 173,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 174,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][2]": 12
        }
      },
      {
        "line": 4,
        "step": 175,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 176,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][3]": 18
        }
      },
      {
        "line": 4,
        "step": 177,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 178,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][4]": 24
        }
      },
      {
        "line": 4,
        "step": 179,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 180,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][5]": 30
        }
      },
      {
        "line": 4,
        "step": 181,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 182,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][6]": 36
        }
      },
      {
        "line": 4,
        "step": 183,
        "action": "EXECUTE",
        "vars": {
          "col": 7
        }
      },
      {
        "line": 5,
        "step": 184,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][7]": 42
        }
      },
      {
        "line": 4,
        "step": 185,
        "action": "EXECUTE",
        "vars": {
          "col": 8
        }
      },
      {
        "line": 5,
        "step": 186,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][8]": 48
        }
      },
      {
        "line": 4,
        "step": 187,
        "action": "EXECUTE",
        "vars": {
          "col": 9
        }
      },
      {
        "line": 5,
        "step": 188,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][9]": 54
        }
      },
      {
        "line": 4,
        "step": 189,
        "action": "EXECUTE",
        "vars": {
          "col": 10
        }
      },
      {
        "line": 5,
        "step": 190,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][10]": 60
        }
      },
      {
        "line": 4,
        "step": 191,
        "action": "EXECUTE",
        "vars": {
          "col": 11
        }
      },
      {
        "line": 5,
        "step": 192,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][11]": 66
        }
      },
      {
        "line": 4,
        "step": 193,
        "action": "EXECUTE",
        "vars": {
          "col": 12
        }
      },
      {
        "line": 5,
        "step": 194,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][12]": 72
        }
      },
      {
        "line": 4,
        "step": 195,
        "action": "EXECUTE",
        "vars": {
          "col": 13
        }
      },
      {
        "line": 5,
        "step": 196,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][13]": 78
        }
      },
      {
        "line": 4,
        "step": 197,
        "action": "EXECUTE",
        "vars": {
          "col": 14
        }
      },
      {
        "line": 5,
        "step": 198,
        "action": "EXECUTE",
        "vars": {
          "multi_list[6][14]": 84
        }
      },
      {
        "line": 3,
        "step": 199,
        "action": "EXECUTE",
        "vars": {
          "row": 7
        }
      },
      {
        "line": 4,
        "step": "200~201",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 202,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][1]": 7
        }
      },
      {
        "line": 4,
        "step": 203,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 204,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][2]": 14
        }
      },
      {
        "line": 4,
        "step": 205,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 206,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][3]": 21
        }
      },
      {
        "line": 4,
        "step": 207,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 208,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][4]": 28
        }
      },
      {
        "line": 4,
        "step": 209,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 210,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][5]": 35
        }
      },
      {
        "line": 4,
        "step": 211,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 212,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][6]": 42
        }
      },
      {
        "line": 4,
        "step": 213,
        "action": "EXECUTE",
        "vars": {
          "col": 7
        }
      },
      {
        "line": 5,
        "step": 214,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][7]": 49
        }
      },
      {
        "line": 4,
        "step": 215,
        "action": "EXECUTE",
        "vars": {
          "col": 8
        }
      },
      {
        "line": 5,
        "step": 216,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][8]": 56
        }
      },
      {
        "line": 4,
        "step": 217,
        "action": "EXECUTE",
        "vars": {
          "col": 9
        }
      },
      {
        "line": 5,
        "step": 218,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][9]": 63
        }
      },
      {
        "line": 4,
        "step": 219,
        "action": "EXECUTE",
        "vars": {
          "col": 10
        }
      },
      {
        "line": 5,
        "step": 220,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][10]": 70
        }
      },
      {
        "line": 4,
        "step": 221,
        "action": "EXECUTE",
        "vars": {
          "col": 11
        }
      },
      {
        "line": 5,
        "step": 222,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][11]": 77
        }
      },
      {
        "line": 4,
        "step": 223,
        "action": "EXECUTE",
        "vars": {
          "col": 12
        }
      },
      {
        "line": 5,
        "step": 224,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][12]": 84
        }
      },
      {
        "line": 4,
        "step": 225,
        "action": "EXECUTE",
        "vars": {
          "col": 13
        }
      },
      {
        "line": 5,
        "step": 226,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][13]": 91
        }
      },
      {
        "line": 4,
        "step": 227,
        "action": "EXECUTE",
        "vars": {
          "col": 14
        }
      },
      {
        "line": 5,
        "step": 228,
        "action": "EXECUTE",
        "vars": {
          "multi_list[7][14]": 98
        }
      },
      {
        "line": 3,
        "step": 229,
        "action": "EXECUTE",
        "vars": {
          "row": 8
        }
      },
      {
        "line": 4,
        "step": "230~231",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 232,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][1]": 8
        }
      },
      {
        "line": 4,
        "step": 233,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 234,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][2]": 16
        }
      },
      {
        "line": 4,
        "step": 235,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 236,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][3]": 24
        }
      },
      {
        "line": 4,
        "step": 237,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 238,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][4]": 32
        }
      },
      {
        "line": 4,
        "step": 239,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 240,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][5]": 40
        }
      },
      {
        "line": 4,
        "step": 241,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 242,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][6]": 48
        }
      },
      {
        "line": 4,
        "step": 243,
        "action": "EXECUTE",
        "vars": {
          "col": 7
        }
      },
      {
        "line": 5,
        "step": 244,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][7]": 56
        }
      },
      {
        "line": 4,
        "step": 245,
        "action": "EXECUTE",
        "vars": {
          "col": 8
        }
      },
      {
        "line": 5,
        "step": 246,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][8]": 64
        }
      },
      {
        "line": 4,
        "step": 247,
        "action": "EXECUTE",
        "vars": {
          "col": 9
        }
      },
      {
        "line": 5,
        "step": 248,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][9]": 72
        }
      },
      {
        "line": 4,
        "step": 249,
        "action": "EXECUTE",
        "vars": {
          "col": 10
        }
      },
      {
        "line": 5,
        "step": 250,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][10]": 80
        }
      },
      {
        "line": 4,
        "step": 251,
        "action": "EXECUTE",
        "vars": {
          "col": 11
        }
      },
      {
        "line": 5,
        "step": 252,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][11]": 88
        }
      },
      {
        "line": 4,
        "step": 253,
        "action": "EXECUTE",
        "vars": {
          "col": 12
        }
      },
      {
        "line": 5,
        "step": 254,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][12]": 96
        }
      },
      {
        "line": 4,
        "step": 255,
        "action": "EXECUTE",
        "vars": {
          "col": 13
        }
      },
      {
        "line": 5,
        "step": 256,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][13]": 104
        }
      },
      {
        "line": 4,
        "step": 257,
        "action": "EXECUTE",
        "vars": {
          "col": 14
        }
      },
      {
        "line": 5,
        "step": 258,
        "action": "EXECUTE",
        "vars": {
          "multi_list[8][14]": 112
        }
      },
      {
        "line": 3,
        "step": 259,
        "action": "EXECUTE",
        "vars": {
          "row": 9
        }
      },
      {
        "line": 4,
        "step": "260~261",
        "action": "LOOP",
        "vars": {
          "col": "0→1"
        }
      },
      {
        "line": 5,
        "step": 262,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][1]": 9
        }
      },
      {
        "line": 4,
        "step": 263,
        "action": "EXECUTE",
        "vars": {
          "col": 2
        }
      },
      {
        "line": 5,
        "step": 264,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][2]": 18
        }
      },
      {
        "line": 4,
        "step": 265,
        "action": "EXECUTE",
        "vars": {
          "col": 3
        }
      },
      {
        "line": 5,
        "step": 266,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][3]": 27
        }
      },
      {
        "line": 4,
        "step": 267,
        "action": "EXECUTE",
        "vars": {
          "col": 4
        }
      },
      {
        "line": 5,
        "step": 268,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][4]": 36
        }
      },
      {
        "line": 4,
        "step": 269,
        "action": "EXECUTE",
        "vars": {
          "col": 5
        }
      },
      {
        "line": 5,
        "step": 270,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][5]": 45
        }
      },
      {
        "line": 4,
        "step": 271,
        "action": "EXECUTE",
        "vars": {
          "col": 6
        }
      },
      {
        "line": 5,
        "step": 272,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][6]": 54
        }
      },
      {
        "line": 4,
        "step": 273,
        "action": "EXECUTE",
        "vars": {
          "col": 7
        }
      },
      {
        "line": 5,
        "step": 274,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][7]": 63
        }
      },
      {
        "line": 4,
        "step": 275,
        "action": "EXECUTE",
        "vars": {
          "col": 8
        }
      },
      {
        "line": 5,
        "step": 276,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][8]": 72
        }
      },
      {
        "line": 4,
        "step": 277,
        "action": "EXECUTE",
        "vars": {
          "col": 9
        }
      },
      {
        "line": 5,
        "step": 278,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][9]": 81
        }
      },
      {
        "line": 4,
        "step": 279,
        "action": "EXECUTE",
        "vars": {
          "col": 10
        }
      },
      {
        "line": 5,
        "step": 280,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][10]": 90
        }
      },
      {
        "line": 4,
        "step": 281,
        "action": "EXECUTE",
        "vars": {
          "col": 11
        }
      },
      {
        "line": 5,
        "step": 282,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][11]": 99
        }
      },
      {
        "line": 4,
        "step": 283,
        "action": "EXECUTE",
        "vars": {
          "col": 12
        }
      },
      {
        "line": 5,
        "step": 284,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][12]": 108
        }
      },
      {
        "line": 4,
        "step": 285,
        "action": "EXECUTE",
        "vars": {
          "col": 13
        }
      },
      {
        "line": 5,
        "step": 286,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][13]": 117
        }
      },
      {
        "line": 4,
        "step": 287,
        "action": "EXECUTE",
        "vars": {
          "col": 14
        }
      },
      {
        "line": 5,
        "step": 288,
        "action": "EXECUTE",
        "vars": {
          "multi_list[9][14]": 126
        }
      },
      {
        "line": 6,
        "step": 289,
        "action": "RETURN",
        "vars": {
          "__return__": [
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14
            ],
            [
              0,
              2,
              4,
              6,
              8,
              10,
              12,
              14,
              16,
              18,
              20,
              22,
              24,
              26,
              28
            ],
            [
              0,
              3,
              6,
              9,
              12,
              15,
              18,
              21,
              24,
              27,
              30,
              33,
              36,
              39,
              42
            ],
            [
              0,
              4,
              8,
              12,
              16,
              20,
              24,
              28,
              32,
              36,
              40,
              44,
              48,
              52,
              56
            ],
            [
              0,
              5,
              10,
              15,
              20,
              25,
              30,
              35,
              40,
              45,
              50,
              55,
              60,
              65,
              70
            ],
            [
              0,
              6,
              12,
              18,
              24,
              30,
              36,
              42,
              48,
              54,
              60,
              66,
              72,
              78,
              84
            ],
            [
              0,
              7,
              14,
              21,
              28,
              35,
              42,
              49,
              56,
              63,
              70,
              77,
              84,
              91,
              98
            ],
            [
              0,
              8,
              16,
              24,
              32,
              40,
              48,
              56,
              64,
              72,
              80,
              88,
              96,
              104,
              112
            ],
            [
              0,
              9,
              18,
              27,
              36,
              45,
              54,
              63,
              72,
              81,
              90,
              99,
              108,
              117,
              126
            ]
          ]
        }
      }
    ],
    "id": 1130,
    "task_id": 380,
    "exist_function": [
      "multi_list"
    ]
  },
  {
    "code": "def find_rotation_count(A):\r\n    (left, right) = (0, len(A) - 1)\r\n    while left <= right:\r\n        if A[left] <= A[right]:\r\n            return left\r\n        mid = (left + right) // 2\r\n        next = (mid + 1) % len(A)\r\n        prev = (mid - 1 + len(A)) % len(A)\r\n        if A[mid] <= A[next] and A[mid] <= A[prev]:\r\n            return mid\r\n        elif A[mid] <= A[right]:\r\n            right = mid - 1\r\n        elif A[mid] >= A[left]:\r\n            left = mid + 1\r\n    return -1",
    "entry_point": "find_rotation_count",
    "input": [
      [
        8,
        9,
        10,
        1,
        2,
        3,
        4,
        5,
        6,
        7
      ]
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "A": [
            8,
            9,
            10,
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "left": 0,
          "right": 9
        }
      },
      {
        "line": 6,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "mid": 4
        }
      },
      {
        "line": 7,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "next": 5
        }
      },
      {
        "line": 8,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "prev": 3
        }
      },
      {
        "line": 12,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "right": 3
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "mid": 1
        }
      },
      {
        "line": 7,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "next": 2
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "prev": 0
        }
      },
      {
        "line": 14,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "left": 2
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "mid": 2
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "next": 3
        }
      },
      {
        "line": 8,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "prev": 1
        }
      },
      {
        "line": 14,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "left": 3
        }
      },
      {
        "line": 5,
        "step": 15,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 1134,
    "task_id": 382,
    "exist_function": [
      "find_rotation_count"
    ]
  },
  {
    "code": "def find_rotation_count(A):\r\n    (left, right) = (0, len(A) - 1)\r\n    while left <= right:\r\n        if A[left] <= A[right]:\r\n            return left\r\n        mid = (left + right) // 2\r\n        next = (mid + 1) % len(A)\r\n        prev = (mid - 1 + len(A)) % len(A)\r\n        if A[mid] <= A[next] and A[mid] <= A[prev]:\r\n            return mid\r\n        elif A[mid] <= A[right]:\r\n            right = mid - 1\r\n        elif A[mid] >= A[left]:\r\n            left = mid + 1\r\n    return -1",
    "entry_point": "find_rotation_count",
    "input": [
      [
        8,
        9,
        10,
        2,
        5,
        6
      ]
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "A": [
            8,
            9,
            10,
            2,
            5,
            6
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "left": 0,
          "right": 5
        }
      },
      {
        "line": 6,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "mid": 2
        }
      },
      {
        "line": 7,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "next": 3
        }
      },
      {
        "line": 8,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "prev": 1
        }
      },
      {
        "line": 14,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "left": 3
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 1135,
    "task_id": 382,
    "exist_function": [
      "find_rotation_count"
    ]
  },
  {
    "code": "def even_bit_toggle_number(n) : \r\n    res = 0; count = 0; temp = n    \r\n    while(temp > 0 ) : \r\n        if (count % 2 == 0) : \r\n            res = res | (1 << count)      \r\n        count = count + 1\r\n        temp >>= 1 \r\n    return n ^ res",
    "entry_point": "even_bit_toggle_number",
    "input": [
      10
    ],
    "output": 15,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 10
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "count": 0,
          "temp": 10,
          "res": 0
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "res": 1
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "temp": 5
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 7,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "temp": 2
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "res": 5
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "temp": 1
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "count": 4
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "temp": 0
        }
      },
      {
        "line": 8,
        "step": 13,
        "action": "RETURN",
        "vars": {
          "__return__": 15
        }
      }
    ],
    "id": 1137,
    "task_id": 383,
    "exist_function": [
      "even_bit_toggle_number"
    ]
  },
  {
    "code": "def even_bit_toggle_number(n) : \r\n    res = 0; count = 0; temp = n    \r\n    while(temp > 0 ) : \r\n        if (count % 2 == 0) : \r\n            res = res | (1 << count)      \r\n        count = count + 1\r\n        temp >>= 1 \r\n    return n ^ res",
    "entry_point": "even_bit_toggle_number",
    "input": [
      20
    ],
    "output": 1,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 20
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "count": 0,
          "temp": 20,
          "res": 0
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "res": 1
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "temp": 10
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 7,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "temp": 5
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "res": 5
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "temp": 2
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "count": 4
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "temp": 1
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "res": 21
        }
      },
      {
        "line": 6,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "count": 5
        }
      },
      {
        "line": 7,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "temp": 0
        }
      },
      {
        "line": 8,
        "step": 16,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 1138,
    "task_id": 383,
    "exist_function": [
      "even_bit_toggle_number"
    ]
  },
  {
    "code": "def even_bit_toggle_number(n) : \r\n    res = 0; count = 0; temp = n    \r\n    while(temp > 0 ) : \r\n        if (count % 2 == 0) : \r\n            res = res | (1 << count)      \r\n        count = count + 1\r\n        temp >>= 1 \r\n    return n ^ res",
    "entry_point": "even_bit_toggle_number",
    "input": [
      30
    ],
    "output": 11,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 30
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "count": 0,
          "temp": 30,
          "res": 0
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "res": 1
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "temp": 15
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 7,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "temp": 7
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "res": 5
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "temp": 3
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "count": 4
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "temp": 1
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "res": 21
        }
      },
      {
        "line": 6,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "count": 5
        }
      },
      {
        "line": 7,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "temp": 0
        }
      },
      {
        "line": 8,
        "step": 16,
        "action": "RETURN",
        "vars": {
          "__return__": 11
        }
      }
    ],
    "id": 1139,
    "task_id": 383,
    "exist_function": [
      "even_bit_toggle_number"
    ]
  },
  {
    "code": "def frequency_Of_Smallest(n,arr): \r\n    mn = arr[0] \r\n    freq = 1\r\n    for i in range(1,n): \r\n        if (arr[i] < mn): \r\n            mn = arr[i] \r\n            freq = 1\r\n        elif (arr[i] == mn): \r\n            freq += 1\r\n    return freq",
    "entry_point": "frequency_Of_Smallest",
    "input": [
      5,
      [
        1,
        2,
        3,
        4,
        3
      ]
    ],
    "output": 1,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 5,
          "arr": [
            1,
            2,
            3,
            4,
            3
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "mn": 1
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "freq": 1
        }
      },
      {
        "line": 4,
        "step": "4~7",
        "action": "LOOP",
        "vars": {
          "i": "1→4"
        }
      },
      {
        "line": 10,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 1140,
    "task_id": 384,
    "exist_function": [
      "frequency_Of_Smallest"
    ]
  },
  {
    "code": "def frequency_Of_Smallest(n,arr): \r\n    mn = arr[0] \r\n    freq = 1\r\n    for i in range(1,n): \r\n        if (arr[i] < mn): \r\n            mn = arr[i] \r\n            freq = 1\r\n        elif (arr[i] == mn): \r\n            freq += 1\r\n    return freq",
    "entry_point": "frequency_Of_Smallest",
    "input": [
      7,
      [
        3,
        1,
        2,
        5,
        6,
        2,
        3
      ]
    ],
    "output": 1,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 7,
          "arr": [
            3,
            1,
            2,
            5,
            6,
            2,
            3
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "mn": 3
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "freq": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "mn": 1
        }
      },
      {
        "line": 4,
        "step": "6~10",
        "action": "LOOP",
        "vars": {
          "i": "2→6"
        }
      },
      {
        "line": 10,
        "step": 11,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 1141,
    "task_id": 384,
    "exist_function": [
      "frequency_Of_Smallest"
    ]
  },
  {
    "code": "def frequency_Of_Smallest(n,arr): \r\n    mn = arr[0] \r\n    freq = 1\r\n    for i in range(1,n): \r\n        if (arr[i] < mn): \r\n            mn = arr[i] \r\n            freq = 1\r\n        elif (arr[i] == mn): \r\n            freq += 1\r\n    return freq",
    "entry_point": "frequency_Of_Smallest",
    "input": [
      7,
      [
        3,
        3,
        6,
        3,
        7,
        4,
        9
      ]
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 7,
          "arr": [
            3,
            3,
            6,
            3,
            7,
            4,
            9
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "mn": 3
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "freq": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 9,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "freq": 2
        }
      },
      {
        "line": 4,
        "step": "6~7",
        "action": "LOOP",
        "vars": {
          "i": "2→3"
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "freq": 3
        }
      },
      {
        "line": 4,
        "step": "9~11",
        "action": "LOOP",
        "vars": {
          "i": "4→6"
        }
      },
      {
        "line": 10,
        "step": 12,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 1142,
    "task_id": 384,
    "exist_function": [
      "frequency_Of_Smallest"
    ]
  },
  {
    "code": "def get_perrin(n):\r\n  if (n == 0):\r\n    return 3\r\n  if (n == 1):\r\n    return 0\r\n  if (n == 2):\r\n    return 2 \r\n  return get_perrin(n - 2) + get_perrin(n - 3)",
    "entry_point": "get_perrin",
    "input": [
      9
    ],
    "output": 12,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 0
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "n": 0
        }
      },
      {
        "line": 8,
        "step": 3,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "n": 0
        }
      },
      {
        "line": 8,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 5
        }
      },
      {
        "line": 3,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "n": 0
        }
      },
      {
        "line": 8,
        "step": 5,
        "action": "RETURN",
        "vars": {
          "__return__": 12
        }
      }
    ],
    "id": 1143,
    "task_id": 385,
    "exist_function": [
      "get_perrin"
    ]
  },
  {
    "code": "def get_perrin(n):\r\n  if (n == 0):\r\n    return 3\r\n  if (n == 1):\r\n    return 0\r\n  if (n == 2):\r\n    return 2 \r\n  return get_perrin(n - 2) + get_perrin(n - 3)",
    "entry_point": "get_perrin",
    "input": [
      6
    ],
    "output": 5,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 0
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "n": 0
        }
      },
      {
        "line": 8,
        "step": 3,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "n": 0
        }
      },
      {
        "line": 8,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 5
        }
      }
    ],
    "id": 1145,
    "task_id": 385,
    "exist_function": [
      "get_perrin"
    ]
  },
  {
    "code": "def swap_count(s):\r\n\tchars = s\r\n\tcount_left = 0\r\n\tcount_right = 0\r\n\tswap = 0\r\n\timbalance = 0; \r\n\tfor i in range(len(chars)):\r\n\t\tif chars[i] == '[':\r\n\t\t\tcount_left += 1\r\n\t\t\tif imbalance > 0:\r\n\t\t\t\tswap += imbalance\r\n\t\t\t\timbalance -= 1\r\n\t\telif chars[i] == ']':\r\n\t\t\tcount_right += 1\r\n\t\t\timbalance = (count_right - count_left) \r\n\treturn swap",
    "entry_point": "swap_count",
    "input": [
      "[]][]["
    ],
    "output": 2,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "s": "[]][]["
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "chars": "[]][]["
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "count_left": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "count_right": 0
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "swap": 0
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "imbalance": 0
        }
      },
      {
        "line": 7,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "count_left": 1
        }
      },
      {
        "line": 7,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 14,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "count_right": 1
        }
      },
      {
        "line": 7,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 14,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "count_right": 2
        }
      },
      {
        "line": 15,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "imbalance": 1
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 9,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "count_left": 2
        }
      },
      {
        "line": 11,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "swap": 1
        }
      },
      {
        "line": 12,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "imbalance": 0
        }
      },
      {
        "line": 7,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 14,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "count_right": 3
        }
      },
      {
        "line": 15,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "imbalance": 1
        }
      },
      {
        "line": 7,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 9,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "count_left": 3
        }
      },
      {
        "line": 11,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "swap": 2
        }
      },
      {
        "line": 12,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "imbalance": 0
        }
      },
      {
        "line": 16,
        "step": 25,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 1146,
    "task_id": 386,
    "exist_function": [
      "swap_count"
    ]
  },
  {
    "code": "def swap_count(s):\r\n\tchars = s\r\n\tcount_left = 0\r\n\tcount_right = 0\r\n\tswap = 0\r\n\timbalance = 0; \r\n\tfor i in range(len(chars)):\r\n\t\tif chars[i] == '[':\r\n\t\t\tcount_left += 1\r\n\t\t\tif imbalance > 0:\r\n\t\t\t\tswap += imbalance\r\n\t\t\t\timbalance -= 1\r\n\t\telif chars[i] == ']':\r\n\t\t\tcount_right += 1\r\n\t\t\timbalance = (count_right - count_left) \r\n\treturn swap",
    "entry_point": "swap_count",
    "input": [
      "[[][]]]["
    ],
    "output": 1,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "s": "[[][]]]["
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "chars": "[[][]]]["
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "count_left": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "count_right": 0
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "swap": 0
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "imbalance": 0
        }
      },
      {
        "line": 7,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "count_left": 1
        }
      },
      {
        "line": 7,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 9,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "count_left": 2
        }
      },
      {
        "line": 7,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 14,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "count_right": 1
        }
      },
      {
        "line": 15,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "imbalance": -1
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 9,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "count_left": 3
        }
      },
      {
        "line": 7,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 14,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "count_right": 2
        }
      },
      {
        "line": 7,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 14,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "count_right": 3
        }
      },
      {
        "line": 15,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "imbalance": 0
        }
      },
      {
        "line": 7,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 14,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "count_right": 4
        }
      },
      {
        "line": 15,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "imbalance": 1
        }
      },
      {
        "line": 7,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 9,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "count_left": 4
        }
      },
      {
        "line": 11,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "swap": 1
        }
      },
      {
        "line": 12,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "imbalance": 0
        }
      },
      {
        "line": 16,
        "step": 28,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 1148,
    "task_id": 386,
    "exist_function": [
      "swap_count"
    ]
  },
  {
    "code": "def highest_Power_of_2(n): \r\n    res = 0; \r\n    for i in range(n, 0, -1): \r\n        if ((i & (i - 1)) == 0): \r\n            res = i; \r\n            break; \r\n    return res;",
    "entry_point": "highest_Power_of_2",
    "input": [
      10
    ],
    "output": 8,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 10
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 10
        }
      },
      {
        "line": 3,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "res": 8
        }
      },
      {
        "line": 7,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": 8
        }
      }
    ],
    "id": 1152,
    "task_id": 388,
    "exist_function": [
      "highest_Power_of_2"
    ]
  },
  {
    "code": "def highest_Power_of_2(n): \r\n    res = 0; \r\n    for i in range(n, 0, -1): \r\n        if ((i & (i - 1)) == 0): \r\n            res = i; \r\n            break; \r\n    return res;",
    "entry_point": "highest_Power_of_2",
    "input": [
      19
    ],
    "output": 16,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 19
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 19
        }
      },
      {
        "line": 3,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 18
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 17
        }
      },
      {
        "line": 3,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 16
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "res": 16
        }
      },
      {
        "line": 7,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": 16
        }
      }
    ],
    "id": 1153,
    "task_id": 388,
    "exist_function": [
      "highest_Power_of_2"
    ]
  },
  {
    "code": "def highest_Power_of_2(n): \r\n    res = 0; \r\n    for i in range(n, 0, -1): \r\n        if ((i & (i - 1)) == 0): \r\n            res = i; \r\n            break; \r\n    return res;",
    "entry_point": "highest_Power_of_2",
    "input": [
      32
    ],
    "output": 32,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 32
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 32
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "res": 32
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "RETURN",
        "vars": {
          "__return__": 32
        }
      }
    ],
    "id": 1154,
    "task_id": 388,
    "exist_function": [
      "highest_Power_of_2"
    ]
  },
  {
    "code": "def find_lucas(n): \r\n\tif (n == 0): \r\n\t\treturn 2\r\n\tif (n == 1): \r\n\t\treturn 1\r\n\treturn find_lucas(n - 1) + find_lucas(n - 2)",
    "entry_point": "find_lucas",
    "input": [
      9
    ],
    "output": 76,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 1
        }
      },
      {
        "line": 5,
        "step": 2,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      },
      {
        "line": 5,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "n": 1
        }
      },
      {
        "line": 6,
        "step": 3,
        "action": "RETURN",
        "vars": {
          "__return__": 4
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "n": 1
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 11
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "n": 1
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "RETURN",
        "vars": {
          "__return__": 29
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "n": 1
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "RETURN",
        "vars": {
          "__return__": 76
        }
      }
    ],
    "id": 1155,
    "task_id": 389,
    "exist_function": [
      "find_lucas"
    ]
  },
  {
    "code": "def find_lucas(n): \r\n\tif (n == 0): \r\n\t\treturn 2\r\n\tif (n == 1): \r\n\t\treturn 1\r\n\treturn find_lucas(n - 1) + find_lucas(n - 2)",
    "entry_point": "find_lucas",
    "input": [
      4
    ],
    "output": 7,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 0
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "n": 0
        }
      },
      {
        "line": 6,
        "step": 3,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "n": 0
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 7
        }
      }
    ],
    "id": 1156,
    "task_id": 389,
    "exist_function": [
      "find_lucas"
    ]
  },
  {
    "code": "def get_max_sum (n):\r\n\tres = list()\r\n\tres.append(0)\r\n\tres.append(1)\r\n\ti = 2\r\n\twhile i<n + 1:\r\n\t\tres.append(max(i, (res[int(i / 2)] \r\n\t\t\t\t\t\t+ res[int(i / 3)] +\r\n\t\t\t\t\t\t\tres[int(i / 4)]\r\n\t\t\t\t\t\t+ res[int(i / 5)])))\r\n\t\ti = i + 1\r\n\treturn res[n]",
    "entry_point": "get_max_sum",
    "input": [
      60
    ],
    "output": 106,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 60
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "res[0]": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "res[1]": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "res[2]": 2
        }
      },
      {
        "line": 11,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 7,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "res[3]": 3
        }
      },
      {
        "line": 11,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "res[4]": 4
        }
      },
      {
        "line": 11,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "res[5]": 5
        }
      },
      {
        "line": 11,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "res[6]": 7
        }
      },
      {
        "line": 11,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 7,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "res[7]": 7
        }
      },
      {
        "line": 11,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 7,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "res[8]": 9
        }
      },
      {
        "line": 11,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 7,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "res[9]": 10
        }
      },
      {
        "line": 11,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 10
        }
      },
      {
        "line": 7,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "res[10]": 12
        }
      },
      {
        "line": 11,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "i": 11
        }
      },
      {
        "line": 7,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "res[11]": 12
        }
      },
      {
        "line": 11,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "i": 12
        }
      },
      {
        "line": 7,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "res[12]": 16
        }
      },
      {
        "line": 11,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "i": 13
        }
      },
      {
        "line": 7,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "res[13]": 16
        }
      },
      {
        "line": 11,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "i": 14
        }
      },
      {
        "line": 7,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "res[14]": 16
        }
      },
      {
        "line": 11,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "i": 15
        }
      },
      {
        "line": 7,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "res[15]": 18
        }
      },
      {
        "line": 11,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "i": 16
        }
      },
      {
        "line": 7,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "res[16]": 21
        }
      },
      {
        "line": 11,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "i": 17
        }
      },
      {
        "line": 7,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "res[17]": 21
        }
      },
      {
        "line": 11,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "i": 18
        }
      },
      {
        "line": 7,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "res[18]": 24
        }
      },
      {
        "line": 11,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "i": 19
        }
      },
      {
        "line": 7,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "res[19]": 24
        }
      },
      {
        "line": 11,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "i": 20
        }
      },
      {
        "line": 7,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "res[20]": 28
        }
      },
      {
        "line": 11,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "i": 21
        }
      },
      {
        "line": 7,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "res[21]": 28
        }
      },
      {
        "line": 11,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "i": 22
        }
      },
      {
        "line": 7,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "res[22]": 28
        }
      },
      {
        "line": 11,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "i": 23
        }
      },
      {
        "line": 7,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "res[23]": 28
        }
      },
      {
        "line": 11,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "i": 24
        }
      },
      {
        "line": 7,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "res[24]": 36
        }
      },
      {
        "line": 11,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "i": 25
        }
      },
      {
        "line": 7,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "res[25]": 37
        }
      },
      {
        "line": 11,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "i": 26
        }
      },
      {
        "line": 7,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "res[26]": 37
        }
      },
      {
        "line": 11,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "i": 27
        }
      },
      {
        "line": 7,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "res[27]": 38
        }
      },
      {
        "line": 11,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "i": 28
        }
      },
      {
        "line": 7,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "res[28]": 38
        }
      },
      {
        "line": 11,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "i": 29
        }
      },
      {
        "line": 7,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "res[29]": 38
        }
      },
      {
        "line": 11,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "i": 30
        }
      },
      {
        "line": 7,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "res[30]": 44
        }
      },
      {
        "line": 11,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "i": 31
        }
      },
      {
        "line": 7,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "res[31]": 44
        }
      },
      {
        "line": 11,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "i": 32
        }
      },
      {
        "line": 7,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "res[32]": 49
        }
      },
      {
        "line": 11,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "i": 33
        }
      },
      {
        "line": 7,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "res[33]": 49
        }
      },
      {
        "line": 11,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "i": 34
        }
      },
      {
        "line": 7,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "res[34]": 49
        }
      },
      {
        "line": 11,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "i": 35
        }
      },
      {
        "line": 7,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "res[35]": 49
        }
      },
      {
        "line": 11,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "i": 36
        }
      },
      {
        "line": 7,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "res[36]": 57
        }
      },
      {
        "line": 11,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "i": 37
        }
      },
      {
        "line": 7,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "res[37]": 57
        }
      },
      {
        "line": 11,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "i": 38
        }
      },
      {
        "line": 7,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "res[38]": 57
        }
      },
      {
        "line": 11,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "i": 39
        }
      },
      {
        "line": 7,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "res[39]": 57
        }
      },
      {
        "line": 11,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "i": 40
        }
      },
      {
        "line": 7,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "res[40]": 65
        }
      },
      {
        "line": 11,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "i": 41
        }
      },
      {
        "line": 7,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "res[41]": 65
        }
      },
      {
        "line": 11,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "i": 42
        }
      },
      {
        "line": 7,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "res[42]": 65
        }
      },
      {
        "line": 11,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "i": 43
        }
      },
      {
        "line": 7,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "res[43]": 65
        }
      },
      {
        "line": 11,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "i": 44
        }
      },
      {
        "line": 7,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "res[44]": 65
        }
      },
      {
        "line": 11,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "i": 45
        }
      },
      {
        "line": 7,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "res[45]": 68
        }
      },
      {
        "line": 11,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "i": 46
        }
      },
      {
        "line": 7,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "res[46]": 68
        }
      },
      {
        "line": 11,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "i": 47
        }
      },
      {
        "line": 7,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "res[47]": 68
        }
      },
      {
        "line": 11,
        "step": 97,
        "action": "EXECUTE",
        "vars": {
          "i": 48
        }
      },
      {
        "line": 7,
        "step": 98,
        "action": "EXECUTE",
        "vars": {
          "res[48]": 83
        }
      },
      {
        "line": 11,
        "step": 99,
        "action": "EXECUTE",
        "vars": {
          "i": 49
        }
      },
      {
        "line": 7,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "res[49]": 83
        }
      },
      {
        "line": 11,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "i": 50
        }
      },
      {
        "line": 7,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "res[50]": 86
        }
      },
      {
        "line": 11,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "i": 51
        }
      },
      {
        "line": 7,
        "step": 104,
        "action": "EXECUTE",
        "vars": {
          "res[51]": 86
        }
      },
      {
        "line": 11,
        "step": 105,
        "action": "EXECUTE",
        "vars": {
          "i": 52
        }
      },
      {
        "line": 7,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "res[52]": 86
        }
      },
      {
        "line": 11,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "i": 53
        }
      },
      {
        "line": 7,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "res[53]": 86
        }
      },
      {
        "line": 11,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "i": 54
        }
      },
      {
        "line": 7,
        "step": 110,
        "action": "EXECUTE",
        "vars": {
          "res[54]": 90
        }
      },
      {
        "line": 11,
        "step": 111,
        "action": "EXECUTE",
        "vars": {
          "i": 55
        }
      },
      {
        "line": 7,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "res[55]": 90
        }
      },
      {
        "line": 11,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "i": 56
        }
      },
      {
        "line": 7,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "res[56]": 90
        }
      },
      {
        "line": 11,
        "step": 115,
        "action": "EXECUTE",
        "vars": {
          "i": 57
        }
      },
      {
        "line": 7,
        "step": 116,
        "action": "EXECUTE",
        "vars": {
          "res[57]": 90
        }
      },
      {
        "line": 11,
        "step": 117,
        "action": "EXECUTE",
        "vars": {
          "i": 58
        }
      },
      {
        "line": 7,
        "step": 118,
        "action": "EXECUTE",
        "vars": {
          "res[58]": 90
        }
      },
      {
        "line": 11,
        "step": 119,
        "action": "EXECUTE",
        "vars": {
          "i": 59
        }
      },
      {
        "line": 7,
        "step": 120,
        "action": "EXECUTE",
        "vars": {
          "res[59]": 90
        }
      },
      {
        "line": 11,
        "step": 121,
        "action": "EXECUTE",
        "vars": {
          "i": 60
        }
      },
      {
        "line": 7,
        "step": 122,
        "action": "EXECUTE",
        "vars": {
          "res[60]": 106
        }
      },
      {
        "line": 11,
        "step": 123,
        "action": "EXECUTE",
        "vars": {
          "i": 61
        }
      },
      {
        "line": 12,
        "step": 124,
        "action": "RETURN",
        "vars": {
          "__return__": 106
        }
      }
    ],
    "id": 1164,
    "task_id": 392,
    "exist_function": [
      "get_max_sum"
    ]
  },
  {
    "code": "def get_max_sum (n):\r\n\tres = list()\r\n\tres.append(0)\r\n\tres.append(1)\r\n\ti = 2\r\n\twhile i<n + 1:\r\n\t\tres.append(max(i, (res[int(i / 2)] \r\n\t\t\t\t\t\t+ res[int(i / 3)] +\r\n\t\t\t\t\t\t\tres[int(i / 4)]\r\n\t\t\t\t\t\t+ res[int(i / 5)])))\r\n\t\ti = i + 1\r\n\treturn res[n]",
    "entry_point": "get_max_sum",
    "input": [
      10
    ],
    "output": 12,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 10
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "res[0]": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "res[1]": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "res[2]": 2
        }
      },
      {
        "line": 11,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 7,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "res[3]": 3
        }
      },
      {
        "line": 11,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "res[4]": 4
        }
      },
      {
        "line": 11,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "res[5]": 5
        }
      },
      {
        "line": 11,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "res[6]": 7
        }
      },
      {
        "line": 11,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 7,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "res[7]": 7
        }
      },
      {
        "line": 11,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 7,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "res[8]": 9
        }
      },
      {
        "line": 11,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 7,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "res[9]": 10
        }
      },
      {
        "line": 11,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 10
        }
      },
      {
        "line": 7,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "res[10]": 12
        }
      },
      {
        "line": 11,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "i": 11
        }
      },
      {
        "line": 12,
        "step": 24,
        "action": "RETURN",
        "vars": {
          "__return__": 12
        }
      }
    ],
    "id": 1165,
    "task_id": 392,
    "exist_function": [
      "get_max_sum"
    ]
  },
  {
    "code": "def get_max_sum (n):\r\n\tres = list()\r\n\tres.append(0)\r\n\tres.append(1)\r\n\ti = 2\r\n\twhile i<n + 1:\r\n\t\tres.append(max(i, (res[int(i / 2)] \r\n\t\t\t\t\t\t+ res[int(i / 3)] +\r\n\t\t\t\t\t\t\tres[int(i / 4)]\r\n\t\t\t\t\t\t+ res[int(i / 5)])))\r\n\t\ti = i + 1\r\n\treturn res[n]",
    "entry_point": "get_max_sum",
    "input": [
      2
    ],
    "output": 2,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 2
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "res[0]": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "res[1]": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "res[2]": 2
        }
      },
      {
        "line": 11,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 12,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 1166,
    "task_id": 392,
    "exist_function": [
      "get_max_sum"
    ]
  },
  {
    "code": "def max_length_list(input_list):\r\n    max_length = max(len(x) for x in input_list )   \r\n    max_list = max(input_list, key = lambda i: len(i))    \r\n    return(max_length, max_list)",
    "entry_point": "max_length_list",
    "input": [
      [
        [
          0
        ],
        [
          1,
          3
        ],
        [
          5,
          7
        ],
        [
          9,
          11
        ],
        [
          13,
          15,
          17
        ]
      ]
    ],
    "output": "(3, [13, 15, 17])",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "input_list": [
            [
              0
            ],
            [
              1,
              3
            ],
            [
              5,
              7
            ],
            [
              9,
              11
            ],
            [
              13,
              15,
              17
            ]
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "max_length": 3
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "max_list": [
            13,
            15,
            17
          ]
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": "(3, [13, 15, 17])"
        }
      }
    ],
    "id": 1167,
    "task_id": 393,
    "exist_function": [
      "max_length_list"
    ]
  },
  {
    "code": "def max_length_list(input_list):\r\n    max_length = max(len(x) for x in input_list )   \r\n    max_list = max(input_list, key = lambda i: len(i))    \r\n    return(max_length, max_list)",
    "entry_point": "max_length_list",
    "input": [
      [
        [
          1,
          2,
          3,
          4,
          5
        ],
        [
          1,
          2,
          3,
          4
        ],
        [
          1,
          2,
          3
        ],
        [
          1,
          2
        ],
        [
          1
        ]
      ]
    ],
    "output": "(5, [1, 2, 3, 4, 5])",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "input_list": [
            [
              1,
              2,
              3,
              4,
              5
            ],
            [
              1,
              2,
              3,
              4
            ],
            [
              1,
              2,
              3
            ],
            [
              1,
              2
            ],
            [
              1
            ]
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "max_length": 5
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "max_list": [
            1,
            2,
            3,
            4,
            5
          ]
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": "(5, [1, 2, 3, 4, 5])"
        }
      }
    ],
    "id": 1168,
    "task_id": 393,
    "exist_function": [
      "max_length_list"
    ]
  },
  {
    "code": "def max_length_list(input_list):\r\n    max_length = max(len(x) for x in input_list )   \r\n    max_list = max(input_list, key = lambda i: len(i))    \r\n    return(max_length, max_list)",
    "entry_point": "max_length_list",
    "input": [
      [
        [
          3,
          4,
          5
        ],
        [
          6,
          7,
          8,
          9
        ],
        [
          10,
          11,
          12
        ]
      ]
    ],
    "output": "(4, [6, 7, 8, 9])",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "input_list": [
            [
              3,
              4,
              5
            ],
            [
              6,
              7,
              8,
              9
            ],
            [
              10,
              11,
              12
            ]
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "max_length": 4
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "max_list": [
            6,
            7,
            8,
            9
          ]
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": "(4, [6, 7, 8, 9])"
        }
      }
    ],
    "id": 1169,
    "task_id": 393,
    "exist_function": [
      "max_length_list"
    ]
  },
  {
    "code": "def check_distinct(test_tup):\r\n  res = True\r\n  temp = set()\r\n  for ele in test_tup:\r\n    if ele in temp:\r\n      res = False\r\n      break\r\n    temp.add(ele)\r\n  return (res)",
    "entry_point": "check_distinct",
    "input": [
      "(1, 4, 5, 6)"
    ],
    "output": true,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "test_tup": "(1, 4, 5, 6)"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": true
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "ele": 1
        }
      },
      {
        "line": 4,
        "step": "4~6",
        "action": "LOOP",
        "vars": {
          "ele": "4→6"
        }
      },
      {
        "line": 9,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": true
        }
      }
    ],
    "id": 1171,
    "task_id": 394,
    "exist_function": [
      "check_distinct"
    ]
  },
  {
    "code": "def check_distinct(test_tup):\r\n  res = True\r\n  temp = set()\r\n  for ele in test_tup:\r\n    if ele in temp:\r\n      res = False\r\n      break\r\n    temp.add(ele)\r\n  return (res)",
    "entry_point": "check_distinct",
    "input": [
      "(2, 3, 4, 5, 6)"
    ],
    "output": true,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "test_tup": "(2, 3, 4, 5, 6)"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": true
        }
      },
      {
        "line": 4,
        "step": "3~7",
        "action": "LOOP",
        "vars": {
          "ele": "2→6"
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": true
        }
      }
    ],
    "id": 1172,
    "task_id": 394,
    "exist_function": [
      "check_distinct"
    ]
  },
  {
    "code": "def first_non_repeating_character(str1):\r\n  char_order = []\r\n  ctr = {}\r\n  for c in str1:\r\n    if c in ctr:\r\n      ctr[c] += 1\r\n    else:\r\n      ctr[c] = 1 \r\n      char_order.append(c)\r\n  for c in char_order:\r\n    if ctr[c] == 1:\r\n      return c\r\n  return None",
    "entry_point": "first_non_repeating_character",
    "input": [
      "abc"
    ],
    "output": "a",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "str1": "abc"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "char_order": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "ctr": {}
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "c": "a"
        }
      },
      {
        "line": 8,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "ctr.a": 1
        }
      },
      {
        "line": 9,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "char_order[0]": "a"
        }
      },
      {
        "line": 4,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "c": "b"
        }
      },
      {
        "line": 8,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "ctr.b": 1
        }
      },
      {
        "line": 9,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "char_order[1]": "b"
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "c": "c"
        }
      },
      {
        "line": 8,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "ctr.c": 1
        }
      },
      {
        "line": 9,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "char_order[2]": "c"
        }
      },
      {
        "line": 10,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "c": "a"
        }
      },
      {
        "line": 12,
        "step": 14,
        "action": "RETURN",
        "vars": {
          "__return__": "a"
        }
      }
    ],
    "id": 1174,
    "task_id": 395,
    "exist_function": [
      "first_non_repeating_character"
    ]
  },
  {
    "code": "def first_non_repeating_character(str1):\r\n  char_order = []\r\n  ctr = {}\r\n  for c in str1:\r\n    if c in ctr:\r\n      ctr[c] += 1\r\n    else:\r\n      ctr[c] = 1 \r\n      char_order.append(c)\r\n  for c in char_order:\r\n    if ctr[c] == 1:\r\n      return c\r\n  return None",
    "entry_point": "first_non_repeating_character",
    "input": [
      "ababc"
    ],
    "output": "c",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "str1": "ababc"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "char_order": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "ctr": {}
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "c": "a"
        }
      },
      {
        "line": 8,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "ctr.a": 1
        }
      },
      {
        "line": 9,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "char_order[0]": "a"
        }
      },
      {
        "line": 4,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "c": "b"
        }
      },
      {
        "line": 8,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "ctr.b": 1
        }
      },
      {
        "line": 9,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "char_order[1]": "b"
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "c": "a"
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "ctr.a": 2
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "c": "b"
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "ctr.b": 2
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "c": "c"
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "ctr.c": 1
        }
      },
      {
        "line": 9,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "char_order[2]": "c"
        }
      },
      {
        "line": 10,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "c": "a"
        }
      },
      {
        "line": 10,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "c": "b"
        }
      },
      {
        "line": 10,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "c": "c"
        }
      },
      {
        "line": 12,
        "step": 20,
        "action": "RETURN",
        "vars": {
          "__return__": "c"
        }
      }
    ],
    "id": 1175,
    "task_id": 395,
    "exist_function": [
      "first_non_repeating_character"
    ]
  },
  {
    "code": "def ncr_modp(n, r, p): \r\n    C = [0 for i in range(r+1)]   \r\n    C[0] = 1\r\n    for i in range(1, n+1): \r\n        for j in range(min(i, r), 0, -1): \r\n            C[j] = (C[j] + C[j-1]) % p   \r\n    return C[r]",
    "entry_point": "ncr_modp",
    "input": [
      10,
      2,
      13
    ],
    "output": 6,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 10,
          "r": 2,
          "p": 13
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "C": [
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "C[0]": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 1
        }
      },
      {
        "line": 4,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 1
        }
      },
      {
        "line": 5,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 2
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 3
        }
      },
      {
        "line": 5,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 3
        }
      },
      {
        "line": 4,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 6
        }
      },
      {
        "line": 5,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 4
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 5,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 10
        }
      },
      {
        "line": 5,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 5
        }
      },
      {
        "line": 4,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 5,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 2
        }
      },
      {
        "line": 5,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 6
        }
      },
      {
        "line": 4,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 5,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 8
        }
      },
      {
        "line": 5,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 7
        }
      },
      {
        "line": 4,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 5,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 2
        }
      },
      {
        "line": 5,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 8
        }
      },
      {
        "line": 4,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 5,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 10
        }
      },
      {
        "line": 5,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 9
        }
      },
      {
        "line": 4,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "i": 10
        }
      },
      {
        "line": 5,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 6
        }
      },
      {
        "line": 5,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 10
        }
      },
      {
        "line": 7,
        "step": 52,
        "action": "RETURN",
        "vars": {
          "__return__": 6
        }
      }
    ],
    "id": 1194,
    "task_id": 402,
    "exist_function": [
      "ncr_modp"
    ]
  },
  {
    "code": "def ncr_modp(n, r, p): \r\n    C = [0 for i in range(r+1)]   \r\n    C[0] = 1\r\n    for i in range(1, n+1): \r\n        for j in range(min(i, r), 0, -1): \r\n            C[j] = (C[j] + C[j-1]) % p   \r\n    return C[r]",
    "entry_point": "ncr_modp",
    "input": [
      15,
      12,
      43
    ],
    "output": 25,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 15,
          "r": 12,
          "p": 43
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "C": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "C[0]": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 1
        }
      },
      {
        "line": 4,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 1
        }
      },
      {
        "line": 5,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 2
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 1
        }
      },
      {
        "line": 5,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 3
        }
      },
      {
        "line": 5,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 3
        }
      },
      {
        "line": 4,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 1
        }
      },
      {
        "line": 5,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 4
        }
      },
      {
        "line": 5,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 6
        }
      },
      {
        "line": 5,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 4
        }
      },
      {
        "line": 4,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 5,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 1
        }
      },
      {
        "line": 5,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 5
        }
      },
      {
        "line": 5,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 10
        }
      },
      {
        "line": 5,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 10
        }
      },
      {
        "line": 5,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 5
        }
      },
      {
        "line": 4,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 5,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 1
        }
      },
      {
        "line": 5,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 6
        }
      },
      {
        "line": 5,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 15
        }
      },
      {
        "line": 5,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 20
        }
      },
      {
        "line": 5,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 15
        }
      },
      {
        "line": 5,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 6
        }
      },
      {
        "line": 4,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 5,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 1
        }
      },
      {
        "line": 5,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 7
        }
      },
      {
        "line": 5,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 21
        }
      },
      {
        "line": 5,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 35
        }
      },
      {
        "line": 5,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 35
        }
      },
      {
        "line": 5,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 21
        }
      },
      {
        "line": 5,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 7
        }
      },
      {
        "line": 4,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 5,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 1
        }
      },
      {
        "line": 5,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 8
        }
      },
      {
        "line": 5,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 28
        }
      },
      {
        "line": 5,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 13
        }
      },
      {
        "line": 5,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 27
        }
      },
      {
        "line": 5,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 13
        }
      },
      {
        "line": 5,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 28
        }
      },
      {
        "line": 5,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 8
        }
      },
      {
        "line": 4,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 5,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 1
        }
      },
      {
        "line": 5,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 9
        }
      },
      {
        "line": 5,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 36
        }
      },
      {
        "line": 5,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 41
        }
      },
      {
        "line": 5,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 40
        }
      },
      {
        "line": 5,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 40
        }
      },
      {
        "line": 5,
        "step": 97,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 98,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 41
        }
      },
      {
        "line": 5,
        "step": 99,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 36
        }
      },
      {
        "line": 5,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 9
        }
      },
      {
        "line": 4,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "i": 10
        }
      },
      {
        "line": 5,
        "step": 104,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 6,
        "step": 105,
        "action": "EXECUTE",
        "vars": {
          "C[10]": 1
        }
      },
      {
        "line": 5,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 10
        }
      },
      {
        "line": 5,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 2
        }
      },
      {
        "line": 5,
        "step": 110,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 111,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 34
        }
      },
      {
        "line": 5,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 38
        }
      },
      {
        "line": 5,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 115,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 37
        }
      },
      {
        "line": 5,
        "step": 116,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 117,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 38
        }
      },
      {
        "line": 5,
        "step": 118,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 119,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 34
        }
      },
      {
        "line": 5,
        "step": 120,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 121,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 2
        }
      },
      {
        "line": 5,
        "step": 122,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 123,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 10
        }
      },
      {
        "line": 4,
        "step": 124,
        "action": "EXECUTE",
        "vars": {
          "i": 11
        }
      },
      {
        "line": 5,
        "step": 125,
        "action": "EXECUTE",
        "vars": {
          "j": 11
        }
      },
      {
        "line": 6,
        "step": 126,
        "action": "EXECUTE",
        "vars": {
          "C[11]": 1
        }
      },
      {
        "line": 5,
        "step": 127,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 6,
        "step": 128,
        "action": "EXECUTE",
        "vars": {
          "C[10]": 11
        }
      },
      {
        "line": 5,
        "step": 129,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 130,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 12
        }
      },
      {
        "line": 5,
        "step": 131,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 132,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 36
        }
      },
      {
        "line": 5,
        "step": 133,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 134,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 29
        }
      },
      {
        "line": 5,
        "step": 135,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 136,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 32
        }
      },
      {
        "line": 5,
        "step": 137,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 138,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 32
        }
      },
      {
        "line": 5,
        "step": 139,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 140,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 29
        }
      },
      {
        "line": 5,
        "step": 141,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 142,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 36
        }
      },
      {
        "line": 5,
        "step": 143,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 144,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 12
        }
      },
      {
        "line": 5,
        "step": 145,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 146,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 11
        }
      },
      {
        "line": 4,
        "step": 147,
        "action": "EXECUTE",
        "vars": {
          "i": 12
        }
      },
      {
        "line": 5,
        "step": 148,
        "action": "EXECUTE",
        "vars": {
          "j": 12
        }
      },
      {
        "line": 6,
        "step": 149,
        "action": "EXECUTE",
        "vars": {
          "C[12]": 1
        }
      },
      {
        "line": 5,
        "step": 150,
        "action": "EXECUTE",
        "vars": {
          "j": 11
        }
      },
      {
        "line": 6,
        "step": 151,
        "action": "EXECUTE",
        "vars": {
          "C[11]": 12
        }
      },
      {
        "line": 5,
        "step": 152,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 6,
        "step": 153,
        "action": "EXECUTE",
        "vars": {
          "C[10]": 23
        }
      },
      {
        "line": 5,
        "step": 154,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 155,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 5
        }
      },
      {
        "line": 5,
        "step": 156,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 157,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 22
        }
      },
      {
        "line": 5,
        "step": 158,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 159,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 18
        }
      },
      {
        "line": 5,
        "step": 160,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 161,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 21
        }
      },
      {
        "line": 5,
        "step": 162,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 163,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 18
        }
      },
      {
        "line": 5,
        "step": 164,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 165,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 22
        }
      },
      {
        "line": 5,
        "step": 166,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 167,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 5
        }
      },
      {
        "line": 5,
        "step": 168,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 169,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 23
        }
      },
      {
        "line": 5,
        "step": 170,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 171,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 12
        }
      },
      {
        "line": 4,
        "step": 172,
        "action": "EXECUTE",
        "vars": {
          "i": 13
        }
      },
      {
        "line": 5,
        "step": 173,
        "action": "EXECUTE",
        "vars": {
          "j": 12
        }
      },
      {
        "line": 6,
        "step": 174,
        "action": "EXECUTE",
        "vars": {
          "C[12]": 13
        }
      },
      {
        "line": 5,
        "step": 175,
        "action": "EXECUTE",
        "vars": {
          "j": 11
        }
      },
      {
        "line": 6,
        "step": 176,
        "action": "EXECUTE",
        "vars": {
          "C[11]": 35
        }
      },
      {
        "line": 5,
        "step": 177,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 6,
        "step": 178,
        "action": "EXECUTE",
        "vars": {
          "C[10]": 28
        }
      },
      {
        "line": 5,
        "step": 179,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 180,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 27
        }
      },
      {
        "line": 5,
        "step": 181,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 182,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 40
        }
      },
      {
        "line": 5,
        "step": 183,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 184,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 39
        }
      },
      {
        "line": 5,
        "step": 185,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 186,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 39
        }
      },
      {
        "line": 5,
        "step": 187,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 188,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 40
        }
      },
      {
        "line": 5,
        "step": 189,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 190,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 27
        }
      },
      {
        "line": 5,
        "step": 191,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 192,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 28
        }
      },
      {
        "line": 5,
        "step": 193,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 194,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 35
        }
      },
      {
        "line": 5,
        "step": 195,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 196,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 13
        }
      },
      {
        "line": 4,
        "step": 197,
        "action": "EXECUTE",
        "vars": {
          "i": 14
        }
      },
      {
        "line": 5,
        "step": 198,
        "action": "EXECUTE",
        "vars": {
          "j": 12
        }
      },
      {
        "line": 6,
        "step": 199,
        "action": "EXECUTE",
        "vars": {
          "C[12]": 5
        }
      },
      {
        "line": 5,
        "step": 200,
        "action": "EXECUTE",
        "vars": {
          "j": 11
        }
      },
      {
        "line": 6,
        "step": 201,
        "action": "EXECUTE",
        "vars": {
          "C[11]": 20
        }
      },
      {
        "line": 5,
        "step": 202,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 6,
        "step": 203,
        "action": "EXECUTE",
        "vars": {
          "C[10]": 12
        }
      },
      {
        "line": 5,
        "step": 204,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 205,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 24
        }
      },
      {
        "line": 5,
        "step": 206,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 207,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 36
        }
      },
      {
        "line": 5,
        "step": 208,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 209,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 35
        }
      },
      {
        "line": 5,
        "step": 210,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 211,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 36
        }
      },
      {
        "line": 5,
        "step": 212,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 213,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 24
        }
      },
      {
        "line": 5,
        "step": 214,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 215,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 12
        }
      },
      {
        "line": 5,
        "step": 216,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 217,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 20
        }
      },
      {
        "line": 5,
        "step": 218,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 219,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 5
        }
      },
      {
        "line": 5,
        "step": 220,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 221,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 14
        }
      },
      {
        "line": 4,
        "step": 222,
        "action": "EXECUTE",
        "vars": {
          "i": 15
        }
      },
      {
        "line": 5,
        "step": 223,
        "action": "EXECUTE",
        "vars": {
          "j": 12
        }
      },
      {
        "line": 6,
        "step": 224,
        "action": "EXECUTE",
        "vars": {
          "C[12]": 25
        }
      },
      {
        "line": 5,
        "step": 225,
        "action": "EXECUTE",
        "vars": {
          "j": 11
        }
      },
      {
        "line": 6,
        "step": 226,
        "action": "EXECUTE",
        "vars": {
          "C[11]": 32
        }
      },
      {
        "line": 5,
        "step": 227,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 6,
        "step": 228,
        "action": "EXECUTE",
        "vars": {
          "C[10]": 36
        }
      },
      {
        "line": 5,
        "step": 229,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 230,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 17
        }
      },
      {
        "line": 5,
        "step": 231,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 232,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 28
        }
      },
      {
        "line": 5,
        "step": 233,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 234,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 28
        }
      },
      {
        "line": 5,
        "step": 235,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 236,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 17
        }
      },
      {
        "line": 5,
        "step": 237,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 238,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 36
        }
      },
      {
        "line": 5,
        "step": 239,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 240,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 32
        }
      },
      {
        "line": 5,
        "step": 241,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 242,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 25
        }
      },
      {
        "line": 5,
        "step": 243,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 244,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 19
        }
      },
      {
        "line": 5,
        "step": 245,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 246,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 15
        }
      },
      {
        "line": 7,
        "step": 247,
        "action": "RETURN",
        "vars": {
          "__return__": 25
        }
      }
    ],
    "id": 1195,
    "task_id": 402,
    "exist_function": [
      "ncr_modp"
    ]
  },
  {
    "code": "def ncr_modp(n, r, p): \r\n    C = [0 for i in range(r+1)]   \r\n    C[0] = 1\r\n    for i in range(1, n+1): \r\n        for j in range(min(i, r), 0, -1): \r\n            C[j] = (C[j] + C[j-1]) % p   \r\n    return C[r]",
    "entry_point": "ncr_modp",
    "input": [
      17,
      9,
      18
    ],
    "output": 10,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 17,
          "r": 9,
          "p": 18
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "C": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "C[0]": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 1
        }
      },
      {
        "line": 4,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 1
        }
      },
      {
        "line": 5,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 2
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 1
        }
      },
      {
        "line": 5,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 3
        }
      },
      {
        "line": 5,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 3
        }
      },
      {
        "line": 4,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 1
        }
      },
      {
        "line": 5,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 4
        }
      },
      {
        "line": 5,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 6
        }
      },
      {
        "line": 5,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 4
        }
      },
      {
        "line": 4,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 5,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 1
        }
      },
      {
        "line": 5,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 5
        }
      },
      {
        "line": 5,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 10
        }
      },
      {
        "line": 5,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 10
        }
      },
      {
        "line": 5,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 5
        }
      },
      {
        "line": 4,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 5,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 1
        }
      },
      {
        "line": 5,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 6
        }
      },
      {
        "line": 5,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 15
        }
      },
      {
        "line": 5,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 2
        }
      },
      {
        "line": 5,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 15
        }
      },
      {
        "line": 5,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 6
        }
      },
      {
        "line": 4,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 5,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 1
        }
      },
      {
        "line": 5,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 7
        }
      },
      {
        "line": 5,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 3
        }
      },
      {
        "line": 5,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 17
        }
      },
      {
        "line": 5,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 17
        }
      },
      {
        "line": 5,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 3
        }
      },
      {
        "line": 5,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 7
        }
      },
      {
        "line": 4,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 5,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 1
        }
      },
      {
        "line": 5,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 8
        }
      },
      {
        "line": 5,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 10
        }
      },
      {
        "line": 5,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 2
        }
      },
      {
        "line": 5,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 16
        }
      },
      {
        "line": 5,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 2
        }
      },
      {
        "line": 5,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 10
        }
      },
      {
        "line": 5,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 8
        }
      },
      {
        "line": 4,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 5,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 1
        }
      },
      {
        "line": 5,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 9
        }
      },
      {
        "line": 5,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 0
        }
      },
      {
        "line": 5,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 12
        }
      },
      {
        "line": 5,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 0
        }
      },
      {
        "line": 5,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 0
        }
      },
      {
        "line": 5,
        "step": 97,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 98,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 12
        }
      },
      {
        "line": 5,
        "step": 99,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 0
        }
      },
      {
        "line": 5,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 9
        }
      },
      {
        "line": 4,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "i": 10
        }
      },
      {
        "line": 5,
        "step": 104,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 105,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 10
        }
      },
      {
        "line": 5,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 5,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 12
        }
      },
      {
        "line": 5,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 5,
        "step": 110,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 5,
        "step": 111,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 12
        }
      },
      {
        "line": 5,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 5,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 115,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 9
        }
      },
      {
        "line": 5,
        "step": 116,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 117,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 10
        }
      },
      {
        "line": 4,
        "step": 118,
        "action": "EXECUTE",
        "vars": {
          "i": 11
        }
      },
      {
        "line": 5,
        "step": 119,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 120,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 1
        }
      },
      {
        "line": 5,
        "step": 121,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 122,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 3
        }
      },
      {
        "line": 5,
        "step": 123,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 124,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 6
        }
      },
      {
        "line": 5,
        "step": 125,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 5,
        "step": 126,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 127,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 12
        }
      },
      {
        "line": 5,
        "step": 128,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 129,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 6
        }
      },
      {
        "line": 5,
        "step": 130,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 131,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 3
        }
      },
      {
        "line": 5,
        "step": 132,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 133,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 1
        }
      },
      {
        "line": 5,
        "step": 134,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 135,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 11
        }
      },
      {
        "line": 4,
        "step": 136,
        "action": "EXECUTE",
        "vars": {
          "i": 12
        }
      },
      {
        "line": 5,
        "step": 137,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 138,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 4
        }
      },
      {
        "line": 5,
        "step": 139,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 140,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 9
        }
      },
      {
        "line": 5,
        "step": 141,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 142,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 0
        }
      },
      {
        "line": 5,
        "step": 143,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 144,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 6
        }
      },
      {
        "line": 5,
        "step": 145,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 146,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 0
        }
      },
      {
        "line": 5,
        "step": 147,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 148,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 9
        }
      },
      {
        "line": 5,
        "step": 149,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 150,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 4
        }
      },
      {
        "line": 5,
        "step": 151,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 152,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 12
        }
      },
      {
        "line": 5,
        "step": 153,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 154,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 12
        }
      },
      {
        "line": 4,
        "step": 155,
        "action": "EXECUTE",
        "vars": {
          "i": 13
        }
      },
      {
        "line": 5,
        "step": 156,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 157,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 13
        }
      },
      {
        "line": 5,
        "step": 158,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 5,
        "step": 159,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 160,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 6
        }
      },
      {
        "line": 5,
        "step": 161,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 5,
        "step": 162,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 163,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 9
        }
      },
      {
        "line": 5,
        "step": 164,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 165,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 13
        }
      },
      {
        "line": 5,
        "step": 166,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 167,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 16
        }
      },
      {
        "line": 5,
        "step": 168,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 169,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 6
        }
      },
      {
        "line": 5,
        "step": 170,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 171,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 13
        }
      },
      {
        "line": 4,
        "step": 172,
        "action": "EXECUTE",
        "vars": {
          "i": 14
        }
      },
      {
        "line": 5,
        "step": 173,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 174,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 4
        }
      },
      {
        "line": 5,
        "step": 175,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 176,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 15
        }
      },
      {
        "line": 5,
        "step": 177,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 178,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 12
        }
      },
      {
        "line": 5,
        "step": 179,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 180,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 15
        }
      },
      {
        "line": 5,
        "step": 181,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 182,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 4
        }
      },
      {
        "line": 5,
        "step": 183,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 184,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 11
        }
      },
      {
        "line": 5,
        "step": 185,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 186,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 4
        }
      },
      {
        "line": 5,
        "step": 187,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 188,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 1
        }
      },
      {
        "line": 5,
        "step": 189,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 190,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 14
        }
      },
      {
        "line": 4,
        "step": 191,
        "action": "EXECUTE",
        "vars": {
          "i": 15
        }
      },
      {
        "line": 5,
        "step": 192,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 193,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 1
        }
      },
      {
        "line": 5,
        "step": 194,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 195,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 9
        }
      },
      {
        "line": 5,
        "step": 196,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 197,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 9
        }
      },
      {
        "line": 5,
        "step": 198,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 199,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 1
        }
      },
      {
        "line": 5,
        "step": 200,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 201,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 15
        }
      },
      {
        "line": 5,
        "step": 202,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 203,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 15
        }
      },
      {
        "line": 5,
        "step": 204,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 205,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 5
        }
      },
      {
        "line": 5,
        "step": 206,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 207,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 15
        }
      },
      {
        "line": 5,
        "step": 208,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 209,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 15
        }
      },
      {
        "line": 4,
        "step": 210,
        "action": "EXECUTE",
        "vars": {
          "i": 16
        }
      },
      {
        "line": 5,
        "step": 211,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 212,
        "action": "EXECUTE",
        "vars": {
          "C[9]": 10
        }
      },
      {
        "line": 5,
        "step": 213,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 214,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 0
        }
      },
      {
        "line": 5,
        "step": 215,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 216,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 10
        }
      },
      {
        "line": 5,
        "step": 217,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 218,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 16
        }
      },
      {
        "line": 5,
        "step": 219,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 220,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 12
        }
      },
      {
        "line": 5,
        "step": 221,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 222,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 2
        }
      },
      {
        "line": 5,
        "step": 223,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 224,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 2
        }
      },
      {
        "line": 5,
        "step": 225,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 226,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 12
        }
      },
      {
        "line": 5,
        "step": 227,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 228,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 16
        }
      },
      {
        "line": 4,
        "step": 229,
        "action": "EXECUTE",
        "vars": {
          "i": 17
        }
      },
      {
        "line": 5,
        "step": 230,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 5,
        "step": 231,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 232,
        "action": "EXECUTE",
        "vars": {
          "C[8]": 10
        }
      },
      {
        "line": 5,
        "step": 233,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 234,
        "action": "EXECUTE",
        "vars": {
          "C[7]": 8
        }
      },
      {
        "line": 5,
        "step": 235,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 236,
        "action": "EXECUTE",
        "vars": {
          "C[6]": 10
        }
      },
      {
        "line": 5,
        "step": 237,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 238,
        "action": "EXECUTE",
        "vars": {
          "C[5]": 14
        }
      },
      {
        "line": 5,
        "step": 239,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 240,
        "action": "EXECUTE",
        "vars": {
          "C[4]": 4
        }
      },
      {
        "line": 5,
        "step": 241,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 242,
        "action": "EXECUTE",
        "vars": {
          "C[3]": 14
        }
      },
      {
        "line": 5,
        "step": 243,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 244,
        "action": "EXECUTE",
        "vars": {
          "C[2]": 10
        }
      },
      {
        "line": 5,
        "step": 245,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 246,
        "action": "EXECUTE",
        "vars": {
          "C[1]": 17
        }
      },
      {
        "line": 7,
        "step": 247,
        "action": "RETURN",
        "vars": {
          "__return__": 10
        }
      }
    ],
    "id": 1196,
    "task_id": 402,
    "exist_function": [
      "ncr_modp"
    ]
  },
  {
    "code": "def find_Parity(x): \r\n    y = x ^ (x >> 1); \r\n    y = y ^ (y >> 2); \r\n    y = y ^ (y >> 4); \r\n    y = y ^ (y >> 8); \r\n    y = y ^ (y >> 16); \r\n    if (y & 1): \r\n        return (\"Odd Parity\"); \r\n    return (\"Even Parity\");",
    "entry_point": "find_Parity",
    "input": [
      12
    ],
    "output": "Even Parity",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "x": 12
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "y": 10
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "y": 8
        }
      },
      {
        "line": 9,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": "Even Parity"
        }
      }
    ],
    "id": 1206,
    "task_id": 406,
    "exist_function": [
      "find_Parity"
    ]
  },
  {
    "code": "def find_Parity(x): \r\n    y = x ^ (x >> 1); \r\n    y = y ^ (y >> 2); \r\n    y = y ^ (y >> 4); \r\n    y = y ^ (y >> 8); \r\n    y = y ^ (y >> 16); \r\n    if (y & 1): \r\n        return (\"Odd Parity\"); \r\n    return (\"Even Parity\");",
    "entry_point": "find_Parity",
    "input": [
      7
    ],
    "output": "Odd Parity",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "x": 7
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "y": 4
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "y": 5
        }
      },
      {
        "line": 8,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": "Odd Parity"
        }
      }
    ],
    "id": 1207,
    "task_id": 406,
    "exist_function": [
      "find_Parity"
    ]
  },
  {
    "code": "def find_Parity(x): \r\n    y = x ^ (x >> 1); \r\n    y = y ^ (y >> 2); \r\n    y = y ^ (y >> 4); \r\n    y = y ^ (y >> 8); \r\n    y = y ^ (y >> 16); \r\n    if (y & 1): \r\n        return (\"Odd Parity\"); \r\n    return (\"Even Parity\");",
    "entry_point": "find_Parity",
    "input": [
      10
    ],
    "output": "Even Parity",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "x": 10
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "y": 15
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "y": 12
        }
      },
      {
        "line": 9,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": "Even Parity"
        }
      }
    ],
    "id": 1208,
    "task_id": 406,
    "exist_function": [
      "find_Parity"
    ]
  }
]