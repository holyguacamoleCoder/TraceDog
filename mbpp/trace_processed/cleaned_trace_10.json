[
  {
    "code": "def sort_tuple(tup): \r\n\tlst = len(tup) \r\n\tfor i in range(0, lst): \r\n\t\tfor j in range(0, lst-i-1): \r\n\t\t\tif (tup[j][-1] > tup[j + 1][-1]): \r\n\t\t\t\ttemp = tup[j] \r\n\t\t\t\ttup[j]= tup[j + 1] \r\n\t\t\t\ttup[j + 1]= temp \r\n\treturn tup",
    "entry_point": "sort_tuple",
    "input": [
      [
        "(1, 1)",
        "(3, 3)",
        "(2, 4)"
      ]
    ],
    "output": [
      "(1, 1)",
      "(3, 3)",
      "(2, 4)"
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "tup": [
            "(2, 4)",
            "(3, 3)",
            "(1, 1)"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "lst": 3
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "temp": "(2, 4)"
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "tup[0][1]": 3,
          "tup[0][0]": 3
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "tup[1][1]": 4,
          "tup[1][0]": 2
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "tup[1][1]": 1,
          "tup[1][0]": 1
        }
      },
      {
        "line": 8,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "tup[2][1]": 4,
          "tup[2][0]": 2
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "temp[1]": 3,
          "temp[0]": 3
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "tup[0][1]": 1,
          "tup[0][0]": 1
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "tup[1][1]": 3,
          "tup[1][0]": 3
        }
      },
      {
        "line": 3,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 9,
        "step": 17,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "(1, 1)",
            "(3, 3)",
            "(2, 4)"
          ]
        }
      }
    ],
    "id": 1447,
    "task_id": 487,
    "exist_function": [
      "sort_tuple"
    ]
  },
  {
    "code": "def sort_tuple(tup): \r\n\tlst = len(tup) \r\n\tfor i in range(0, lst): \r\n\t\tfor j in range(0, lst-i-1): \r\n\t\t\tif (tup[j][-1] > tup[j + 1][-1]): \r\n\t\t\t\ttemp = tup[j] \r\n\t\t\t\ttup[j]= tup[j + 1] \r\n\t\t\t\ttup[j + 1]= temp \r\n\treturn tup",
    "entry_point": "sort_tuple",
    "input": [
      [
        "(4, 3)",
        "(6, 7)",
        "(3, 9)"
      ]
    ],
    "output": [
      "(4, 3)",
      "(6, 7)",
      "(3, 9)"
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "tup": [
            "(3, 9)",
            "(6, 7)",
            "(4, 3)"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "lst": 3
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "temp": "(3, 9)"
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "tup[0][1]": 7,
          "tup[0][0]": 6
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "tup[1][1]": 9,
          "tup[1][0]": 3
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "tup[1][1]": 3,
          "tup[1][0]": 4
        }
      },
      {
        "line": 8,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "tup[2][1]": 9,
          "tup[2][0]": 3
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "temp[1]": 7,
          "temp[0]": 6
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "tup[0][1]": 3,
          "tup[0][0]": 4
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "tup[1][1]": 7,
          "tup[1][0]": 6
        }
      },
      {
        "line": 3,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 9,
        "step": 17,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "(4, 3)",
            "(6, 7)",
            "(3, 9)"
          ]
        }
      }
    ],
    "id": 1448,
    "task_id": 487,
    "exist_function": [
      "sort_tuple"
    ]
  },
  {
    "code": "def frequency_Of_Largest(n,arr): \r\n    mn = arr[0] \r\n    freq = 1\r\n    for i in range(1,n): \r\n        if (arr[i] >mn): \r\n            mn = arr[i] \r\n            freq = 1\r\n        elif (arr[i] == mn): \r\n            freq += 1\r\n    return freq",
    "entry_point": "frequency_Of_Largest",
    "input": [
      5,
      [
        1,
        2,
        3,
        4,
        4
      ]
    ],
    "output": 2,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 5,
          "arr": [
            1,
            2,
            3,
            4,
            4
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "mn": 1
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "freq": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "mn": 2
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "mn": 3
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "mn": 4
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 9,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "freq": 2
        }
      },
      {
        "line": 10,
        "step": 12,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 1452,
    "task_id": 489,
    "exist_function": [
      "frequency_Of_Largest"
    ]
  },
  {
    "code": "def frequency_Of_Largest(n,arr): \r\n    mn = arr[0] \r\n    freq = 1\r\n    for i in range(1,n): \r\n        if (arr[i] >mn): \r\n            mn = arr[i] \r\n            freq = 1\r\n        elif (arr[i] == mn): \r\n            freq += 1\r\n    return freq",
    "entry_point": "frequency_Of_Largest",
    "input": [
      3,
      [
        5,
        6,
        5
      ]
    ],
    "output": 1,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 3,
          "arr": [
            5,
            6,
            5
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "mn": 5
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "freq": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "mn": 6
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 10,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 1453,
    "task_id": 489,
    "exist_function": [
      "frequency_Of_Largest"
    ]
  },
  {
    "code": "def frequency_Of_Largest(n,arr): \r\n    mn = arr[0] \r\n    freq = 1\r\n    for i in range(1,n): \r\n        if (arr[i] >mn): \r\n            mn = arr[i] \r\n            freq = 1\r\n        elif (arr[i] == mn): \r\n            freq += 1\r\n    return freq",
    "entry_point": "frequency_Of_Largest",
    "input": [
      4,
      [
        2,
        7,
        7,
        7
      ]
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 4,
          "arr": [
            2,
            7,
            7,
            7
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "mn": 2
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "freq": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "mn": 7
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 9,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "freq": 2
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 9,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "freq": 3
        }
      },
      {
        "line": 10,
        "step": 10,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 1454,
    "task_id": 489,
    "exist_function": [
      "frequency_Of_Largest"
    ]
  },
  {
    "code": "def binary_search(item_list,item):\r\n\tfirst = 0\r\n\tlast = len(item_list)-1\r\n\tfound = False\r\n\twhile( first<=last and not found):\r\n\t\tmid = (first + last)//2\r\n\t\tif item_list[mid] == item :\r\n\t\t\tfound = True\r\n\t\telse:\r\n\t\t\tif item < item_list[mid]:\r\n\t\t\t\tlast = mid - 1\r\n\t\t\telse:\r\n\t\t\t\tfirst = mid + 1\t\r\n\treturn found",
    "entry_point": "binary_search",
    "input": [
      [
        7,
        8,
        9,
        10,
        13
      ],
      10
    ],
    "output": true,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "item_list": [
            7,
            8,
            9,
            10,
            13
          ],
          "item": 10
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "first": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "last": 4
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "found": false
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "mid": 2
        }
      },
      {
        "line": 13,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "first": 3
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "mid": 3
        }
      },
      {
        "line": 8,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "found": true
        }
      },
      {
        "line": 14,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": true
        }
      }
    ],
    "id": 1462,
    "task_id": 492,
    "exist_function": [
      "binary_search"
    ]
  },
  {
    "code": "import math\r\ndef calculate_polygons(startx, starty, endx, endy, radius):\r\n    sl = (2 * radius) * math.tan(math.pi / 6)\r\n    p = sl * 0.5\r\n    b = sl * math.cos(math.radians(30))\r\n    w = b * 2\r\n    h = 2 * sl   \r\n    startx = startx - w\r\n    starty = starty - h\r\n    endx = endx + w\r\n    endy = endy + h\r\n    origx = startx\r\n    origy = starty\r\n    xoffset = b\r\n    yoffset = 3 * p\r\n    polygons = []\r\n    row = 1\r\n    counter = 0\r\n    while starty < endy:\r\n        if row % 2 == 0:\r\n            startx = origx + xoffset\r\n        else:\r\n            startx = origx\r\n        while startx < endx:\r\n            p1x = startx\r\n            p1y = starty + p\r\n            p2x = startx\r\n            p2y = starty + (3 * p)\r\n            p3x = startx + b\r\n            p3y = starty + h\r\n            p4x = startx + w\r\n            p4y = starty + (3 * p)\r\n            p5x = startx + w\r\n            p5y = starty + p\r\n            p6x = startx + b\r\n            p6y = starty\r\n            poly = [\r\n                (p1x, p1y),\r\n                (p2x, p2y),\r\n                (p3x, p3y),\r\n                (p4x, p4y),\r\n                (p5x, p5y),\r\n                (p6x, p6y),\r\n                (p1x, p1y)]\r\n            polygons.append(poly)\r\n            counter += 1\r\n            startx += w\r\n        starty += yoffset\r\n        row += 1\r\n    return polygons",
    "entry_point": "calculate_polygons",
    "input": [
      1,
      1,
      4,
      4,
      3
    ],
    "output": [
      [
        "(-5.0, -4.196152422706632)",
        "(-5.0, -0.7320508075688767)",
        "(-2.0, 1.0)",
        "(1.0, -0.7320508075688767)",
        "(1.0, -4.196152422706632)",
        "(-2.0, -5.928203230275509)",
        "(-5.0, -4.196152422706632)"
      ],
      [
        "(1.0, -4.196152422706632)",
        "(1.0, -0.7320508075688767)",
        "(4.0, 1.0)",
        "(7.0, -0.7320508075688767)",
        "(7.0, -4.196152422706632)",
        "(4.0, -5.928203230275509)",
        "(1.0, -4.196152422706632)"
      ],
      [
        "(7.0, -4.196152422706632)",
        "(7.0, -0.7320508075688767)",
        "(10.0, 1.0)",
        "(13.0, -0.7320508075688767)",
        "(13.0, -4.196152422706632)",
        "(10.0, -5.928203230275509)",
        "(7.0, -4.196152422706632)"
      ],
      [
        "(-2.0, 1.0000000000000004)",
        "(-2.0, 4.464101615137755)",
        "(1.0, 6.196152422706632)",
        "(4.0, 4.464101615137755)",
        "(4.0, 1.0000000000000004)",
        "(1.0, -0.7320508075688767)",
        "(-2.0, 1.0000000000000004)"
      ],
      [
        "(4.0, 1.0000000000000004)",
        "(4.0, 4.464101615137755)",
        "(7.0, 6.196152422706632)",
        "(10.0, 4.464101615137755)",
        "(10.0, 1.0000000000000004)",
        "(7.0, -0.7320508075688767)",
        "(4.0, 1.0000000000000004)"
      ],
      [
        "(-5.0, 6.196152422706632)",
        "(-5.0, 9.660254037844387)",
        "(-2.0, 11.392304845413264)",
        "(1.0, 9.660254037844387)",
        "(1.0, 6.196152422706632)",
        "(-2.0, 4.464101615137755)",
        "(-5.0, 6.196152422706632)"
      ],
      [
        "(1.0, 6.196152422706632)",
        "(1.0, 9.660254037844387)",
        "(4.0, 11.392304845413264)",
        "(7.0, 9.660254037844387)",
        "(7.0, 6.196152422706632)",
        "(4.0, 4.464101615137755)",
        "(1.0, 6.196152422706632)"
      ],
      [
        "(7.0, 6.196152422706632)",
        "(7.0, 9.660254037844387)",
        "(10.0, 11.392304845413264)",
        "(13.0, 9.660254037844387)",
        "(13.0, 6.196152422706632)",
        "(10.0, 4.464101615137755)",
        "(7.0, 6.196152422706632)"
      ],
      [
        "(-2.0, 11.392304845413264)",
        "(-2.0, 14.85640646055102)",
        "(1.0, 16.588457268119896)",
        "(4.0, 14.85640646055102)",
        "(4.0, 11.392304845413264)",
        "(1.0, 9.660254037844387)",
        "(-2.0, 11.392304845413264)"
      ],
      [
        "(4.0, 11.392304845413264)",
        "(4.0, 14.85640646055102)",
        "(7.0, 16.588457268119896)",
        "(10.0, 14.85640646055102)",
        "(10.0, 11.392304845413264)",
        "(7.0, 9.660254037844387)",
        "(4.0, 11.392304845413264)"
      ]
    ],
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "startx": 1,
          "starty": 1,
          "endx": 4,
          "endy": 4,
          "radius": 3
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sl": 3.4641016151377544
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "p": 1.7320508075688772
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "b": 3.0
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "w": 6.0
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "h": 6.928203230275509
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "startx": -5.0
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "starty": -5.928203230275509
        }
      },
      {
        "line": 10,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "endx": 10.0
        }
      },
      {
        "line": 11,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "endy": 10.928203230275509
        }
      },
      {
        "line": 12,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "origx": -5.0
        }
      },
      {
        "line": 13,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "origy": -5.928203230275509
        }
      },
      {
        "line": 14,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "xoffset": 3.0
        }
      },
      {
        "line": 15,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "yoffset": 5.196152422706632
        }
      },
      {
        "line": 16,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "polygons": []
        }
      },
      {
        "line": 17,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "row": 1
        }
      },
      {
        "line": 18,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "counter": 0
        }
      },
      {
        "line": 25,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "p1x": -5.0
        }
      },
      {
        "line": 26,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "p1y": -4.196152422706632
        }
      },
      {
        "line": 27,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "p2x": -5.0
        }
      },
      {
        "line": 28,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "p2y": -0.7320508075688767
        }
      },
      {
        "line": 29,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "p3x": -2.0
        }
      },
      {
        "line": 30,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "p3y": 1.0
        }
      },
      {
        "line": 31,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "p4x": 1.0
        }
      },
      {
        "line": 32,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "p4y": -0.7320508075688767
        }
      },
      {
        "line": 33,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "p5x": 1.0
        }
      },
      {
        "line": 34,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "p5y": -4.196152422706632
        }
      },
      {
        "line": 35,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "p6x": -2.0
        }
      },
      {
        "line": 36,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "p6y": -5.928203230275509
        }
      },
      {
        "line": 37,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "poly": [
            "(-5.0, -4.196152422706632)",
            "(-5.0, -0.7320508075688767)",
            "(-2.0, 1.0)",
            "(1.0, -0.7320508075688767)",
            "(1.0, -4.196152422706632)",
            "(-2.0, -5.928203230275509)",
            "(-5.0, -4.196152422706632)"
          ]
        }
      },
      {
        "line": 45,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "polygons[0]": [
            "(-5.0, -4.196152422706632)",
            "(-5.0, -0.7320508075688767)",
            "(-2.0, 1.0)",
            "(1.0, -0.7320508075688767)",
            "(1.0, -4.196152422706632)",
            "(-2.0, -5.928203230275509)",
            "(-5.0, -4.196152422706632)"
          ]
        }
      },
      {
        "line": 46,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "counter": 1
        }
      },
      {
        "line": 47,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "startx": 1.0
        }
      },
      {
        "line": 25,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "p1x": 1.0
        }
      },
      {
        "line": 27,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "p2x": 1.0
        }
      },
      {
        "line": 29,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "p3x": 4.0
        }
      },
      {
        "line": 31,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "p4x": 7.0
        }
      },
      {
        "line": 33,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "p5x": 7.0
        }
      },
      {
        "line": 35,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "p6x": 4.0
        }
      },
      {
        "line": 37,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "poly[3][0]": 7.0,
          "poly[4][0]": 7.0,
          "poly[1][0]": 1.0,
          "poly[5][0]": 4.0,
          "poly[0][0]": 1.0,
          "poly[6][0]": 1.0,
          "poly[2][0]": 4.0
        }
      },
      {
        "line": 45,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "polygons[1]": [
            "(1.0, -4.196152422706632)",
            "(1.0, -0.7320508075688767)",
            "(4.0, 1.0)",
            "(7.0, -0.7320508075688767)",
            "(7.0, -4.196152422706632)",
            "(4.0, -5.928203230275509)",
            "(1.0, -4.196152422706632)"
          ]
        }
      },
      {
        "line": 46,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "counter": 2
        }
      },
      {
        "line": 47,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "startx": 7.0
        }
      },
      {
        "line": 25,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "p1x": 7.0
        }
      },
      {
        "line": 27,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "p2x": 7.0
        }
      },
      {
        "line": 29,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "p3x": 10.0
        }
      },
      {
        "line": 31,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "p4x": 13.0
        }
      },
      {
        "line": 33,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "p5x": 13.0
        }
      },
      {
        "line": 35,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "p6x": 10.0
        }
      },
      {
        "line": 37,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "poly[3][0]": 13.0,
          "poly[4][0]": 13.0,
          "poly[1][0]": 7.0,
          "poly[5][0]": 10.0,
          "poly[0][0]": 7.0,
          "poly[6][0]": 7.0,
          "poly[2][0]": 10.0
        }
      },
      {
        "line": 45,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "polygons[2]": [
            "(7.0, -4.196152422706632)",
            "(7.0, -0.7320508075688767)",
            "(10.0, 1.0)",
            "(13.0, -0.7320508075688767)",
            "(13.0, -4.196152422706632)",
            "(10.0, -5.928203230275509)",
            "(7.0, -4.196152422706632)"
          ]
        }
      },
      {
        "line": 46,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "counter": 3
        }
      },
      {
        "line": 47,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "startx": 13.0
        }
      },
      {
        "line": 48,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "starty": -0.7320508075688767
        }
      },
      {
        "line": 49,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "row": 2
        }
      },
      {
        "line": 21,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "startx": -2.0
        }
      },
      {
        "line": 25,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "p1x": -2.0
        }
      },
      {
        "line": 26,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "p1y": 1.0000000000000004
        }
      },
      {
        "line": 27,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "p2x": -2.0
        }
      },
      {
        "line": 28,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "p2y": 4.464101615137755
        }
      },
      {
        "line": 29,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "p3x": 1.0
        }
      },
      {
        "line": 30,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "p3y": 6.196152422706632
        }
      },
      {
        "line": 31,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "p4x": 4.0
        }
      },
      {
        "line": 32,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "p4y": 4.464101615137755
        }
      },
      {
        "line": 33,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "p5x": 4.0
        }
      },
      {
        "line": 34,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "p5y": 1.0000000000000004
        }
      },
      {
        "line": 35,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "p6x": 1.0
        }
      },
      {
        "line": 36,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "p6y": -0.7320508075688767
        }
      },
      {
        "line": 37,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "poly[3][1]": 4.464101615137755,
          "poly[3][0]": 4.0,
          "poly[4][1]": 1.0000000000000004,
          "poly[1][1]": 4.464101615137755,
          "poly[4][0]": 4.0,
          "poly[1][0]": -2.0,
          "poly[6][1]": 1.0000000000000004,
          "poly[5][1]": -0.7320508075688767,
          "poly[2][1]": 6.196152422706632,
          "poly[5][0]": 1.0,
          "poly[0][0]": -2.0,
          "poly[0][1]": 1.0000000000000004,
          "poly[6][0]": -2.0,
          "poly[2][0]": 1.0
        }
      },
      {
        "line": 45,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "polygons[3]": [
            "(-2.0, 1.0000000000000004)",
            "(-2.0, 4.464101615137755)",
            "(1.0, 6.196152422706632)",
            "(4.0, 4.464101615137755)",
            "(4.0, 1.0000000000000004)",
            "(1.0, -0.7320508075688767)",
            "(-2.0, 1.0000000000000004)"
          ]
        }
      },
      {
        "line": 46,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "counter": 4
        }
      },
      {
        "line": 47,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "startx": 4.0
        }
      },
      {
        "line": 25,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "p1x": 4.0
        }
      },
      {
        "line": 27,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "p2x": 4.0
        }
      },
      {
        "line": 29,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "p3x": 7.0
        }
      },
      {
        "line": 31,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "p4x": 10.0
        }
      },
      {
        "line": 33,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "p5x": 10.0
        }
      },
      {
        "line": 35,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "p6x": 7.0
        }
      },
      {
        "line": 37,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "poly[3][0]": 10.0,
          "poly[4][0]": 10.0,
          "poly[1][0]": 4.0,
          "poly[5][0]": 7.0,
          "poly[0][0]": 4.0,
          "poly[6][0]": 4.0,
          "poly[2][0]": 7.0
        }
      },
      {
        "line": 45,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "polygons[4]": [
            "(4.0, 1.0000000000000004)",
            "(4.0, 4.464101615137755)",
            "(7.0, 6.196152422706632)",
            "(10.0, 4.464101615137755)",
            "(10.0, 1.0000000000000004)",
            "(7.0, -0.7320508075688767)",
            "(4.0, 1.0000000000000004)"
          ]
        }
      },
      {
        "line": 46,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "counter": 5
        }
      },
      {
        "line": 47,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "startx": 10.0
        }
      },
      {
        "line": 48,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "starty": 4.464101615137755
        }
      },
      {
        "line": 49,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "row": 3
        }
      },
      {
        "line": 23,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "startx": -5.0
        }
      },
      {
        "line": 25,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "p1x": -5.0
        }
      },
      {
        "line": 26,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "p1y": 6.196152422706632
        }
      },
      {
        "line": 27,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "p2x": -5.0
        }
      },
      {
        "line": 28,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "p2y": 9.660254037844387
        }
      },
      {
        "line": 29,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "p3x": -2.0
        }
      },
      {
        "line": 30,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "p3y": 11.392304845413264
        }
      },
      {
        "line": 31,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "p4x": 1.0
        }
      },
      {
        "line": 32,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "p4y": 9.660254037844387
        }
      },
      {
        "line": 33,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "p5x": 1.0
        }
      },
      {
        "line": 34,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "p5y": 6.196152422706632
        }
      },
      {
        "line": 35,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "p6x": -2.0
        }
      },
      {
        "line": 36,
        "step": 97,
        "action": "EXECUTE",
        "vars": {
          "p6y": 4.464101615137755
        }
      },
      {
        "line": 37,
        "step": 98,
        "action": "EXECUTE",
        "vars": {
          "poly[3][1]": 9.660254037844387,
          "poly[3][0]": 1.0,
          "poly[4][1]": 6.196152422706632,
          "poly[1][1]": 9.660254037844387,
          "poly[4][0]": 1.0,
          "poly[1][0]": -5.0,
          "poly[6][1]": 6.196152422706632,
          "poly[5][1]": 4.464101615137755,
          "poly[2][1]": 11.392304845413264,
          "poly[5][0]": -2.0,
          "poly[0][0]": -5.0,
          "poly[0][1]": 6.196152422706632,
          "poly[6][0]": -5.0,
          "poly[2][0]": -2.0
        }
      },
      {
        "line": 45,
        "step": 99,
        "action": "EXECUTE",
        "vars": {
          "polygons[5]": [
            "(-5.0, 6.196152422706632)",
            "(-5.0, 9.660254037844387)",
            "(-2.0, 11.392304845413264)",
            "(1.0, 9.660254037844387)",
            "(1.0, 6.196152422706632)",
            "(-2.0, 4.464101615137755)",
            "(-5.0, 6.196152422706632)"
          ]
        }
      },
      {
        "line": 46,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "counter": 6
        }
      },
      {
        "line": 47,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "startx": 1.0
        }
      },
      {
        "line": 25,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "p1x": 1.0
        }
      },
      {
        "line": 27,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "p2x": 1.0
        }
      },
      {
        "line": 29,
        "step": 104,
        "action": "EXECUTE",
        "vars": {
          "p3x": 4.0
        }
      },
      {
        "line": 31,
        "step": 105,
        "action": "EXECUTE",
        "vars": {
          "p4x": 7.0
        }
      },
      {
        "line": 33,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "p5x": 7.0
        }
      },
      {
        "line": 35,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "p6x": 4.0
        }
      },
      {
        "line": 37,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "poly[3][0]": 7.0,
          "poly[4][0]": 7.0,
          "poly[1][0]": 1.0,
          "poly[5][0]": 4.0,
          "poly[0][0]": 1.0,
          "poly[6][0]": 1.0,
          "poly[2][0]": 4.0
        }
      },
      {
        "line": 45,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "polygons[6]": [
            "(1.0, 6.196152422706632)",
            "(1.0, 9.660254037844387)",
            "(4.0, 11.392304845413264)",
            "(7.0, 9.660254037844387)",
            "(7.0, 6.196152422706632)",
            "(4.0, 4.464101615137755)",
            "(1.0, 6.196152422706632)"
          ]
        }
      },
      {
        "line": 46,
        "step": 110,
        "action": "EXECUTE",
        "vars": {
          "counter": 7
        }
      },
      {
        "line": 47,
        "step": 111,
        "action": "EXECUTE",
        "vars": {
          "startx": 7.0
        }
      },
      {
        "line": 25,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "p1x": 7.0
        }
      },
      {
        "line": 27,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "p2x": 7.0
        }
      },
      {
        "line": 29,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "p3x": 10.0
        }
      },
      {
        "line": 31,
        "step": 115,
        "action": "EXECUTE",
        "vars": {
          "p4x": 13.0
        }
      },
      {
        "line": 33,
        "step": 116,
        "action": "EXECUTE",
        "vars": {
          "p5x": 13.0
        }
      },
      {
        "line": 35,
        "step": 117,
        "action": "EXECUTE",
        "vars": {
          "p6x": 10.0
        }
      },
      {
        "line": 37,
        "step": 118,
        "action": "EXECUTE",
        "vars": {
          "poly[3][0]": 13.0,
          "poly[4][0]": 13.0,
          "poly[1][0]": 7.0,
          "poly[5][0]": 10.0,
          "poly[0][0]": 7.0,
          "poly[6][0]": 7.0,
          "poly[2][0]": 10.0
        }
      },
      {
        "line": 45,
        "step": 119,
        "action": "EXECUTE",
        "vars": {
          "polygons[7]": [
            "(7.0, 6.196152422706632)",
            "(7.0, 9.660254037844387)",
            "(10.0, 11.392304845413264)",
            "(13.0, 9.660254037844387)",
            "(13.0, 6.196152422706632)",
            "(10.0, 4.464101615137755)",
            "(7.0, 6.196152422706632)"
          ]
        }
      },
      {
        "line": 46,
        "step": 120,
        "action": "EXECUTE",
        "vars": {
          "counter": 8
        }
      },
      {
        "line": 47,
        "step": 121,
        "action": "EXECUTE",
        "vars": {
          "startx": 13.0
        }
      },
      {
        "line": 48,
        "step": 122,
        "action": "EXECUTE",
        "vars": {
          "starty": 9.660254037844387
        }
      },
      {
        "line": 49,
        "step": 123,
        "action": "EXECUTE",
        "vars": {
          "row": 4
        }
      },
      {
        "line": 21,
        "step": 124,
        "action": "EXECUTE",
        "vars": {
          "startx": -2.0
        }
      },
      {
        "line": 25,
        "step": 125,
        "action": "EXECUTE",
        "vars": {
          "p1x": -2.0
        }
      },
      {
        "line": 26,
        "step": 126,
        "action": "EXECUTE",
        "vars": {
          "p1y": 11.392304845413264
        }
      },
      {
        "line": 27,
        "step": 127,
        "action": "EXECUTE",
        "vars": {
          "p2x": -2.0
        }
      },
      {
        "line": 28,
        "step": 128,
        "action": "EXECUTE",
        "vars": {
          "p2y": 14.85640646055102
        }
      },
      {
        "line": 29,
        "step": 129,
        "action": "EXECUTE",
        "vars": {
          "p3x": 1.0
        }
      },
      {
        "line": 30,
        "step": 130,
        "action": "EXECUTE",
        "vars": {
          "p3y": 16.588457268119896
        }
      },
      {
        "line": 31,
        "step": 131,
        "action": "EXECUTE",
        "vars": {
          "p4x": 4.0
        }
      },
      {
        "line": 32,
        "step": 132,
        "action": "EXECUTE",
        "vars": {
          "p4y": 14.85640646055102
        }
      },
      {
        "line": 33,
        "step": 133,
        "action": "EXECUTE",
        "vars": {
          "p5x": 4.0
        }
      },
      {
        "line": 34,
        "step": 134,
        "action": "EXECUTE",
        "vars": {
          "p5y": 11.392304845413264
        }
      },
      {
        "line": 35,
        "step": 135,
        "action": "EXECUTE",
        "vars": {
          "p6x": 1.0
        }
      },
      {
        "line": 36,
        "step": 136,
        "action": "EXECUTE",
        "vars": {
          "p6y": 9.660254037844387
        }
      },
      {
        "line": 37,
        "step": 137,
        "action": "EXECUTE",
        "vars": {
          "poly[3][1]": 14.85640646055102,
          "poly[3][0]": 4.0,
          "poly[4][1]": 11.392304845413264,
          "poly[1][1]": 14.85640646055102,
          "poly[4][0]": 4.0,
          "poly[1][0]": -2.0,
          "poly[6][1]": 11.392304845413264,
          "poly[5][1]": 9.660254037844387,
          "poly[2][1]": 16.588457268119896,
          "poly[5][0]": 1.0,
          "poly[0][0]": -2.0,
          "poly[0][1]": 11.392304845413264,
          "poly[6][0]": -2.0,
          "poly[2][0]": 1.0
        }
      },
      {
        "line": 45,
        "step": 138,
        "action": "EXECUTE",
        "vars": {
          "polygons[8]": [
            "(-2.0, 11.392304845413264)",
            "(-2.0, 14.85640646055102)",
            "(1.0, 16.588457268119896)",
            "(4.0, 14.85640646055102)",
            "(4.0, 11.392304845413264)",
            "(1.0, 9.660254037844387)",
            "(-2.0, 11.392304845413264)"
          ]
        }
      },
      {
        "line": 46,
        "step": 139,
        "action": "EXECUTE",
        "vars": {
          "counter": 9
        }
      },
      {
        "line": 47,
        "step": 140,
        "action": "EXECUTE",
        "vars": {
          "startx": 4.0
        }
      },
      {
        "line": 25,
        "step": 141,
        "action": "EXECUTE",
        "vars": {
          "p1x": 4.0
        }
      },
      {
        "line": 27,
        "step": 142,
        "action": "EXECUTE",
        "vars": {
          "p2x": 4.0
        }
      },
      {
        "line": 29,
        "step": 143,
        "action": "EXECUTE",
        "vars": {
          "p3x": 7.0
        }
      },
      {
        "line": 31,
        "step": 144,
        "action": "EXECUTE",
        "vars": {
          "p4x": 10.0
        }
      },
      {
        "line": 33,
        "step": 145,
        "action": "EXECUTE",
        "vars": {
          "p5x": 10.0
        }
      },
      {
        "line": 35,
        "step": 146,
        "action": "EXECUTE",
        "vars": {
          "p6x": 7.0
        }
      },
      {
        "line": 37,
        "step": 147,
        "action": "EXECUTE",
        "vars": {
          "poly[3][0]": 10.0,
          "poly[4][0]": 10.0,
          "poly[1][0]": 4.0,
          "poly[5][0]": 7.0,
          "poly[0][0]": 4.0,
          "poly[6][0]": 4.0,
          "poly[2][0]": 7.0
        }
      },
      {
        "line": 45,
        "step": 148,
        "action": "EXECUTE",
        "vars": {
          "polygons[9]": [
            "(4.0, 11.392304845413264)",
            "(4.0, 14.85640646055102)",
            "(7.0, 16.588457268119896)",
            "(10.0, 14.85640646055102)",
            "(10.0, 11.392304845413264)",
            "(7.0, 9.660254037844387)",
            "(4.0, 11.392304845413264)"
          ]
        }
      },
      {
        "line": 46,
        "step": 149,
        "action": "EXECUTE",
        "vars": {
          "counter": 10
        }
      },
      {
        "line": 47,
        "step": 150,
        "action": "EXECUTE",
        "vars": {
          "startx": 10.0
        }
      },
      {
        "line": 48,
        "step": 151,
        "action": "EXECUTE",
        "vars": {
          "starty": 14.85640646055102
        }
      },
      {
        "line": 49,
        "step": 152,
        "action": "EXECUTE",
        "vars": {
          "row": 5
        }
      },
      {
        "line": 50,
        "step": 153,
        "action": "RETURN",
        "vars": {
          "__return__": [
            [
              "(-5.0, -4.196152422706632)",
              "(-5.0, -0.7320508075688767)",
              "(-2.0, 1.0)",
              "(1.0, -0.7320508075688767)",
              "(1.0, -4.196152422706632)",
              "(-2.0, -5.928203230275509)",
              "(-5.0, -4.196152422706632)"
            ],
            [
              "(1.0, -4.196152422706632)",
              "(1.0, -0.7320508075688767)",
              "(4.0, 1.0)",
              "(7.0, -0.7320508075688767)",
              "(7.0, -4.196152422706632)",
              "(4.0, -5.928203230275509)",
              "(1.0, -4.196152422706632)"
            ],
            [
              "(7.0, -4.196152422706632)",
              "(7.0, -0.7320508075688767)",
              "(10.0, 1.0)",
              "(13.0, -0.7320508075688767)",
              "(13.0, -4.196152422706632)",
              "(10.0, -5.928203230275509)",
              "(7.0, -4.196152422706632)"
            ],
            [
              "(-2.0, 1.0000000000000004)",
              "(-2.0, 4.464101615137755)",
              "(1.0, 6.196152422706632)",
              "(4.0, 4.464101615137755)",
              "(4.0, 1.0000000000000004)",
              "(1.0, -0.7320508075688767)",
              "(-2.0, 1.0000000000000004)"
            ],
            [
              "(4.0, 1.0000000000000004)",
              "(4.0, 4.464101615137755)",
              "(7.0, 6.196152422706632)",
              "(10.0, 4.464101615137755)",
              "(10.0, 1.0000000000000004)",
              "(7.0, -0.7320508075688767)",
              "(4.0, 1.0000000000000004)"
            ],
            [
              "(-5.0, 6.196152422706632)",
              "(-5.0, 9.660254037844387)",
              "(-2.0, 11.392304845413264)",
              "(1.0, 9.660254037844387)",
              "(1.0, 6.196152422706632)",
              "(-2.0, 4.464101615137755)",
              "(-5.0, 6.196152422706632)"
            ],
            [
              "(1.0, 6.196152422706632)",
              "(1.0, 9.660254037844387)",
              "(4.0, 11.392304845413264)",
              "(7.0, 9.660254037844387)",
              "(7.0, 6.196152422706632)",
              "(4.0, 4.464101615137755)",
              "(1.0, 6.196152422706632)"
            ],
            [
              "(7.0, 6.196152422706632)",
              "(7.0, 9.660254037844387)",
              "(10.0, 11.392304845413264)",
              "(13.0, 9.660254037844387)",
              "(13.0, 6.196152422706632)",
              "(10.0, 4.464101615137755)",
              "(7.0, 6.196152422706632)"
            ],
            [
              "(-2.0, 11.392304845413264)",
              "(-2.0, 14.85640646055102)",
              "(1.0, 16.588457268119896)",
              "(4.0, 14.85640646055102)",
              "(4.0, 11.392304845413264)",
              "(1.0, 9.660254037844387)",
              "(-2.0, 11.392304845413264)"
            ],
            [
              "(4.0, 11.392304845413264)",
              "(4.0, 14.85640646055102)",
              "(7.0, 16.588457268119896)",
              "(10.0, 14.85640646055102)",
              "(10.0, 11.392304845413264)",
              "(7.0, 9.660254037844387)",
              "(4.0, 11.392304845413264)"
            ]
          ]
        }
      }
    ],
    "id": 1464,
    "task_id": 493,
    "exist_function": [
      "calculate_polygons"
    ]
  },
  {
    "code": "import math\r\ndef calculate_polygons(startx, starty, endx, endy, radius):\r\n    sl = (2 * radius) * math.tan(math.pi / 6)\r\n    p = sl * 0.5\r\n    b = sl * math.cos(math.radians(30))\r\n    w = b * 2\r\n    h = 2 * sl   \r\n    startx = startx - w\r\n    starty = starty - h\r\n    endx = endx + w\r\n    endy = endy + h\r\n    origx = startx\r\n    origy = starty\r\n    xoffset = b\r\n    yoffset = 3 * p\r\n    polygons = []\r\n    row = 1\r\n    counter = 0\r\n    while starty < endy:\r\n        if row % 2 == 0:\r\n            startx = origx + xoffset\r\n        else:\r\n            startx = origx\r\n        while startx < endx:\r\n            p1x = startx\r\n            p1y = starty + p\r\n            p2x = startx\r\n            p2y = starty + (3 * p)\r\n            p3x = startx + b\r\n            p3y = starty + h\r\n            p4x = startx + w\r\n            p4y = starty + (3 * p)\r\n            p5x = startx + w\r\n            p5y = starty + p\r\n            p6x = startx + b\r\n            p6y = starty\r\n            poly = [\r\n                (p1x, p1y),\r\n                (p2x, p2y),\r\n                (p3x, p3y),\r\n                (p4x, p4y),\r\n                (p5x, p5y),\r\n                (p6x, p6y),\r\n                (p1x, p1y)]\r\n            polygons.append(poly)\r\n            counter += 1\r\n            startx += w\r\n        starty += yoffset\r\n        row += 1\r\n    return polygons",
    "entry_point": "calculate_polygons",
    "input": [
      5,
      4,
      7,
      9,
      8
    ],
    "output": [
      [
        "(-11.0, -9.856406460551018)",
        "(-11.0, -0.6188021535170058)",
        "(-3.0, 4.0)",
        "(5.0, -0.6188021535170058)",
        "(5.0, -9.856406460551018)",
        "(-3.0, -14.475208614068023)",
        "(-11.0, -9.856406460551018)"
      ],
      [
        "(5.0, -9.856406460551018)",
        "(5.0, -0.6188021535170058)",
        "(13.0, 4.0)",
        "(21.0, -0.6188021535170058)",
        "(21.0, -9.856406460551018)",
        "(13.0, -14.475208614068023)",
        "(5.0, -9.856406460551018)"
      ],
      [
        "(21.0, -9.856406460551018)",
        "(21.0, -0.6188021535170058)",
        "(29.0, 4.0)",
        "(37.0, -0.6188021535170058)",
        "(37.0, -9.856406460551018)",
        "(29.0, -14.475208614068023)",
        "(21.0, -9.856406460551018)"
      ],
      [
        "(-3.0, 4.0)",
        "(-3.0, 13.237604307034012)",
        "(5.0, 17.856406460551018)",
        "(13.0, 13.237604307034012)",
        "(13.0, 4.0)",
        "(5.0, -0.6188021535170058)",
        "(-3.0, 4.0)"
      ],
      [
        "(13.0, 4.0)",
        "(13.0, 13.237604307034012)",
        "(21.0, 17.856406460551018)",
        "(29.0, 13.237604307034012)",
        "(29.0, 4.0)",
        "(21.0, -0.6188021535170058)",
        "(13.0, 4.0)"
      ],
      [
        "(-11.0, 17.856406460551018)",
        "(-11.0, 27.09401076758503)",
        "(-3.0, 31.712812921102035)",
        "(5.0, 27.09401076758503)",
        "(5.0, 17.856406460551018)",
        "(-3.0, 13.237604307034012)",
        "(-11.0, 17.856406460551018)"
      ],
      [
        "(5.0, 17.856406460551018)",
        "(5.0, 27.09401076758503)",
        "(13.0, 31.712812921102035)",
        "(21.0, 27.09401076758503)",
        "(21.0, 17.856406460551018)",
        "(13.0, 13.237604307034012)",
        "(5.0, 17.856406460551018)"
      ],
      [
        "(21.0, 17.856406460551018)",
        "(21.0, 27.09401076758503)",
        "(29.0, 31.712812921102035)",
        "(37.0, 27.09401076758503)",
        "(37.0, 17.856406460551018)",
        "(29.0, 13.237604307034012)",
        "(21.0, 17.856406460551018)"
      ],
      [
        "(-3.0, 31.712812921102035)",
        "(-3.0, 40.95041722813605)",
        "(5.0, 45.569219381653056)",
        "(13.0, 40.95041722813605)",
        "(13.0, 31.712812921102035)",
        "(5.0, 27.09401076758503)",
        "(-3.0, 31.712812921102035)"
      ],
      [
        "(13.0, 31.712812921102035)",
        "(13.0, 40.95041722813605)",
        "(21.0, 45.569219381653056)",
        "(29.0, 40.95041722813605)",
        "(29.0, 31.712812921102035)",
        "(21.0, 27.09401076758503)",
        "(13.0, 31.712812921102035)"
      ]
    ],
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "startx": 5,
          "starty": 4,
          "endx": 7,
          "endy": 9,
          "radius": 8
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sl": 9.237604307034012
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "p": 4.618802153517006
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "b": 8.0
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "w": 16.0
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "h": 18.475208614068023
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "startx": -11.0
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "starty": -14.475208614068023
        }
      },
      {
        "line": 10,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "endx": 23.0
        }
      },
      {
        "line": 11,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "endy": 27.475208614068023
        }
      },
      {
        "line": 12,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "origx": -11.0
        }
      },
      {
        "line": 13,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "origy": -14.475208614068023
        }
      },
      {
        "line": 14,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "xoffset": 8.0
        }
      },
      {
        "line": 15,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "yoffset": 13.856406460551018
        }
      },
      {
        "line": 16,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "polygons": []
        }
      },
      {
        "line": 17,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "row": 1
        }
      },
      {
        "line": 18,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "counter": 0
        }
      },
      {
        "line": 25,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "p1x": -11.0
        }
      },
      {
        "line": 26,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "p1y": -9.856406460551018
        }
      },
      {
        "line": 27,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "p2x": -11.0
        }
      },
      {
        "line": 28,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "p2y": -0.6188021535170058
        }
      },
      {
        "line": 29,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "p3x": -3.0
        }
      },
      {
        "line": 30,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "p3y": 4.0
        }
      },
      {
        "line": 31,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "p4x": 5.0
        }
      },
      {
        "line": 32,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "p4y": -0.6188021535170058
        }
      },
      {
        "line": 33,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "p5x": 5.0
        }
      },
      {
        "line": 34,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "p5y": -9.856406460551018
        }
      },
      {
        "line": 35,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "p6x": -3.0
        }
      },
      {
        "line": 36,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "p6y": -14.475208614068023
        }
      },
      {
        "line": 37,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "poly": [
            "(-11.0, -9.856406460551018)",
            "(-11.0, -0.6188021535170058)",
            "(-3.0, 4.0)",
            "(5.0, -0.6188021535170058)",
            "(5.0, -9.856406460551018)",
            "(-3.0, -14.475208614068023)",
            "(-11.0, -9.856406460551018)"
          ]
        }
      },
      {
        "line": 45,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "polygons[0]": [
            "(-11.0, -9.856406460551018)",
            "(-11.0, -0.6188021535170058)",
            "(-3.0, 4.0)",
            "(5.0, -0.6188021535170058)",
            "(5.0, -9.856406460551018)",
            "(-3.0, -14.475208614068023)",
            "(-11.0, -9.856406460551018)"
          ]
        }
      },
      {
        "line": 46,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "counter": 1
        }
      },
      {
        "line": 47,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "startx": 5.0
        }
      },
      {
        "line": 25,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "p1x": 5.0
        }
      },
      {
        "line": 27,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "p2x": 5.0
        }
      },
      {
        "line": 29,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "p3x": 13.0
        }
      },
      {
        "line": 31,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "p4x": 21.0
        }
      },
      {
        "line": 33,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "p5x": 21.0
        }
      },
      {
        "line": 35,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "p6x": 13.0
        }
      },
      {
        "line": 37,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "poly[3][0]": 21.0,
          "poly[4][0]": 21.0,
          "poly[1][0]": 5.0,
          "poly[5][0]": 13.0,
          "poly[0][0]": 5.0,
          "poly[6][0]": 5.0,
          "poly[2][0]": 13.0
        }
      },
      {
        "line": 45,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "polygons[1]": [
            "(5.0, -9.856406460551018)",
            "(5.0, -0.6188021535170058)",
            "(13.0, 4.0)",
            "(21.0, -0.6188021535170058)",
            "(21.0, -9.856406460551018)",
            "(13.0, -14.475208614068023)",
            "(5.0, -9.856406460551018)"
          ]
        }
      },
      {
        "line": 46,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "counter": 2
        }
      },
      {
        "line": 47,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "startx": 21.0
        }
      },
      {
        "line": 25,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "p1x": 21.0
        }
      },
      {
        "line": 27,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "p2x": 21.0
        }
      },
      {
        "line": 29,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "p3x": 29.0
        }
      },
      {
        "line": 31,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "p4x": 37.0
        }
      },
      {
        "line": 33,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "p5x": 37.0
        }
      },
      {
        "line": 35,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "p6x": 29.0
        }
      },
      {
        "line": 37,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "poly[3][0]": 37.0,
          "poly[4][0]": 37.0,
          "poly[1][0]": 21.0,
          "poly[5][0]": 29.0,
          "poly[0][0]": 21.0,
          "poly[6][0]": 21.0,
          "poly[2][0]": 29.0
        }
      },
      {
        "line": 45,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "polygons[2]": [
            "(21.0, -9.856406460551018)",
            "(21.0, -0.6188021535170058)",
            "(29.0, 4.0)",
            "(37.0, -0.6188021535170058)",
            "(37.0, -9.856406460551018)",
            "(29.0, -14.475208614068023)",
            "(21.0, -9.856406460551018)"
          ]
        }
      },
      {
        "line": 46,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "counter": 3
        }
      },
      {
        "line": 47,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "startx": 37.0
        }
      },
      {
        "line": 48,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "starty": -0.6188021535170058
        }
      },
      {
        "line": 49,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "row": 2
        }
      },
      {
        "line": 21,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "startx": -3.0
        }
      },
      {
        "line": 25,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "p1x": -3.0
        }
      },
      {
        "line": 26,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "p1y": 4.0
        }
      },
      {
        "line": 27,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "p2x": -3.0
        }
      },
      {
        "line": 28,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "p2y": 13.237604307034012
        }
      },
      {
        "line": 29,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "p3x": 5.0
        }
      },
      {
        "line": 30,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "p3y": 17.856406460551018
        }
      },
      {
        "line": 31,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "p4x": 13.0
        }
      },
      {
        "line": 32,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "p4y": 13.237604307034012
        }
      },
      {
        "line": 33,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "p5x": 13.0
        }
      },
      {
        "line": 34,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "p5y": 4.0
        }
      },
      {
        "line": 35,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "p6x": 5.0
        }
      },
      {
        "line": 36,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "p6y": -0.6188021535170058
        }
      },
      {
        "line": 37,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "poly[3][1]": 13.237604307034012,
          "poly[3][0]": 13.0,
          "poly[4][1]": 4.0,
          "poly[1][1]": 13.237604307034012,
          "poly[4][0]": 13.0,
          "poly[1][0]": -3.0,
          "poly[6][1]": 4.0,
          "poly[5][1]": -0.6188021535170058,
          "poly[2][1]": 17.856406460551018,
          "poly[5][0]": 5.0,
          "poly[0][0]": -3.0,
          "poly[0][1]": 4.0,
          "poly[6][0]": -3.0,
          "poly[2][0]": 5.0
        }
      },
      {
        "line": 45,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "polygons[3]": [
            "(-3.0, 4.0)",
            "(-3.0, 13.237604307034012)",
            "(5.0, 17.856406460551018)",
            "(13.0, 13.237604307034012)",
            "(13.0, 4.0)",
            "(5.0, -0.6188021535170058)",
            "(-3.0, 4.0)"
          ]
        }
      },
      {
        "line": 46,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "counter": 4
        }
      },
      {
        "line": 47,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "startx": 13.0
        }
      },
      {
        "line": 25,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "p1x": 13.0
        }
      },
      {
        "line": 27,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "p2x": 13.0
        }
      },
      {
        "line": 29,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "p3x": 21.0
        }
      },
      {
        "line": 31,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "p4x": 29.0
        }
      },
      {
        "line": 33,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "p5x": 29.0
        }
      },
      {
        "line": 35,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "p6x": 21.0
        }
      },
      {
        "line": 37,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "poly[3][0]": 29.0,
          "poly[4][0]": 29.0,
          "poly[1][0]": 13.0,
          "poly[5][0]": 21.0,
          "poly[0][0]": 13.0,
          "poly[6][0]": 13.0,
          "poly[2][0]": 21.0
        }
      },
      {
        "line": 45,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "polygons[4]": [
            "(13.0, 4.0)",
            "(13.0, 13.237604307034012)",
            "(21.0, 17.856406460551018)",
            "(29.0, 13.237604307034012)",
            "(29.0, 4.0)",
            "(21.0, -0.6188021535170058)",
            "(13.0, 4.0)"
          ]
        }
      },
      {
        "line": 46,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "counter": 5
        }
      },
      {
        "line": 47,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "startx": 29.0
        }
      },
      {
        "line": 48,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "starty": 13.237604307034012
        }
      },
      {
        "line": 49,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "row": 3
        }
      },
      {
        "line": 23,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "startx": -11.0
        }
      },
      {
        "line": 25,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "p1x": -11.0
        }
      },
      {
        "line": 26,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "p1y": 17.856406460551018
        }
      },
      {
        "line": 27,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "p2x": -11.0
        }
      },
      {
        "line": 28,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "p2y": 27.09401076758503
        }
      },
      {
        "line": 29,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "p3x": -3.0
        }
      },
      {
        "line": 30,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "p3y": 31.712812921102035
        }
      },
      {
        "line": 31,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "p4x": 5.0
        }
      },
      {
        "line": 32,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "p4y": 27.09401076758503
        }
      },
      {
        "line": 33,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "p5x": 5.0
        }
      },
      {
        "line": 34,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "p5y": 17.856406460551018
        }
      },
      {
        "line": 35,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "p6x": -3.0
        }
      },
      {
        "line": 36,
        "step": 97,
        "action": "EXECUTE",
        "vars": {
          "p6y": 13.237604307034012
        }
      },
      {
        "line": 37,
        "step": 98,
        "action": "EXECUTE",
        "vars": {
          "poly[3][1]": 27.09401076758503,
          "poly[3][0]": 5.0,
          "poly[4][1]": 17.856406460551018,
          "poly[1][1]": 27.09401076758503,
          "poly[4][0]": 5.0,
          "poly[1][0]": -11.0,
          "poly[6][1]": 17.856406460551018,
          "poly[5][1]": 13.237604307034012,
          "poly[2][1]": 31.712812921102035,
          "poly[5][0]": -3.0,
          "poly[0][0]": -11.0,
          "poly[0][1]": 17.856406460551018,
          "poly[6][0]": -11.0,
          "poly[2][0]": -3.0
        }
      },
      {
        "line": 45,
        "step": 99,
        "action": "EXECUTE",
        "vars": {
          "polygons[5]": [
            "(-11.0, 17.856406460551018)",
            "(-11.0, 27.09401076758503)",
            "(-3.0, 31.712812921102035)",
            "(5.0, 27.09401076758503)",
            "(5.0, 17.856406460551018)",
            "(-3.0, 13.237604307034012)",
            "(-11.0, 17.856406460551018)"
          ]
        }
      },
      {
        "line": 46,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "counter": 6
        }
      },
      {
        "line": 47,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "startx": 5.0
        }
      },
      {
        "line": 25,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "p1x": 5.0
        }
      },
      {
        "line": 27,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "p2x": 5.0
        }
      },
      {
        "line": 29,
        "step": 104,
        "action": "EXECUTE",
        "vars": {
          "p3x": 13.0
        }
      },
      {
        "line": 31,
        "step": 105,
        "action": "EXECUTE",
        "vars": {
          "p4x": 21.0
        }
      },
      {
        "line": 33,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "p5x": 21.0
        }
      },
      {
        "line": 35,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "p6x": 13.0
        }
      },
      {
        "line": 37,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "poly[3][0]": 21.0,
          "poly[4][0]": 21.0,
          "poly[1][0]": 5.0,
          "poly[5][0]": 13.0,
          "poly[0][0]": 5.0,
          "poly[6][0]": 5.0,
          "poly[2][0]": 13.0
        }
      },
      {
        "line": 45,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "polygons[6]": [
            "(5.0, 17.856406460551018)",
            "(5.0, 27.09401076758503)",
            "(13.0, 31.712812921102035)",
            "(21.0, 27.09401076758503)",
            "(21.0, 17.856406460551018)",
            "(13.0, 13.237604307034012)",
            "(5.0, 17.856406460551018)"
          ]
        }
      },
      {
        "line": 46,
        "step": 110,
        "action": "EXECUTE",
        "vars": {
          "counter": 7
        }
      },
      {
        "line": 47,
        "step": 111,
        "action": "EXECUTE",
        "vars": {
          "startx": 21.0
        }
      },
      {
        "line": 25,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "p1x": 21.0
        }
      },
      {
        "line": 27,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "p2x": 21.0
        }
      },
      {
        "line": 29,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "p3x": 29.0
        }
      },
      {
        "line": 31,
        "step": 115,
        "action": "EXECUTE",
        "vars": {
          "p4x": 37.0
        }
      },
      {
        "line": 33,
        "step": 116,
        "action": "EXECUTE",
        "vars": {
          "p5x": 37.0
        }
      },
      {
        "line": 35,
        "step": 117,
        "action": "EXECUTE",
        "vars": {
          "p6x": 29.0
        }
      },
      {
        "line": 37,
        "step": 118,
        "action": "EXECUTE",
        "vars": {
          "poly[3][0]": 37.0,
          "poly[4][0]": 37.0,
          "poly[1][0]": 21.0,
          "poly[5][0]": 29.0,
          "poly[0][0]": 21.0,
          "poly[6][0]": 21.0,
          "poly[2][0]": 29.0
        }
      },
      {
        "line": 45,
        "step": 119,
        "action": "EXECUTE",
        "vars": {
          "polygons[7]": [
            "(21.0, 17.856406460551018)",
            "(21.0, 27.09401076758503)",
            "(29.0, 31.712812921102035)",
            "(37.0, 27.09401076758503)",
            "(37.0, 17.856406460551018)",
            "(29.0, 13.237604307034012)",
            "(21.0, 17.856406460551018)"
          ]
        }
      },
      {
        "line": 46,
        "step": 120,
        "action": "EXECUTE",
        "vars": {
          "counter": 8
        }
      },
      {
        "line": 47,
        "step": 121,
        "action": "EXECUTE",
        "vars": {
          "startx": 37.0
        }
      },
      {
        "line": 48,
        "step": 122,
        "action": "EXECUTE",
        "vars": {
          "starty": 27.09401076758503
        }
      },
      {
        "line": 49,
        "step": 123,
        "action": "EXECUTE",
        "vars": {
          "row": 4
        }
      },
      {
        "line": 21,
        "step": 124,
        "action": "EXECUTE",
        "vars": {
          "startx": -3.0
        }
      },
      {
        "line": 25,
        "step": 125,
        "action": "EXECUTE",
        "vars": {
          "p1x": -3.0
        }
      },
      {
        "line": 26,
        "step": 126,
        "action": "EXECUTE",
        "vars": {
          "p1y": 31.712812921102035
        }
      },
      {
        "line": 27,
        "step": 127,
        "action": "EXECUTE",
        "vars": {
          "p2x": -3.0
        }
      },
      {
        "line": 28,
        "step": 128,
        "action": "EXECUTE",
        "vars": {
          "p2y": 40.95041722813605
        }
      },
      {
        "line": 29,
        "step": 129,
        "action": "EXECUTE",
        "vars": {
          "p3x": 5.0
        }
      },
      {
        "line": 30,
        "step": 130,
        "action": "EXECUTE",
        "vars": {
          "p3y": 45.569219381653056
        }
      },
      {
        "line": 31,
        "step": 131,
        "action": "EXECUTE",
        "vars": {
          "p4x": 13.0
        }
      },
      {
        "line": 32,
        "step": 132,
        "action": "EXECUTE",
        "vars": {
          "p4y": 40.95041722813605
        }
      },
      {
        "line": 33,
        "step": 133,
        "action": "EXECUTE",
        "vars": {
          "p5x": 13.0
        }
      },
      {
        "line": 34,
        "step": 134,
        "action": "EXECUTE",
        "vars": {
          "p5y": 31.712812921102035
        }
      },
      {
        "line": 35,
        "step": 135,
        "action": "EXECUTE",
        "vars": {
          "p6x": 5.0
        }
      },
      {
        "line": 36,
        "step": 136,
        "action": "EXECUTE",
        "vars": {
          "p6y": 27.09401076758503
        }
      },
      {
        "line": 37,
        "step": 137,
        "action": "EXECUTE",
        "vars": {
          "poly[3][1]": 40.95041722813605,
          "poly[3][0]": 13.0,
          "poly[4][1]": 31.712812921102035,
          "poly[1][1]": 40.95041722813605,
          "poly[4][0]": 13.0,
          "poly[1][0]": -3.0,
          "poly[6][1]": 31.712812921102035,
          "poly[5][1]": 27.09401076758503,
          "poly[2][1]": 45.569219381653056,
          "poly[5][0]": 5.0,
          "poly[0][0]": -3.0,
          "poly[0][1]": 31.712812921102035,
          "poly[6][0]": -3.0,
          "poly[2][0]": 5.0
        }
      },
      {
        "line": 45,
        "step": 138,
        "action": "EXECUTE",
        "vars": {
          "polygons[8]": [
            "(-3.0, 31.712812921102035)",
            "(-3.0, 40.95041722813605)",
            "(5.0, 45.569219381653056)",
            "(13.0, 40.95041722813605)",
            "(13.0, 31.712812921102035)",
            "(5.0, 27.09401076758503)",
            "(-3.0, 31.712812921102035)"
          ]
        }
      },
      {
        "line": 46,
        "step": 139,
        "action": "EXECUTE",
        "vars": {
          "counter": 9
        }
      },
      {
        "line": 47,
        "step": 140,
        "action": "EXECUTE",
        "vars": {
          "startx": 13.0
        }
      },
      {
        "line": 25,
        "step": 141,
        "action": "EXECUTE",
        "vars": {
          "p1x": 13.0
        }
      },
      {
        "line": 27,
        "step": 142,
        "action": "EXECUTE",
        "vars": {
          "p2x": 13.0
        }
      },
      {
        "line": 29,
        "step": 143,
        "action": "EXECUTE",
        "vars": {
          "p3x": 21.0
        }
      },
      {
        "line": 31,
        "step": 144,
        "action": "EXECUTE",
        "vars": {
          "p4x": 29.0
        }
      },
      {
        "line": 33,
        "step": 145,
        "action": "EXECUTE",
        "vars": {
          "p5x": 29.0
        }
      },
      {
        "line": 35,
        "step": 146,
        "action": "EXECUTE",
        "vars": {
          "p6x": 21.0
        }
      },
      {
        "line": 37,
        "step": 147,
        "action": "EXECUTE",
        "vars": {
          "poly[3][0]": 29.0,
          "poly[4][0]": 29.0,
          "poly[1][0]": 13.0,
          "poly[5][0]": 21.0,
          "poly[0][0]": 13.0,
          "poly[6][0]": 13.0,
          "poly[2][0]": 21.0
        }
      },
      {
        "line": 45,
        "step": 148,
        "action": "EXECUTE",
        "vars": {
          "polygons[9]": [
            "(13.0, 31.712812921102035)",
            "(13.0, 40.95041722813605)",
            "(21.0, 45.569219381653056)",
            "(29.0, 40.95041722813605)",
            "(29.0, 31.712812921102035)",
            "(21.0, 27.09401076758503)",
            "(13.0, 31.712812921102035)"
          ]
        }
      },
      {
        "line": 46,
        "step": 149,
        "action": "EXECUTE",
        "vars": {
          "counter": 10
        }
      },
      {
        "line": 47,
        "step": 150,
        "action": "EXECUTE",
        "vars": {
          "startx": 29.0
        }
      },
      {
        "line": 48,
        "step": 151,
        "action": "EXECUTE",
        "vars": {
          "starty": 40.95041722813605
        }
      },
      {
        "line": 49,
        "step": 152,
        "action": "EXECUTE",
        "vars": {
          "row": 5
        }
      },
      {
        "line": 50,
        "step": 153,
        "action": "RETURN",
        "vars": {
          "__return__": [
            [
              "(-11.0, -9.856406460551018)",
              "(-11.0, -0.6188021535170058)",
              "(-3.0, 4.0)",
              "(5.0, -0.6188021535170058)",
              "(5.0, -9.856406460551018)",
              "(-3.0, -14.475208614068023)",
              "(-11.0, -9.856406460551018)"
            ],
            [
              "(5.0, -9.856406460551018)",
              "(5.0, -0.6188021535170058)",
              "(13.0, 4.0)",
              "(21.0, -0.6188021535170058)",
              "(21.0, -9.856406460551018)",
              "(13.0, -14.475208614068023)",
              "(5.0, -9.856406460551018)"
            ],
            [
              "(21.0, -9.856406460551018)",
              "(21.0, -0.6188021535170058)",
              "(29.0, 4.0)",
              "(37.0, -0.6188021535170058)",
              "(37.0, -9.856406460551018)",
              "(29.0, -14.475208614068023)",
              "(21.0, -9.856406460551018)"
            ],
            [
              "(-3.0, 4.0)",
              "(-3.0, 13.237604307034012)",
              "(5.0, 17.856406460551018)",
              "(13.0, 13.237604307034012)",
              "(13.0, 4.0)",
              "(5.0, -0.6188021535170058)",
              "(-3.0, 4.0)"
            ],
            [
              "(13.0, 4.0)",
              "(13.0, 13.237604307034012)",
              "(21.0, 17.856406460551018)",
              "(29.0, 13.237604307034012)",
              "(29.0, 4.0)",
              "(21.0, -0.6188021535170058)",
              "(13.0, 4.0)"
            ],
            [
              "(-11.0, 17.856406460551018)",
              "(-11.0, 27.09401076758503)",
              "(-3.0, 31.712812921102035)",
              "(5.0, 27.09401076758503)",
              "(5.0, 17.856406460551018)",
              "(-3.0, 13.237604307034012)",
              "(-11.0, 17.856406460551018)"
            ],
            [
              "(5.0, 17.856406460551018)",
              "(5.0, 27.09401076758503)",
              "(13.0, 31.712812921102035)",
              "(21.0, 27.09401076758503)",
              "(21.0, 17.856406460551018)",
              "(13.0, 13.237604307034012)",
              "(5.0, 17.856406460551018)"
            ],
            [
              "(21.0, 17.856406460551018)",
              "(21.0, 27.09401076758503)",
              "(29.0, 31.712812921102035)",
              "(37.0, 27.09401076758503)",
              "(37.0, 17.856406460551018)",
              "(29.0, 13.237604307034012)",
              "(21.0, 17.856406460551018)"
            ],
            [
              "(-3.0, 31.712812921102035)",
              "(-3.0, 40.95041722813605)",
              "(5.0, 45.569219381653056)",
              "(13.0, 40.95041722813605)",
              "(13.0, 31.712812921102035)",
              "(5.0, 27.09401076758503)",
              "(-3.0, 31.712812921102035)"
            ],
            [
              "(13.0, 31.712812921102035)",
              "(13.0, 40.95041722813605)",
              "(21.0, 45.569219381653056)",
              "(29.0, 40.95041722813605)",
              "(29.0, 31.712812921102035)",
              "(21.0, 27.09401076758503)",
              "(13.0, 31.712812921102035)"
            ]
          ]
        }
      }
    ],
    "id": 1465,
    "task_id": 493,
    "exist_function": [
      "calculate_polygons"
    ]
  },
  {
    "code": "import math\r\ndef calculate_polygons(startx, starty, endx, endy, radius):\r\n    sl = (2 * radius) * math.tan(math.pi / 6)\r\n    p = sl * 0.5\r\n    b = sl * math.cos(math.radians(30))\r\n    w = b * 2\r\n    h = 2 * sl   \r\n    startx = startx - w\r\n    starty = starty - h\r\n    endx = endx + w\r\n    endy = endy + h\r\n    origx = startx\r\n    origy = starty\r\n    xoffset = b\r\n    yoffset = 3 * p\r\n    polygons = []\r\n    row = 1\r\n    counter = 0\r\n    while starty < endy:\r\n        if row % 2 == 0:\r\n            startx = origx + xoffset\r\n        else:\r\n            startx = origx\r\n        while startx < endx:\r\n            p1x = startx\r\n            p1y = starty + p\r\n            p2x = startx\r\n            p2y = starty + (3 * p)\r\n            p3x = startx + b\r\n            p3y = starty + h\r\n            p4x = startx + w\r\n            p4y = starty + (3 * p)\r\n            p5x = startx + w\r\n            p5y = starty + p\r\n            p6x = startx + b\r\n            p6y = starty\r\n            poly = [\r\n                (p1x, p1y),\r\n                (p2x, p2y),\r\n                (p3x, p3y),\r\n                (p4x, p4y),\r\n                (p5x, p5y),\r\n                (p6x, p6y),\r\n                (p1x, p1y)]\r\n            polygons.append(poly)\r\n            counter += 1\r\n            startx += w\r\n        starty += yoffset\r\n        row += 1\r\n    return polygons",
    "entry_point": "calculate_polygons",
    "input": [
      9,
      6,
      4,
      3,
      2
    ],
    "output": [
      [
        "(5.0, 2.5358983848622456)",
        "(5.0, 4.8452994616207485)",
        "(7.0, 6.0)",
        "(9.0, 4.8452994616207485)",
        "(9.0, 2.5358983848622456)",
        "(7.0, 1.3811978464829942)",
        "(5.0, 2.5358983848622456)"
      ],
      [
        "(7.0, 6.0)",
        "(7.0, 8.309401076758503)",
        "(9.0, 9.464101615137753)",
        "(11.0, 8.309401076758503)",
        "(11.0, 6.0)",
        "(9.0, 4.8452994616207485)",
        "(7.0, 6.0)"
      ]
    ],
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "startx": 9,
          "starty": 6,
          "endx": 4,
          "endy": 3,
          "radius": 2
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sl": 2.309401076758503
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "p": 1.1547005383792515
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "b": 2.0
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "w": 4.0
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "h": 4.618802153517006
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "startx": 5.0
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "starty": 1.3811978464829942
        }
      },
      {
        "line": 10,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "endx": 8.0
        }
      },
      {
        "line": 11,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "endy": 7.618802153517006
        }
      },
      {
        "line": 12,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "origx": 5.0
        }
      },
      {
        "line": 13,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "origy": 1.3811978464829942
        }
      },
      {
        "line": 14,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "xoffset": 2.0
        }
      },
      {
        "line": 15,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "yoffset": 3.4641016151377544
        }
      },
      {
        "line": 16,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "polygons": []
        }
      },
      {
        "line": 17,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "row": 1
        }
      },
      {
        "line": 18,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "counter": 0
        }
      },
      {
        "line": 25,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "p1x": 5.0
        }
      },
      {
        "line": 26,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "p1y": 2.5358983848622456
        }
      },
      {
        "line": 27,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "p2x": 5.0
        }
      },
      {
        "line": 28,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "p2y": 4.8452994616207485
        }
      },
      {
        "line": 29,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "p3x": 7.0
        }
      },
      {
        "line": 30,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "p3y": 6.0
        }
      },
      {
        "line": 31,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "p4x": 9.0
        }
      },
      {
        "line": 32,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "p4y": 4.8452994616207485
        }
      },
      {
        "line": 33,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "p5x": 9.0
        }
      },
      {
        "line": 34,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "p5y": 2.5358983848622456
        }
      },
      {
        "line": 35,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "p6x": 7.0
        }
      },
      {
        "line": 36,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "p6y": 1.3811978464829942
        }
      },
      {
        "line": 37,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "poly": [
            "(5.0, 2.5358983848622456)",
            "(5.0, 4.8452994616207485)",
            "(7.0, 6.0)",
            "(9.0, 4.8452994616207485)",
            "(9.0, 2.5358983848622456)",
            "(7.0, 1.3811978464829942)",
            "(5.0, 2.5358983848622456)"
          ]
        }
      },
      {
        "line": 45,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "polygons[0]": [
            "(5.0, 2.5358983848622456)",
            "(5.0, 4.8452994616207485)",
            "(7.0, 6.0)",
            "(9.0, 4.8452994616207485)",
            "(9.0, 2.5358983848622456)",
            "(7.0, 1.3811978464829942)",
            "(5.0, 2.5358983848622456)"
          ]
        }
      },
      {
        "line": 46,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "counter": 1
        }
      },
      {
        "line": 47,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "startx": 9.0
        }
      },
      {
        "line": 48,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "starty": 4.8452994616207485
        }
      },
      {
        "line": 49,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "row": 2
        }
      },
      {
        "line": 21,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "startx": 7.0
        }
      },
      {
        "line": 25,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "p1x": 7.0
        }
      },
      {
        "line": 26,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "p1y": 6.0
        }
      },
      {
        "line": 27,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "p2x": 7.0
        }
      },
      {
        "line": 28,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "p2y": 8.309401076758503
        }
      },
      {
        "line": 29,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "p3x": 9.0
        }
      },
      {
        "line": 30,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "p3y": 9.464101615137753
        }
      },
      {
        "line": 31,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "p4x": 11.0
        }
      },
      {
        "line": 32,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "p4y": 8.309401076758503
        }
      },
      {
        "line": 33,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "p5x": 11.0
        }
      },
      {
        "line": 34,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "p5y": 6.0
        }
      },
      {
        "line": 35,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "p6x": 9.0
        }
      },
      {
        "line": 36,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "p6y": 4.8452994616207485
        }
      },
      {
        "line": 37,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "poly[3][1]": 8.309401076758503,
          "poly[3][0]": 11.0,
          "poly[4][1]": 6.0,
          "poly[1][1]": 8.309401076758503,
          "poly[4][0]": 11.0,
          "poly[1][0]": 7.0,
          "poly[6][1]": 6.0,
          "poly[5][1]": 4.8452994616207485,
          "poly[2][1]": 9.464101615137753,
          "poly[5][0]": 9.0,
          "poly[0][0]": 7.0,
          "poly[0][1]": 6.0,
          "poly[6][0]": 7.0,
          "poly[2][0]": 9.0
        }
      },
      {
        "line": 45,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "polygons[1]": [
            "(7.0, 6.0)",
            "(7.0, 8.309401076758503)",
            "(9.0, 9.464101615137753)",
            "(11.0, 8.309401076758503)",
            "(11.0, 6.0)",
            "(9.0, 4.8452994616207485)",
            "(7.0, 6.0)"
          ]
        }
      },
      {
        "line": 46,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "counter": 2
        }
      },
      {
        "line": 47,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "startx": 11.0
        }
      },
      {
        "line": 48,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "starty": 8.309401076758503
        }
      },
      {
        "line": 49,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "row": 3
        }
      },
      {
        "line": 50,
        "step": 55,
        "action": "RETURN",
        "vars": {
          "__return__": [
            [
              "(5.0, 2.5358983848622456)",
              "(5.0, 4.8452994616207485)",
              "(7.0, 6.0)",
              "(9.0, 4.8452994616207485)",
              "(9.0, 2.5358983848622456)",
              "(7.0, 1.3811978464829942)",
              "(5.0, 2.5358983848622456)"
            ],
            [
              "(7.0, 6.0)",
              "(7.0, 8.309401076758503)",
              "(9.0, 9.464101615137753)",
              "(11.0, 8.309401076758503)",
              "(11.0, 6.0)",
              "(9.0, 4.8452994616207485)",
              "(7.0, 6.0)"
            ]
          ]
        }
      }
    ],
    "id": 1466,
    "task_id": 493,
    "exist_function": [
      "calculate_polygons"
    ]
  },
  {
    "code": "import math\r\ndef surfacearea_cone(r,h):\r\n  l = math.sqrt(r * r + h * h)\r\n  SA = math.pi * r * (r + l)\r\n  return SA",
    "entry_point": "surfacearea_cone",
    "input": [
      5,
      12
    ],
    "output": 282.7433388230814,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "r": 5,
          "h": 12
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "l": 13.0
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "SA": 282.7433388230814
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 282.7433388230814
        }
      }
    ],
    "id": 1476,
    "task_id": 497,
    "exist_function": [
      "surfacearea_cone"
    ]
  },
  {
    "code": "import math\r\ndef surfacearea_cone(r,h):\r\n  l = math.sqrt(r * r + h * h)\r\n  SA = math.pi * r * (r + l)\r\n  return SA",
    "entry_point": "surfacearea_cone",
    "input": [
      10,
      15
    ],
    "output": 880.5179353159282,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "r": 10,
          "h": 15
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "l": 18.027756377319946
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "SA": 880.5179353159282
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 880.5179353159282
        }
      }
    ],
    "id": 1477,
    "task_id": 497,
    "exist_function": [
      "surfacearea_cone"
    ]
  },
  {
    "code": "import math\r\ndef surfacearea_cone(r,h):\r\n  l = math.sqrt(r * r + h * h)\r\n  SA = math.pi * r * (r + l)\r\n  return SA",
    "entry_point": "surfacearea_cone",
    "input": [
      19,
      17
    ],
    "output": 2655.923961165254,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "r": 19,
          "h": 17
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "l": 25.495097567963924
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "SA": 2655.923961165254
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 2655.923961165254
        }
      }
    ],
    "id": 1478,
    "task_id": 497,
    "exist_function": [
      "surfacearea_cone"
    ]
  },
  {
    "code": "def gcd(x, y):\r\n    gcd = 1\r\n    if x % y == 0:\r\n        return y\r\n    for k in range(int(y / 2), 0, -1):\r\n        if x % k == 0 and y % k == 0:\r\n            gcd = k\r\n            break  \r\n    return gcd",
    "entry_point": "gcd",
    "input": [
      12,
      17
    ],
    "output": 1,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "x": 12,
          "y": 17
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "gcd": 1
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "k": 8
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "k": 7
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "k": 6
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "k": 5
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "k": 4
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "k": 3
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "k": 2
        }
      },
      {
        "line": 5,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "k": 1
        }
      },
      {
        "line": 9,
        "step": 11,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 1479,
    "task_id": 498,
    "exist_function": [
      "gcd"
    ]
  },
  {
    "code": "def gcd(x, y):\r\n    gcd = 1\r\n    if x % y == 0:\r\n        return y\r\n    for k in range(int(y / 2), 0, -1):\r\n        if x % k == 0 and y % k == 0:\r\n            gcd = k\r\n            break  \r\n    return gcd",
    "entry_point": "gcd",
    "input": [
      4,
      6
    ],
    "output": 2,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "x": 4,
          "y": 6
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "gcd": 1
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "k": 3
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "k": 2
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "gcd": 2
        }
      },
      {
        "line": 9,
        "step": 6,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 1480,
    "task_id": 498,
    "exist_function": [
      "gcd"
    ]
  },
  {
    "code": "def gcd(x, y):\r\n    gcd = 1\r\n    if x % y == 0:\r\n        return y\r\n    for k in range(int(y / 2), 0, -1):\r\n        if x % k == 0 and y % k == 0:\r\n            gcd = k\r\n            break  \r\n    return gcd",
    "entry_point": "gcd",
    "input": [
      2,
      9
    ],
    "output": 1,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "x": 2,
          "y": 9
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "gcd": 1
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "k": 4
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "k": 3
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "k": 2
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "k": 1
        }
      },
      {
        "line": 9,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 1481,
    "task_id": 498,
    "exist_function": [
      "gcd"
    ]
  },
  {
    "code": "def concatenate_elements(list):\r\n  ans = ' '\r\n  for i in list:\r\n    ans = ans+ ' '+i\r\n  return (ans)",
    "entry_point": "concatenate_elements",
    "input": [
      [
        "hello",
        "there",
        "have",
        "a",
        "rocky",
        "day"
      ]
    ],
    "output": "  hello there have a rocky day",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list": [
            "hello",
            "there",
            "have",
            "a",
            "rocky",
            "day"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "ans": " "
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": "hello"
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "ans": "  hello"
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": "there"
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "ans": "  hello there"
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": "have"
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "ans": "  hello there have"
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": "a"
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "ans": "  hello there have a"
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": "rocky"
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "ans": "  hello there have a rocky"
        }
      },
      {
        "line": 3,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": "day"
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "ans": "  hello there have a rocky day"
        }
      },
      {
        "line": 5,
        "step": 15,
        "action": "RETURN",
        "vars": {
          "__return__": "  hello there have a rocky day"
        }
      }
    ],
    "id": 1485,
    "task_id": 500,
    "exist_function": [
      "concatenate_elements"
    ]
  },
  {
    "code": "def concatenate_elements(list):\r\n  ans = ' '\r\n  for i in list:\r\n    ans = ans+ ' '+i\r\n  return (ans)",
    "entry_point": "concatenate_elements",
    "input": [
      [
        "Hi",
        "there",
        "How",
        "are",
        "you"
      ]
    ],
    "output": "  Hi there How are you",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list": [
            "Hi",
            "there",
            "How",
            "are",
            "you"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "ans": " "
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": "Hi"
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "ans": "  Hi"
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": "there"
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "ans": "  Hi there"
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": "How"
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "ans": "  Hi there How"
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": "are"
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "ans": "  Hi there How are"
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": "you"
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "ans": "  Hi there How are you"
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "RETURN",
        "vars": {
          "__return__": "  Hi there How are you"
        }
      }
    ],
    "id": 1486,
    "task_id": 500,
    "exist_function": [
      "concatenate_elements"
    ]
  },
  {
    "code": "def concatenate_elements(list):\r\n  ans = ' '\r\n  for i in list:\r\n    ans = ans+ ' '+i\r\n  return (ans)",
    "entry_point": "concatenate_elements",
    "input": [
      [
        "Part",
        "of",
        "the",
        "journey",
        "is",
        "end"
      ]
    ],
    "output": "  Part of the journey is end",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list": [
            "Part",
            "of",
            "the",
            "journey",
            "is",
            "end"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "ans": " "
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": "Part"
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "ans": "  Part"
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": "of"
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "ans": "  Part of"
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": "the"
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "ans": "  Part of the"
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": "journey"
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "ans": "  Part of the journey"
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": "is"
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "ans": "  Part of the journey is"
        }
      },
      {
        "line": 3,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": "end"
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "ans": "  Part of the journey is end"
        }
      },
      {
        "line": 5,
        "step": 15,
        "action": "RETURN",
        "vars": {
          "__return__": "  Part of the journey is end"
        }
      }
    ],
    "id": 1487,
    "task_id": 500,
    "exist_function": [
      "concatenate_elements"
    ]
  },
  {
    "code": "def ngcd(x,y):\r\n    i=1\r\n    while(i<=x and i<=y):\r\n        if(x%i==0 and y%i == 0):\r\n            gcd=i;\r\n        i+=1\r\n    return gcd;\r\ndef num_comm_div(x,y):\r\n  n = ngcd(x,y)\r\n  result = 0\r\n  z = int(n**0.5)\r\n  i = 1\r\n  while(i <= z):\r\n    if(n % i == 0):\r\n      result += 2 \r\n      if(i == n/i):\r\n        result-=1\r\n    i+=1\r\n  return result",
    "entry_point": "num_comm_div",
    "input": [
      2,
      4
    ],
    "output": 2,
    "traces": [
      {
        "line": 8,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "x": 2,
          "y": 4
        }
      },
      {
        "line": 9,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "n": 2
        }
      },
      {
        "line": 10,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "result": 0
        }
      },
      {
        "line": 11,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "z": 1
        }
      },
      {
        "line": 12,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 15,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "result": 2
        }
      },
      {
        "line": 18,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 19,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 1488,
    "task_id": 501,
    "exist_function": [
      "ngcd",
      "num_comm_div"
    ]
  },
  {
    "code": "def ngcd(x,y):\r\n    i=1\r\n    while(i<=x and i<=y):\r\n        if(x%i==0 and y%i == 0):\r\n            gcd=i;\r\n        i+=1\r\n    return gcd;\r\ndef num_comm_div(x,y):\r\n  n = ngcd(x,y)\r\n  result = 0\r\n  z = int(n**0.5)\r\n  i = 1\r\n  while(i <= z):\r\n    if(n % i == 0):\r\n      result += 2 \r\n      if(i == n/i):\r\n        result-=1\r\n    i+=1\r\n  return result",
    "entry_point": "num_comm_div",
    "input": [
      2,
      8
    ],
    "output": 2,
    "traces": [
      {
        "line": 8,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "x": 2,
          "y": 8
        }
      },
      {
        "line": 9,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "n": 2
        }
      },
      {
        "line": 10,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "result": 0
        }
      },
      {
        "line": 11,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "z": 1
        }
      },
      {
        "line": 12,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 15,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "result": 2
        }
      },
      {
        "line": 18,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 19,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 1489,
    "task_id": 501,
    "exist_function": [
      "ngcd",
      "num_comm_div"
    ]
  },
  {
    "code": "def ngcd(x,y):\r\n    i=1\r\n    while(i<=x and i<=y):\r\n        if(x%i==0 and y%i == 0):\r\n            gcd=i;\r\n        i+=1\r\n    return gcd;\r\ndef num_comm_div(x,y):\r\n  n = ngcd(x,y)\r\n  result = 0\r\n  z = int(n**0.5)\r\n  i = 1\r\n  while(i <= z):\r\n    if(n % i == 0):\r\n      result += 2 \r\n      if(i == n/i):\r\n        result-=1\r\n    i+=1\r\n  return result",
    "entry_point": "num_comm_div",
    "input": [
      12,
      24
    ],
    "output": 6,
    "traces": [
      {
        "line": 8,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "x": 12,
          "y": 24
        }
      },
      {
        "line": 9,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "n": 12
        }
      },
      {
        "line": 10,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "result": 0
        }
      },
      {
        "line": 11,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "z": 3
        }
      },
      {
        "line": 12,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 15,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "result": 2
        }
      },
      {
        "line": 18,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 15,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "result": 4
        }
      },
      {
        "line": 18,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 15,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "result": 6
        }
      },
      {
        "line": 18,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 19,
        "step": 12,
        "action": "RETURN",
        "vars": {
          "__return__": 6
        }
      }
    ],
    "id": 1490,
    "task_id": 501,
    "exist_function": [
      "ngcd",
      "num_comm_div"
    ]
  },
  {
    "code": "def sum_Of_Series(n): \r\n    sum = 0\r\n    for i in range(1,n + 1): \r\n        sum += i * i*i       \r\n    return sum",
    "entry_point": "sum_Of_Series",
    "input": [
      5
    ],
    "output": 225,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 5
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sum": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "sum": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "sum": 9
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "sum": 36
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "sum": 100
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "sum": 225
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "RETURN",
        "vars": {
          "__return__": 225
        }
      }
    ],
    "id": 1497,
    "task_id": 504,
    "exist_function": [
      "sum_Of_Series"
    ]
  },
  {
    "code": "def sum_Of_Series(n): \r\n    sum = 0\r\n    for i in range(1,n + 1): \r\n        sum += i * i*i       \r\n    return sum",
    "entry_point": "sum_Of_Series",
    "input": [
      2
    ],
    "output": 9,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 2
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sum": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "sum": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "sum": 9
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": 9
        }
      }
    ],
    "id": 1498,
    "task_id": 504,
    "exist_function": [
      "sum_Of_Series"
    ]
  },
  {
    "code": "def sum_Of_Series(n): \r\n    sum = 0\r\n    for i in range(1,n + 1): \r\n        sum += i * i*i       \r\n    return sum",
    "entry_point": "sum_Of_Series",
    "input": [
      3
    ],
    "output": 36,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 3
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sum": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "sum": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "sum": 9
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "sum": 36
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": 36
        }
      }
    ],
    "id": 1499,
    "task_id": 504,
    "exist_function": [
      "sum_Of_Series"
    ]
  },
  {
    "code": "def counting_sort(my_list):\r\n    max_value = 0\r\n    for i in range(len(my_list)):\r\n        if my_list[i] > max_value:\r\n            max_value = my_list[i]\r\n    buckets = [0] * (max_value + 1)\r\n    for i in my_list:\r\n        buckets[i] += 1\r\n    i = 0\r\n    for j in range(max_value + 1):\r\n         for a in range(buckets[j]):\r\n             my_list[i] = j\r\n             i += 1\r\n    return my_list",
    "entry_point": "counting_sort",
    "input": [
      [
        1,
        4,
        5,
        6,
        7,
        8,
        23
      ]
    ],
    "output": [
      1,
      4,
      5,
      6,
      7,
      8,
      23
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "my_list": [
            1,
            23,
            4,
            5,
            6,
            7,
            8
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "max_value": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "max_value": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "max_value": 23
        }
      },
      {
        "line": 3,
        "step": "7~11",
        "action": "LOOP",
        "vars": {
          "i": "2→6"
        }
      },
      {
        "line": 6,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "buckets": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 7,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 8,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "buckets[1]": 1
        }
      },
      {
        "line": 7,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 23
        }
      },
      {
        "line": 8,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "buckets[23]": 1
        }
      },
      {
        "line": 7,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 8,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "buckets[4]": 1
        }
      },
      {
        "line": 7,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 8,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "buckets[5]": 1
        }
      },
      {
        "line": 7,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 8,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "buckets[6]": 1
        }
      },
      {
        "line": 7,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 8,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "buckets[7]": 1
        }
      },
      {
        "line": 7,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 8,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "buckets[8]": 1
        }
      },
      {
        "line": 9,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 10,
        "step": "28~29",
        "action": "LOOP",
        "vars": {
          "j": "0→1"
        }
      },
      {
        "line": 11,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "a": 0
        }
      },
      {
        "line": 13,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 10,
        "step": "32~34",
        "action": "LOOP",
        "vars": {
          "j": "2→4"
        }
      },
      {
        "line": 12,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "my_list[1]": 4
        }
      },
      {
        "line": 13,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 10,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 12,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "my_list[2]": 5
        }
      },
      {
        "line": 13,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 10,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 12,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "my_list[3]": 6
        }
      },
      {
        "line": 13,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 10,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 12,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "my_list[4]": 7
        }
      },
      {
        "line": 13,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 10,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 12,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "my_list[5]": 8
        }
      },
      {
        "line": 13,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 10,
        "step": "49~63",
        "action": "LOOP",
        "vars": {
          "j": "9→23"
        }
      },
      {
        "line": 12,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "my_list[6]": 23
        }
      },
      {
        "line": 13,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 14,
        "step": 66,
        "action": "RETURN",
        "vars": {
          "__return__": [
            1,
            4,
            5,
            6,
            7,
            8,
            23
          ]
        }
      }
    ],
    "id": 159,
    "task_id": 54,
    "exist_function": [
      "counting_sort"
    ]
  },
  {
    "code": "def counting_sort(my_list):\r\n    max_value = 0\r\n    for i in range(len(my_list)):\r\n        if my_list[i] > max_value:\r\n            max_value = my_list[i]\r\n    buckets = [0] * (max_value + 1)\r\n    for i in my_list:\r\n        buckets[i] += 1\r\n    i = 0\r\n    for j in range(max_value + 1):\r\n         for a in range(buckets[j]):\r\n             my_list[i] = j\r\n             i += 1\r\n    return my_list",
    "entry_point": "counting_sort",
    "input": [
      [
        9,
        12,
        28,
        33,
        45,
        69
      ]
    ],
    "output": [
      9,
      12,
      28,
      33,
      45,
      69
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "my_list": [
            12,
            9,
            28,
            33,
            69,
            45
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "max_value": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "max_value": 12
        }
      },
      {
        "line": 3,
        "step": "5~6",
        "action": "LOOP",
        "vars": {
          "i": "1→2"
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "max_value": 28
        }
      },
      {
        "line": 3,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "max_value": 33
        }
      },
      {
        "line": 3,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "max_value": 69
        }
      },
      {
        "line": 3,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "buckets": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "i": 12
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "buckets[12]": 1
        }
      },
      {
        "line": 7,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 8,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "buckets[9]": 1
        }
      },
      {
        "line": 7,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "i": 28
        }
      },
      {
        "line": 8,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "buckets[28]": 1
        }
      },
      {
        "line": 7,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "i": 33
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "buckets[33]": 1
        }
      },
      {
        "line": 7,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "i": 69
        }
      },
      {
        "line": 8,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "buckets[69]": 1
        }
      },
      {
        "line": 7,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "i": 45
        }
      },
      {
        "line": 8,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "buckets[45]": 1
        }
      },
      {
        "line": 9,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 10,
        "step": "27~36",
        "action": "LOOP",
        "vars": {
          "j": "0→9"
        }
      },
      {
        "line": 11,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "a": 0
        }
      },
      {
        "line": 12,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "my_list[0]": 9
        }
      },
      {
        "line": 13,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 10,
        "step": "40~42",
        "action": "LOOP",
        "vars": {
          "j": "10→12"
        }
      },
      {
        "line": 12,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "my_list[1]": 12
        }
      },
      {
        "line": 13,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 10,
        "step": "45~60",
        "action": "LOOP",
        "vars": {
          "j": "13→28"
        }
      },
      {
        "line": 13,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 10,
        "step": "62~66",
        "action": "LOOP",
        "vars": {
          "j": "29→33"
        }
      },
      {
        "line": 13,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 10,
        "step": "68~79",
        "action": "LOOP",
        "vars": {
          "j": "34→45"
        }
      },
      {
        "line": 12,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "my_list[4]": 45
        }
      },
      {
        "line": 13,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 10,
        "step": "82~105",
        "action": "LOOP",
        "vars": {
          "j": "46→69"
        }
      },
      {
        "line": 12,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "my_list[5]": 69
        }
      },
      {
        "line": 13,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 14,
        "step": 108,
        "action": "RETURN",
        "vars": {
          "__return__": [
            9,
            12,
            28,
            33,
            45,
            69
          ]
        }
      }
    ],
    "id": 160,
    "task_id": 54,
    "exist_function": [
      "counting_sort"
    ]
  },
  {
    "code": "def counting_sort(my_list):\r\n    max_value = 0\r\n    for i in range(len(my_list)):\r\n        if my_list[i] > max_value:\r\n            max_value = my_list[i]\r\n    buckets = [0] * (max_value + 1)\r\n    for i in my_list:\r\n        buckets[i] += 1\r\n    i = 0\r\n    for j in range(max_value + 1):\r\n         for a in range(buckets[j]):\r\n             my_list[i] = j\r\n             i += 1\r\n    return my_list",
    "entry_point": "counting_sort",
    "input": [
      [
        1,
        2,
        3,
        4,
        8,
        14
      ]
    ],
    "output": [
      1,
      2,
      3,
      4,
      8,
      14
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "my_list": [
            8,
            4,
            14,
            3,
            2,
            1
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "max_value": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "max_value": 8
        }
      },
      {
        "line": 3,
        "step": "5~6",
        "action": "LOOP",
        "vars": {
          "i": "1→2"
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "max_value": 14
        }
      },
      {
        "line": 3,
        "step": "8~10",
        "action": "LOOP",
        "vars": {
          "i": "3→5"
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "buckets": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 8,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "buckets[8]": 1
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "buckets[4]": 1
        }
      },
      {
        "line": 7,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 14
        }
      },
      {
        "line": 8,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "buckets[14]": 1
        }
      },
      {
        "line": 7,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 8,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "buckets[3]": 1
        }
      },
      {
        "line": 7,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "buckets[2]": 1
        }
      },
      {
        "line": 7,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 8,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "buckets[1]": 1
        }
      },
      {
        "line": 9,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 10,
        "step": "25~26",
        "action": "LOOP",
        "vars": {
          "j": "0→1"
        }
      },
      {
        "line": 11,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "a": 0
        }
      },
      {
        "line": 12,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "my_list[0]": 1
        }
      },
      {
        "line": 13,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 10,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 12,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "my_list[1]": 2
        }
      },
      {
        "line": 13,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 10,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 12,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "my_list[2]": 3
        }
      },
      {
        "line": 13,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 10,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 12,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "my_list[3]": 4
        }
      },
      {
        "line": 13,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 10,
        "step": "39~42",
        "action": "LOOP",
        "vars": {
          "j": "5→8"
        }
      },
      {
        "line": 12,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "my_list[4]": 8
        }
      },
      {
        "line": 13,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 10,
        "step": "45~50",
        "action": "LOOP",
        "vars": {
          "j": "9→14"
        }
      },
      {
        "line": 12,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "my_list[5]": 14
        }
      },
      {
        "line": 13,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 14,
        "step": 53,
        "action": "RETURN",
        "vars": {
          "__return__": [
            1,
            2,
            3,
            4,
            8,
            14
          ]
        }
      }
    ],
    "id": 161,
    "task_id": 54,
    "exist_function": [
      "counting_sort"
    ]
  },
  {
    "code": "def find_Max_Num(arr,n) : \r\n    arr.sort(reverse = True) \r\n    num = arr[0] \r\n    for i in range(1,n) : \r\n        num = num * 10 + arr[i] \r\n    return num",
    "entry_point": "find_Max_Num",
    "input": [
      [
        3,
        2,
        1
      ],
      3
    ],
    "output": 321,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            1,
            2,
            3
          ],
          "n": 3
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "arr[2]": 1,
          "arr[0]": 3
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "num": 3
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "num": 32
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "num": 321
        }
      },
      {
        "line": 6,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": 321
        }
      }
    ],
    "id": 168,
    "task_id": 57,
    "exist_function": [
      "find_Max_Num"
    ]
  },
  {
    "code": "def find_Max_Num(arr,n) : \r\n    arr.sort(reverse = True) \r\n    num = arr[0] \r\n    for i in range(1,n) : \r\n        num = num * 10 + arr[i] \r\n    return num",
    "entry_point": "find_Max_Num",
    "input": [
      [
        6,
        5,
        4,
        1
      ],
      4
    ],
    "output": 6541,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            4,
            5,
            6,
            1
          ],
          "n": 4
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "arr[2]": 4,
          "arr[0]": 6
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "num": 6
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "num": 65
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "num": 654
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "num": 6541
        }
      },
      {
        "line": 6,
        "step": 10,
        "action": "RETURN",
        "vars": {
          "__return__": 6541
        }
      }
    ],
    "id": 169,
    "task_id": 57,
    "exist_function": [
      "find_Max_Num"
    ]
  },
  {
    "code": "def find_Max_Num(arr,n) : \r\n    arr.sort(reverse = True) \r\n    num = arr[0] \r\n    for i in range(1,n) : \r\n        num = num * 10 + arr[i] \r\n    return num",
    "entry_point": "find_Max_Num",
    "input": [
      [
        9,
        3,
        2,
        1
      ],
      4
    ],
    "output": 9321,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            1,
            2,
            3,
            9
          ],
          "n": 4
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "arr[3]": 1,
          "arr[1]": 3,
          "arr[2]": 2,
          "arr[0]": 9
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "num": 9
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "num": 93
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "num": 932
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "num": 9321
        }
      },
      {
        "line": 6,
        "step": 10,
        "action": "RETURN",
        "vars": {
          "__return__": 9321
        }
      }
    ],
    "id": 170,
    "task_id": 57,
    "exist_function": [
      "find_Max_Num"
    ]
  },
  {
    "code": "def max_len_sub( arr, n): \r\n\tmls=[] \r\n\tmax = 0\r\n\tfor i in range(n): \r\n\t\tmls.append(1) \r\n\tfor i in range(n): \r\n\t\tfor j in range(i): \r\n\t\t\tif (abs(arr[i] - arr[j]) <= 1 and mls[i] < mls[j] + 1): \r\n\t\t\t\tmls[i] = mls[j] + 1\r\n\tfor i in range(n): \r\n\t\tif (max < mls[i]): \r\n\t\t\tmax = mls[i] \r\n\treturn max",
    "entry_point": "max_len_sub",
    "input": [
      [
        2,
        5,
        6,
        3,
        7,
        6,
        5,
        8
      ],
      8
    ],
    "output": 5,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            2,
            5,
            6,
            3,
            7,
            6,
            5,
            8
          ],
          "n": 8
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "mls": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "max": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "mls[0]": 1
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "mls[1]": 1
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "mls[2]": 1
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "mls[3]": 1
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "mls[4]": 1
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 5,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "mls[5]": 1
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 5,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "mls[6]": 1
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 5,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "mls[7]": 1
        }
      },
      {
        "line": 6,
        "step": "20~21",
        "action": "LOOP",
        "vars": {
          "i": "0→1"
        }
      },
      {
        "line": 7,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 6,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 7,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 9,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "mls[2]": 2
        }
      },
      {
        "line": 6,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 7,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 9,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "mls[3]": 2
        }
      },
      {
        "line": 7,
        "step": "29~30",
        "action": "LOOP",
        "vars": {
          "j": "1→2"
        }
      },
      {
        "line": 6,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 7,
        "step": "32~34",
        "action": "LOOP",
        "vars": {
          "j": "0→2"
        }
      },
      {
        "line": 9,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "mls[4]": 3
        }
      },
      {
        "line": 7,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 7,
        "step": "38~39",
        "action": "LOOP",
        "vars": {
          "j": "0→1"
        }
      },
      {
        "line": 9,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "mls[5]": 2
        }
      },
      {
        "line": 7,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 9,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "mls[5]": 3
        }
      },
      {
        "line": 7,
        "step": "43~44",
        "action": "LOOP",
        "vars": {
          "j": "3→4"
        }
      },
      {
        "line": 9,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "mls[5]": 4
        }
      },
      {
        "line": 6,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 7,
        "step": "47~48",
        "action": "LOOP",
        "vars": {
          "j": "0→1"
        }
      },
      {
        "line": 9,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "mls[6]": 2
        }
      },
      {
        "line": 7,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 9,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "mls[6]": 3
        }
      },
      {
        "line": 7,
        "step": "52~54",
        "action": "LOOP",
        "vars": {
          "j": "3→5"
        }
      },
      {
        "line": 9,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "mls[6]": 5
        }
      },
      {
        "line": 6,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 7,
        "step": "57~61",
        "action": "LOOP",
        "vars": {
          "j": "0→4"
        }
      },
      {
        "line": 9,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "mls[7]": 4
        }
      },
      {
        "line": 7,
        "step": "63~64",
        "action": "LOOP",
        "vars": {
          "j": "5→6"
        }
      },
      {
        "line": 10,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 12,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "max": 1
        }
      },
      {
        "line": 10,
        "step": "67~68",
        "action": "LOOP",
        "vars": {
          "i": "1→2"
        }
      },
      {
        "line": 12,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "max": 2
        }
      },
      {
        "line": 10,
        "step": "70~71",
        "action": "LOOP",
        "vars": {
          "i": "3→4"
        }
      },
      {
        "line": 12,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "max": 3
        }
      },
      {
        "line": 10,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 12,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "max": 4
        }
      },
      {
        "line": 10,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 12,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "max": 5
        }
      },
      {
        "line": 10,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 13,
        "step": 78,
        "action": "RETURN",
        "vars": {
          "__return__": 5
        }
      }
    ],
    "id": 177,
    "task_id": 60,
    "exist_function": [
      "max_len_sub"
    ]
  },
  {
    "code": "def max_len_sub( arr, n): \r\n\tmls=[] \r\n\tmax = 0\r\n\tfor i in range(n): \r\n\t\tmls.append(1) \r\n\tfor i in range(n): \r\n\t\tfor j in range(i): \r\n\t\t\tif (abs(arr[i] - arr[j]) <= 1 and mls[i] < mls[j] + 1): \r\n\t\t\t\tmls[i] = mls[j] + 1\r\n\tfor i in range(n): \r\n\t\tif (max < mls[i]): \r\n\t\t\tmax = mls[i] \r\n\treturn max",
    "entry_point": "max_len_sub",
    "input": [
      [
        -2,
        -1,
        5,
        -1,
        4,
        0,
        3
      ],
      7
    ],
    "output": 4,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            -2,
            -1,
            5,
            -1,
            4,
            0,
            3
          ],
          "n": 7
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "mls": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "max": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "mls[0]": 1
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "mls[1]": 1
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "mls[2]": 1
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "mls[3]": 1
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "mls[4]": 1
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 5,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "mls[5]": 1
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 5,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "mls[6]": 1
        }
      },
      {
        "line": 6,
        "step": "18~19",
        "action": "LOOP",
        "vars": {
          "i": "0→1"
        }
      },
      {
        "line": 7,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 9,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "mls[1]": 2
        }
      },
      {
        "line": 6,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 7,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 7,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 9,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "mls[3]": 2
        }
      },
      {
        "line": 7,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 9,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "mls[3]": 3
        }
      },
      {
        "line": 7,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 7,
        "step": "31~33",
        "action": "LOOP",
        "vars": {
          "j": "0→2"
        }
      },
      {
        "line": 9,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "mls[4]": 2
        }
      },
      {
        "line": 7,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 7,
        "step": "37~38",
        "action": "LOOP",
        "vars": {
          "j": "0→1"
        }
      },
      {
        "line": 9,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "mls[5]": 3
        }
      },
      {
        "line": 7,
        "step": "40~41",
        "action": "LOOP",
        "vars": {
          "j": "2→3"
        }
      },
      {
        "line": 9,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "mls[5]": 4
        }
      },
      {
        "line": 7,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 7,
        "step": "45~49",
        "action": "LOOP",
        "vars": {
          "j": "0→4"
        }
      },
      {
        "line": 9,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "mls[6]": 3
        }
      },
      {
        "line": 7,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 10,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 12,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "max": 1
        }
      },
      {
        "line": 10,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 12,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "max": 2
        }
      },
      {
        "line": 10,
        "step": "56~57",
        "action": "LOOP",
        "vars": {
          "i": "2→3"
        }
      },
      {
        "line": 12,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "max": 3
        }
      },
      {
        "line": 10,
        "step": "59~60",
        "action": "LOOP",
        "vars": {
          "i": "4→5"
        }
      },
      {
        "line": 12,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "max": 4
        }
      },
      {
        "line": 10,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 13,
        "step": 63,
        "action": "RETURN",
        "vars": {
          "__return__": 4
        }
      }
    ],
    "id": 178,
    "task_id": 60,
    "exist_function": [
      "max_len_sub"
    ]
  },
  {
    "code": "def max_len_sub( arr, n): \r\n\tmls=[] \r\n\tmax = 0\r\n\tfor i in range(n): \r\n\t\tmls.append(1) \r\n\tfor i in range(n): \r\n\t\tfor j in range(i): \r\n\t\t\tif (abs(arr[i] - arr[j]) <= 1 and mls[i] < mls[j] + 1): \r\n\t\t\t\tmls[i] = mls[j] + 1\r\n\tfor i in range(n): \r\n\t\tif (max < mls[i]): \r\n\t\t\tmax = mls[i] \r\n\treturn max",
    "entry_point": "max_len_sub",
    "input": [
      [
        9,
        11,
        13,
        15,
        18
      ],
      5
    ],
    "output": 1,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            9,
            11,
            13,
            15,
            18
          ],
          "n": 5
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "mls": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "max": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "mls[0]": 1
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "mls[1]": 1
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "mls[2]": 1
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "mls[3]": 1
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "mls[4]": 1
        }
      },
      {
        "line": 6,
        "step": "14~15",
        "action": "LOOP",
        "vars": {
          "i": "0→1"
        }
      },
      {
        "line": 7,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 6,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 7,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 7,
        "step": "20~22",
        "action": "LOOP",
        "vars": {
          "j": "0→2"
        }
      },
      {
        "line": 6,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 7,
        "step": "24~27",
        "action": "LOOP",
        "vars": {
          "j": "0→3"
        }
      },
      {
        "line": 10,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 12,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "max": 1
        }
      },
      {
        "line": 10,
        "step": "30~33",
        "action": "LOOP",
        "vars": {
          "i": "1→4"
        }
      },
      {
        "line": 13,
        "step": 34,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 179,
    "task_id": 60,
    "exist_function": [
      "max_len_sub"
    ]
  },
  {
    "code": "from collections import defaultdict\r\ndef count_Substrings(s,n):\r\n    count,sum = 0,0\r\n    mp = defaultdict(lambda : 0)\r\n    mp[0] += 1\r\n    for i in range(n):\r\n        sum += ord(s[i]) - ord('0')\r\n        count += mp[sum - (i + 1)]\r\n        mp[sum - (i + 1)] += 1\r\n    return count",
    "entry_point": "count_Substrings",
    "input": [
      "112112",
      6
    ],
    "output": 6,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "s": "112112",
          "n": 6
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "count": 0,
          "sum": 0
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "mp": {}
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 1
          }
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "sum": 1
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 2
          }
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "sum": 2
        }
      },
      {
        "line": 8,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 9,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3
          }
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "sum": 4
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3,
            "1": 0
          }
        }
      },
      {
        "line": 9,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3,
            "1": 1
          }
        }
      },
      {
        "line": 6,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 7,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "sum": 5
        }
      },
      {
        "line": 8,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "count": 4
        }
      },
      {
        "line": 9,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3,
            "1": 2
          }
        }
      },
      {
        "line": 6,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 7,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "sum": 6
        }
      },
      {
        "line": 8,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "count": 6
        }
      },
      {
        "line": 9,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3,
            "1": 3
          }
        }
      },
      {
        "line": 6,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 7,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "sum": 8
        }
      },
      {
        "line": 8,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3,
            "1": 3,
            "2": 0
          }
        }
      },
      {
        "line": 9,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3,
            "1": 3,
            "2": 1
          }
        }
      },
      {
        "line": 10,
        "step": 29,
        "action": "RETURN",
        "vars": {
          "__return__": 6
        }
      }
    ],
    "id": 180,
    "task_id": 61,
    "exist_function": [
      "count_Substrings"
    ]
  },
  {
    "code": "from collections import defaultdict\r\ndef count_Substrings(s,n):\r\n    count,sum = 0,0\r\n    mp = defaultdict(lambda : 0)\r\n    mp[0] += 1\r\n    for i in range(n):\r\n        sum += ord(s[i]) - ord('0')\r\n        count += mp[sum - (i + 1)]\r\n        mp[sum - (i + 1)] += 1\r\n    return count",
    "entry_point": "count_Substrings",
    "input": [
      "111",
      3
    ],
    "output": 6,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "s": "111",
          "n": 3
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "count": 0,
          "sum": 0
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "mp": {}
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 1
          }
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "sum": 1
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 2
          }
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "sum": 2
        }
      },
      {
        "line": 8,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 9,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3
          }
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "sum": 3
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "count": 6
        }
      },
      {
        "line": 9,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 4
          }
        }
      },
      {
        "line": 10,
        "step": 17,
        "action": "RETURN",
        "vars": {
          "__return__": 6
        }
      }
    ],
    "id": 181,
    "task_id": 61,
    "exist_function": [
      "count_Substrings"
    ]
  },
  {
    "code": "from collections import defaultdict\r\ndef count_Substrings(s,n):\r\n    count,sum = 0,0\r\n    mp = defaultdict(lambda : 0)\r\n    mp[0] += 1\r\n    for i in range(n):\r\n        sum += ord(s[i]) - ord('0')\r\n        count += mp[sum - (i + 1)]\r\n        mp[sum - (i + 1)] += 1\r\n    return count",
    "entry_point": "count_Substrings",
    "input": [
      "1101112",
      7
    ],
    "output": 12,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "s": "1101112",
          "n": 7
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "count": 0,
          "sum": 0
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "mp": {}
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 1
          }
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "sum": 1
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 2
          }
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "sum": 2
        }
      },
      {
        "line": 8,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 9,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3
          }
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 8,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3,
            "-1": 0
          }
        }
      },
      {
        "line": 9,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3,
            "-1": 1
          }
        }
      },
      {
        "line": 6,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 7,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "sum": 3
        }
      },
      {
        "line": 8,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "count": 4
        }
      },
      {
        "line": 9,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3,
            "-1": 2
          }
        }
      },
      {
        "line": 6,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 7,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "sum": 4
        }
      },
      {
        "line": 8,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "count": 6
        }
      },
      {
        "line": 9,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3,
            "-1": 3
          }
        }
      },
      {
        "line": 6,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 7,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "sum": 5
        }
      },
      {
        "line": 8,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "count": 9
        }
      },
      {
        "line": 9,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 3,
            "-1": 4
          }
        }
      },
      {
        "line": 6,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 7,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "sum": 7
        }
      },
      {
        "line": 8,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "count": 12
        }
      },
      {
        "line": 9,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "mp": {
            "0": 4,
            "-1": 4
          }
        }
      },
      {
        "line": 10,
        "step": 32,
        "action": "RETURN",
        "vars": {
          "__return__": 12
        }
      }
    ],
    "id": 182,
    "task_id": 61,
    "exist_function": [
      "count_Substrings"
    ]
  },
  {
    "code": "def max_difference(test_list):\r\n  temp = [abs(b - a) for a, b in test_list]\r\n  res = max(temp)\r\n  return (res)",
    "entry_point": "max_difference",
    "input": [
      [
        "(3, 5)",
        "(1, 7)",
        "(10, 3)",
        "(1, 2)"
      ]
    ],
    "output": 7,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "test_list": [
            "(3, 5)",
            "(1, 7)",
            "(10, 3)",
            "(1, 2)"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "temp": [
            2,
            6,
            7,
            1
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "res": 7
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 7
        }
      }
    ],
    "id": 186,
    "task_id": 63,
    "exist_function": [
      "max_difference"
    ]
  },
  {
    "code": "def max_difference(test_list):\r\n  temp = [abs(b - a) for a, b in test_list]\r\n  res = max(temp)\r\n  return (res)",
    "entry_point": "max_difference",
    "input": [
      [
        "(4, 6)",
        "(2, 17)",
        "(9, 13)",
        "(11, 12)"
      ]
    ],
    "output": 15,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "test_list": [
            "(4, 6)",
            "(2, 17)",
            "(9, 13)",
            "(11, 12)"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "temp": [
            2,
            15,
            4,
            1
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "res": 15
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 15
        }
      }
    ],
    "id": 187,
    "task_id": 63,
    "exist_function": [
      "max_difference"
    ]
  },
  {
    "code": "def max_difference(test_list):\r\n  temp = [abs(b - a) for a, b in test_list]\r\n  res = max(temp)\r\n  return (res)",
    "entry_point": "max_difference",
    "input": [
      [
        "(12, 35)",
        "(21, 27)",
        "(13, 23)",
        "(41, 22)"
      ]
    ],
    "output": 23,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "test_list": [
            "(12, 35)",
            "(21, 27)",
            "(13, 23)",
            "(41, 22)"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "temp": [
            23,
            6,
            10,
            19
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "res": 23
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 23
        }
      }
    ],
    "id": 188,
    "task_id": 63,
    "exist_function": [
      "max_difference"
    ]
  },
  {
    "code": "def recursive_list_sum(data_list):\r\n\ttotal = 0\r\n\tfor element in data_list:\r\n\t\tif type(element) == type([]):\r\n\t\t\ttotal = total + recursive_list_sum(element)\r\n\t\telse:\r\n\t\t\ttotal = total + element\r\n\treturn total",
    "entry_point": "recursive_list_sum",
    "input": [
      [
        1,
        2,
        [
          3,
          4
        ],
        [
          5,
          6
        ]
      ]
    ],
    "output": 21,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "data_list": [
            5,
            6
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "total": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "element": 5
        }
      },
      {
        "line": 7,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "total": 5
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "element": 6
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "total": 11
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": 11
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "data_list[0]": 1,
          "data_list[3]": [
            5,
            6
          ],
          "data_list[2]": [
            3,
            4
          ],
          "data_list[1]": 2,
          "element": [
            5,
            6
          ],
          "total": 21
        }
      },
      {
        "line": 8,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": 21
        }
      }
    ],
    "id": 192,
    "task_id": 65,
    "exist_function": [
      "recursive_list_sum"
    ]
  },
  {
    "code": "def recursive_list_sum(data_list):\r\n\ttotal = 0\r\n\tfor element in data_list:\r\n\t\tif type(element) == type([]):\r\n\t\t\ttotal = total + recursive_list_sum(element)\r\n\t\telse:\r\n\t\t\ttotal = total + element\r\n\treturn total",
    "entry_point": "recursive_list_sum",
    "input": [
      [
        7,
        10,
        [
          15,
          14
        ],
        [
          19,
          41
        ]
      ]
    ],
    "output": 106,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "data_list": [
            19,
            41
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "total": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "element": 19
        }
      },
      {
        "line": 7,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "total": 19
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "element": 41
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "total": 60
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": 60
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "data_list[0]": 7,
          "data_list[3]": [
            19,
            41
          ],
          "data_list[2]": [
            15,
            14
          ],
          "data_list[1]": 10,
          "element": [
            19,
            41
          ],
          "total": 106
        }
      },
      {
        "line": 8,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": 106
        }
      }
    ],
    "id": 193,
    "task_id": 65,
    "exist_function": [
      "recursive_list_sum"
    ]
  },
  {
    "code": "def recursive_list_sum(data_list):\r\n\ttotal = 0\r\n\tfor element in data_list:\r\n\t\tif type(element) == type([]):\r\n\t\t\ttotal = total + recursive_list_sum(element)\r\n\t\telse:\r\n\t\t\ttotal = total + element\r\n\treturn total",
    "entry_point": "recursive_list_sum",
    "input": [
      [
        10,
        20,
        [
          30,
          40
        ],
        [
          50,
          60
        ]
      ]
    ],
    "output": 210,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "data_list": [
            50,
            60
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "total": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "element": 50
        }
      },
      {
        "line": 7,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "total": 50
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "element": 60
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "total": 110
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": 110
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "data_list[0]": 10,
          "data_list[3]": [
            50,
            60
          ],
          "data_list[2]": [
            30,
            40
          ],
          "data_list[1]": 20,
          "element": [
            50,
            60
          ],
          "total": 210
        }
      },
      {
        "line": 8,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": 210
        }
      }
    ],
    "id": 194,
    "task_id": 65,
    "exist_function": [
      "recursive_list_sum"
    ]
  },
  {
    "code": "def pos_count(list):\r\n  pos_count= 0\r\n  for num in list: \r\n    if num >= 0: \r\n      pos_count += 1\r\n  return pos_count",
    "entry_point": "pos_count",
    "input": [
      [
        1,
        -2,
        3,
        -4
      ]
    ],
    "output": 2,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list": [
            1,
            -2,
            3,
            -4
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "pos_count": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "num": 1
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "pos_count": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "num": -2
        }
      },
      {
        "line": 3,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "num": 3
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "pos_count": 2
        }
      },
      {
        "line": 3,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "num": -4
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 195,
    "task_id": 66,
    "exist_function": [
      "pos_count"
    ]
  },
  {
    "code": "def pos_count(list):\r\n  pos_count= 0\r\n  for num in list: \r\n    if num >= 0: \r\n      pos_count += 1\r\n  return pos_count",
    "entry_point": "pos_count",
    "input": [
      [
        3,
        4,
        5,
        -1
      ]
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list": [
            3,
            4,
            5,
            -1
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "pos_count": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "num": 3
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "pos_count": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "num": 4
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "pos_count": 2
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "num": 5
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "pos_count": 3
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "num": -1
        }
      },
      {
        "line": 6,
        "step": 10,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 196,
    "task_id": 66,
    "exist_function": [
      "pos_count"
    ]
  },
  {
    "code": "def pos_count(list):\r\n  pos_count= 0\r\n  for num in list: \r\n    if num >= 0: \r\n      pos_count += 1\r\n  return pos_count",
    "entry_point": "pos_count",
    "input": [
      [
        1,
        2,
        3,
        4
      ]
    ],
    "output": 4,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list": [
            1,
            2,
            3,
            4
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "pos_count": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "num": 1
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "pos_count": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "num": 2
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "pos_count": 2
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "num": 3
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "pos_count": 3
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "num": 4
        }
      },
      {
        "line": 5,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "pos_count": 4
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "RETURN",
        "vars": {
          "__return__": 4
        }
      }
    ],
    "id": 197,
    "task_id": 66,
    "exist_function": [
      "pos_count"
    ]
  },
  {
    "code": "def bell_number(n):   \r\n    bell = [[0 for i in range(n+1)] for j in range(n+1)] \r\n    bell[0][0] = 1\r\n    for i in range(1, n+1): \r\n        bell[i][0] = bell[i-1][i-1]  \r\n        for j in range(1, i+1): \r\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]   \r\n    return bell[n][0]",
    "entry_point": "bell_number",
    "input": [
      2
    ],
    "output": 2,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 2
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "bell": [
            [
              0,
              0,
              0
            ],
            [
              0,
              0,
              0
            ],
            [
              0,
              0,
              0
            ]
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "bell[0][0]": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "bell[1][0]": 1
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "bell[1][1]": 2
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "bell[2][0]": 2
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "bell[2][1]": 3
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "bell[2][2]": 5
        }
      },
      {
        "line": 8,
        "step": 13,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 198,
    "task_id": 67,
    "exist_function": [
      "bell_number"
    ]
  },
  {
    "code": "def bell_number(n):   \r\n    bell = [[0 for i in range(n+1)] for j in range(n+1)] \r\n    bell[0][0] = 1\r\n    for i in range(1, n+1): \r\n        bell[i][0] = bell[i-1][i-1]  \r\n        for j in range(1, i+1): \r\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1]   \r\n    return bell[n][0]",
    "entry_point": "bell_number",
    "input": [
      10
    ],
    "output": 115975,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 10
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "bell": [
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0,
              0
            ]
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "bell[0][0]": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "bell[1][0]": 1
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "bell[1][1]": 2
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "bell[2][0]": 2
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "bell[2][1]": 3
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "bell[2][2]": 5
        }
      },
      {
        "line": 4,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "bell[3][0]": 5
        }
      },
      {
        "line": 6,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "bell[3][1]": 7
        }
      },
      {
        "line": 6,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "bell[3][2]": 10
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 7,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "bell[3][3]": 15
        }
      },
      {
        "line": 4,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "bell[4][0]": 15
        }
      },
      {
        "line": 6,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "bell[4][1]": 20
        }
      },
      {
        "line": 6,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "bell[4][2]": 27
        }
      },
      {
        "line": 6,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 7,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "bell[4][3]": 37
        }
      },
      {
        "line": 6,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 7,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "bell[4][4]": 52
        }
      },
      {
        "line": 4,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 5,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "bell[5][0]": 52
        }
      },
      {
        "line": 6,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "bell[5][1]": 67
        }
      },
      {
        "line": 6,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "bell[5][2]": 87
        }
      },
      {
        "line": 6,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 7,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "bell[5][3]": 114
        }
      },
      {
        "line": 6,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 7,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "bell[5][4]": 151
        }
      },
      {
        "line": 6,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 7,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "bell[5][5]": 203
        }
      },
      {
        "line": 4,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 5,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "bell[6][0]": 203
        }
      },
      {
        "line": 6,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "bell[6][1]": 255
        }
      },
      {
        "line": 6,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "bell[6][2]": 322
        }
      },
      {
        "line": 6,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 7,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "bell[6][3]": 409
        }
      },
      {
        "line": 6,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 7,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "bell[6][4]": 523
        }
      },
      {
        "line": 6,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 7,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "bell[6][5]": 674
        }
      },
      {
        "line": 6,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 7,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "bell[6][6]": 877
        }
      },
      {
        "line": 4,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 5,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "bell[7][0]": 877
        }
      },
      {
        "line": 6,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "bell[7][1]": 1080
        }
      },
      {
        "line": 6,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "bell[7][2]": 1335
        }
      },
      {
        "line": 6,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 7,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "bell[7][3]": 1657
        }
      },
      {
        "line": 6,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 7,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "bell[7][4]": 2066
        }
      },
      {
        "line": 6,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 7,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "bell[7][5]": 2589
        }
      },
      {
        "line": 6,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 7,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "bell[7][6]": 3263
        }
      },
      {
        "line": 6,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 7,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "bell[7][7]": 4140
        }
      },
      {
        "line": 4,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 5,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "bell[8][0]": 4140
        }
      },
      {
        "line": 6,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "bell[8][1]": 5017
        }
      },
      {
        "line": 6,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "bell[8][2]": 6097
        }
      },
      {
        "line": 6,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 7,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "bell[8][3]": 7432
        }
      },
      {
        "line": 6,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 7,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "bell[8][4]": 9089
        }
      },
      {
        "line": 6,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 7,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "bell[8][5]": 11155
        }
      },
      {
        "line": 6,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 7,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "bell[8][6]": 13744
        }
      },
      {
        "line": 6,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 7,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "bell[8][7]": 17007
        }
      },
      {
        "line": 6,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 7,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "bell[8][8]": 21147
        }
      },
      {
        "line": 4,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 5,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "bell[9][0]": 21147
        }
      },
      {
        "line": 6,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "bell[9][1]": 25287
        }
      },
      {
        "line": 6,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "bell[9][2]": 30304
        }
      },
      {
        "line": 6,
        "step": 97,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 7,
        "step": 98,
        "action": "EXECUTE",
        "vars": {
          "bell[9][3]": 36401
        }
      },
      {
        "line": 6,
        "step": 99,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 7,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "bell[9][4]": 43833
        }
      },
      {
        "line": 6,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 7,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "bell[9][5]": 52922
        }
      },
      {
        "line": 6,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 7,
        "step": 104,
        "action": "EXECUTE",
        "vars": {
          "bell[9][6]": 64077
        }
      },
      {
        "line": 6,
        "step": 105,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 7,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "bell[9][7]": 77821
        }
      },
      {
        "line": 6,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 7,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "bell[9][8]": 94828
        }
      },
      {
        "line": 6,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 7,
        "step": 110,
        "action": "EXECUTE",
        "vars": {
          "bell[9][9]": 115975
        }
      },
      {
        "line": 4,
        "step": 111,
        "action": "EXECUTE",
        "vars": {
          "i": 10
        }
      },
      {
        "line": 5,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "bell[10][0]": 115975
        }
      },
      {
        "line": 6,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "bell[10][1]": 137122
        }
      },
      {
        "line": 6,
        "step": 115,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 116,
        "action": "EXECUTE",
        "vars": {
          "bell[10][2]": 162409
        }
      },
      {
        "line": 6,
        "step": 117,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 7,
        "step": 118,
        "action": "EXECUTE",
        "vars": {
          "bell[10][3]": 192713
        }
      },
      {
        "line": 6,
        "step": 119,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 7,
        "step": 120,
        "action": "EXECUTE",
        "vars": {
          "bell[10][4]": 229114
        }
      },
      {
        "line": 6,
        "step": 121,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 7,
        "step": 122,
        "action": "EXECUTE",
        "vars": {
          "bell[10][5]": 272947
        }
      },
      {
        "line": 6,
        "step": 123,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 7,
        "step": 124,
        "action": "EXECUTE",
        "vars": {
          "bell[10][6]": 325869
        }
      },
      {
        "line": 6,
        "step": 125,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 7,
        "step": 126,
        "action": "EXECUTE",
        "vars": {
          "bell[10][7]": 389946
        }
      },
      {
        "line": 6,
        "step": 127,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 7,
        "step": 128,
        "action": "EXECUTE",
        "vars": {
          "bell[10][8]": 467767
        }
      },
      {
        "line": 6,
        "step": 129,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 7,
        "step": 130,
        "action": "EXECUTE",
        "vars": {
          "bell[10][9]": 562595
        }
      },
      {
        "line": 6,
        "step": 131,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 7,
        "step": 132,
        "action": "EXECUTE",
        "vars": {
          "bell[10][10]": 678570
        }
      },
      {
        "line": 8,
        "step": 133,
        "action": "RETURN",
        "vars": {
          "__return__": 115975
        }
      }
    ],
    "id": 199,
    "task_id": 67,
    "exist_function": [
      "bell_number"
    ]
  },
  {
    "code": "def re_order(A):\r\n    k = 0\r\n    for i in A:\r\n        if i:\r\n            A[k] = i\r\n            k = k + 1\r\n    for i in range(k, len(A)):\r\n        A[i] = 0\r\n    return A",
    "entry_point": "re_order",
    "input": [
      [
        6,
        8,
        2,
        3,
        4,
        1,
        0,
        0,
        0
      ]
    ],
    "output": [
      6,
      8,
      2,
      3,
      4,
      1,
      0,
      0,
      0
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "A": [
            6,
            0,
            8,
            2,
            3,
            0,
            4,
            0,
            1
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "k": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "k": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "A[1]": 8
        }
      },
      {
        "line": 6,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "k": 2
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "A[2]": 2
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "k": 3
        }
      },
      {
        "line": 3,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "A[3]": 3
        }
      },
      {
        "line": 6,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "k": 4
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "A[4]": 4
        }
      },
      {
        "line": 6,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "k": 5
        }
      },
      {
        "line": 3,
        "step": "19~20",
        "action": "LOOP",
        "vars": {
          "i": "0→1"
        }
      },
      {
        "line": 5,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "A[5]": 1
        }
      },
      {
        "line": 6,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "k": 6
        }
      },
      {
        "line": 7,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 8,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "A[6]": 0
        }
      },
      {
        "line": 7,
        "step": "25~26",
        "action": "LOOP",
        "vars": {
          "i": "7→8"
        }
      },
      {
        "line": 8,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "A[8]": 0
        }
      },
      {
        "line": 9,
        "step": 28,
        "action": "RETURN",
        "vars": {
          "__return__": [
            6,
            8,
            2,
            3,
            4,
            1,
            0,
            0,
            0
          ]
        }
      }
    ],
    "id": 1500,
    "task_id": 505,
    "exist_function": [
      "re_order"
    ]
  },
  {
    "code": "def re_order(A):\r\n    k = 0\r\n    for i in A:\r\n        if i:\r\n            A[k] = i\r\n            k = k + 1\r\n    for i in range(k, len(A)):\r\n        A[i] = 0\r\n    return A",
    "entry_point": "re_order",
    "input": [
      [
        4,
        2,
        7,
        9,
        12,
        0,
        0,
        0,
        0
      ]
    ],
    "output": [
      4,
      2,
      7,
      9,
      12,
      0,
      0,
      0,
      0
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "A": [
            4,
            0,
            2,
            7,
            0,
            9,
            0,
            12,
            0
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "k": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "k": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "A[1]": 2
        }
      },
      {
        "line": 6,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "k": 2
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 5,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "A[2]": 7
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "k": 3
        }
      },
      {
        "line": 3,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "A[3]": 9
        }
      },
      {
        "line": 6,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "k": 4
        }
      },
      {
        "line": 3,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 12
        }
      },
      {
        "line": 5,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "A[4]": 12
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "k": 5
        }
      },
      {
        "line": 3,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 7,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 8,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "A[5]": 0
        }
      },
      {
        "line": 7,
        "step": "23~24",
        "action": "LOOP",
        "vars": {
          "i": "6→7"
        }
      },
      {
        "line": 8,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "A[7]": 0
        }
      },
      {
        "line": 7,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 9,
        "step": 27,
        "action": "RETURN",
        "vars": {
          "__return__": [
            4,
            2,
            7,
            9,
            12,
            0,
            0,
            0,
            0
          ]
        }
      }
    ],
    "id": 1501,
    "task_id": 505,
    "exist_function": [
      "re_order"
    ]
  },
  {
    "code": "def re_order(A):\r\n    k = 0\r\n    for i in A:\r\n        if i:\r\n            A[k] = i\r\n            k = k + 1\r\n    for i in range(k, len(A)):\r\n        A[i] = 0\r\n    return A",
    "entry_point": "re_order",
    "input": [
      [
        3,
        11,
        74,
        14,
        1,
        2,
        0,
        0,
        0
      ]
    ],
    "output": [
      3,
      11,
      74,
      14,
      1,
      2,
      0,
      0,
      0
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "A": [
            3,
            11,
            0,
            74,
            14,
            0,
            1,
            0,
            2
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "k": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "k": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 11
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "k": 2
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 74
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "A[2]": 74
        }
      },
      {
        "line": 6,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "k": 3
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 14
        }
      },
      {
        "line": 5,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "A[3]": 14
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "k": 4
        }
      },
      {
        "line": 3,
        "step": "14~15",
        "action": "LOOP",
        "vars": {
          "i": "0→1"
        }
      },
      {
        "line": 5,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "A[4]": 1
        }
      },
      {
        "line": 6,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "k": 5
        }
      },
      {
        "line": 3,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "A[5]": 2
        }
      },
      {
        "line": 6,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "k": 6
        }
      },
      {
        "line": 7,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 8,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "A[6]": 0
        }
      },
      {
        "line": 7,
        "step": "24~25",
        "action": "LOOP",
        "vars": {
          "i": "7→8"
        }
      },
      {
        "line": 8,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "A[8]": 0
        }
      },
      {
        "line": 9,
        "step": 27,
        "action": "RETURN",
        "vars": {
          "__return__": [
            3,
            11,
            74,
            14,
            1,
            2,
            0,
            0,
            0
          ]
        }
      }
    ],
    "id": 1502,
    "task_id": 505,
    "exist_function": [
      "re_order"
    ]
  }
]