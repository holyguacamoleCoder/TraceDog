[
  {
    "code": "def remove_words(list1, charlist):\r\n    new_list = []\r\n    for line in list1:\r\n        new_words = ' '.join([word for word in line.split() if not any([phrase in word for phrase in charlist])])\r\n        new_list.append(new_words)\r\n    return new_list",
    "entry_point": "remove_words",
    "input": [
      [
        "Red color",
        "Orange#",
        "Green",
        "Orange @",
        "White"
      ],
      [
        "#",
        "color",
        "@"
      ]
    ],
    "output": [
      "Red",
      "",
      "Green",
      "Orange",
      "White"
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list1": [
            "Red color",
            "Orange#",
            "Green",
            "Orange @",
            "White"
          ],
          "charlist": [
            "#",
            "color",
            "@"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "new_list": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "line": "Red color"
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "new_words": "Red"
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "new_list[0]": "Red"
        }
      },
      {
        "line": 3,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "line": "Orange#"
        }
      },
      {
        "line": 4,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "new_words": ""
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "new_list[1]": ""
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "line": "Green"
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "new_words": "Green"
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "new_list[2]": "Green"
        }
      },
      {
        "line": 3,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "line": "Orange @"
        }
      },
      {
        "line": 4,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "new_words": "Orange"
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "new_list[3]": "Orange"
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "line": "White"
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "new_words": "White"
        }
      },
      {
        "line": 5,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "new_list[4]": "White"
        }
      },
      {
        "line": 6,
        "step": 18,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "Red",
            "",
            "Green",
            "Orange",
            "White"
          ]
        }
      }
    ],
    "id": 1692,
    "task_id": 570,
    "exist_function": [
      "remove_words"
    ]
  },
  {
    "code": "def remove_words(list1, charlist):\r\n    new_list = []\r\n    for line in list1:\r\n        new_words = ' '.join([word for word in line.split() if not any([phrase in word for phrase in charlist])])\r\n        new_list.append(new_words)\r\n    return new_list",
    "entry_point": "remove_words",
    "input": [
      [
        "Red &",
        "Orange+",
        "Green",
        "Orange @",
        "White"
      ],
      [
        "&",
        "+",
        "@"
      ]
    ],
    "output": [
      "Red",
      "",
      "Green",
      "Orange",
      "White"
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list1": [
            "Red &",
            "Orange+",
            "Green",
            "Orange @",
            "White"
          ],
          "charlist": [
            "&",
            "+",
            "@"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "new_list": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "line": "Red &"
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "new_words": "Red"
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "new_list[0]": "Red"
        }
      },
      {
        "line": 3,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "line": "Orange+"
        }
      },
      {
        "line": 4,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "new_words": ""
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "new_list[1]": ""
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "line": "Green"
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "new_words": "Green"
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "new_list[2]": "Green"
        }
      },
      {
        "line": 3,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "line": "Orange @"
        }
      },
      {
        "line": 4,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "new_words": "Orange"
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "new_list[3]": "Orange"
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "line": "White"
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "new_words": "White"
        }
      },
      {
        "line": 5,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "new_list[4]": "White"
        }
      },
      {
        "line": 6,
        "step": 18,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "Red",
            "",
            "Green",
            "Orange",
            "White"
          ]
        }
      }
    ],
    "id": 1693,
    "task_id": 570,
    "exist_function": [
      "remove_words"
    ]
  },
  {
    "code": "def remove_words(list1, charlist):\r\n    new_list = []\r\n    for line in list1:\r\n        new_words = ' '.join([word for word in line.split() if not any([phrase in word for phrase in charlist])])\r\n        new_list.append(new_words)\r\n    return new_list",
    "entry_point": "remove_words",
    "input": [
      [
        "Red &",
        "Orange+",
        "Green",
        "Orange @",
        "White"
      ],
      [
        "@"
      ]
    ],
    "output": [
      "Red &",
      "Orange+",
      "Green",
      "Orange",
      "White"
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list1": [
            "Red &",
            "Orange+",
            "Green",
            "Orange @",
            "White"
          ],
          "charlist": [
            "@"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "new_list": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "line": "Red &"
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "new_words": "Red &"
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "new_list[0]": "Red &"
        }
      },
      {
        "line": 3,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "line": "Orange+"
        }
      },
      {
        "line": 4,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "new_words": "Orange+"
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "new_list[1]": "Orange+"
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "line": "Green"
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "new_words": "Green"
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "new_list[2]": "Green"
        }
      },
      {
        "line": 3,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "line": "Orange @"
        }
      },
      {
        "line": 4,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "new_words": "Orange"
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "new_list[3]": "Orange"
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "line": "White"
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "new_words": "White"
        }
      },
      {
        "line": 5,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "new_list[4]": "White"
        }
      },
      {
        "line": 6,
        "step": 18,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "Red &",
            "Orange+",
            "Green",
            "Orange",
            "White"
          ]
        }
      }
    ],
    "id": 1694,
    "task_id": 570,
    "exist_function": [
      "remove_words"
    ]
  },
  {
    "code": "def max_sum_pair_diff_lessthan_K(arr, N, K): \r\n\tarr.sort() \r\n\tdp = [0] * N \r\n\tdp[0] = 0\r\n\tfor i in range(1, N): \r\n\t\tdp[i] = dp[i-1] \r\n\t\tif (arr[i] - arr[i-1] < K): \r\n\t\t\tif (i >= 2): \r\n\t\t\t\tdp[i] = max(dp[i], dp[i-2] + arr[i] + arr[i-1]); \r\n\t\t\telse: \r\n\t\t\t\tdp[i] = max(dp[i], arr[i] + arr[i-1]); \r\n\treturn dp[N - 1]",
    "entry_point": "max_sum_pair_diff_lessthan_K",
    "input": [
      [
        3,
        5,
        9,
        10,
        12,
        15,
        17
      ],
      7,
      4
    ],
    "output": 62,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            3,
            5,
            10,
            15,
            17,
            12,
            9
          ],
          "N": 7,
          "K": 4
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "arr[4]": 12,
          "arr[3]": 10,
          "arr[5]": 15,
          "arr[6]": 17,
          "arr[2]": 9
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "dp": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 11,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "dp[1]": 8
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "dp[2]": 8
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "dp[3]": 8
        }
      },
      {
        "line": 9,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "dp[3]": 27
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 6,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "dp[4]": 27
        }
      },
      {
        "line": 9,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "dp[4]": 30
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 6,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "dp[5]": 30
        }
      },
      {
        "line": 9,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "dp[5]": 54
        }
      },
      {
        "line": 5,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 6,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "dp[6]": 54
        }
      },
      {
        "line": 9,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "dp[6]": 62
        }
      },
      {
        "line": 12,
        "step": 20,
        "action": "RETURN",
        "vars": {
          "__return__": 62
        }
      }
    ],
    "id": 1695,
    "task_id": 571,
    "exist_function": [
      "max_sum_pair_diff_lessthan_K"
    ]
  },
  {
    "code": "def max_sum_pair_diff_lessthan_K(arr, N, K): \r\n\tarr.sort() \r\n\tdp = [0] * N \r\n\tdp[0] = 0\r\n\tfor i in range(1, N): \r\n\t\tdp[i] = dp[i-1] \r\n\t\tif (arr[i] - arr[i-1] < K): \r\n\t\t\tif (i >= 2): \r\n\t\t\t\tdp[i] = max(dp[i], dp[i-2] + arr[i] + arr[i-1]); \r\n\t\t\telse: \r\n\t\t\t\tdp[i] = max(dp[i], arr[i] + arr[i-1]); \r\n\treturn dp[N - 1]",
    "entry_point": "max_sum_pair_diff_lessthan_K",
    "input": [
      [
        5,
        10,
        15,
        300
      ],
      4,
      12
    ],
    "output": 25,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            5,
            15,
            10,
            300
          ],
          "N": 4,
          "K": 12
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "arr[2]": 15,
          "arr[1]": 10
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "dp": [
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 11,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "dp[1]": 15
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "dp[2]": 15
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "dp[2]": 25
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 6,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "dp[3]": 25
        }
      },
      {
        "line": 12,
        "step": 11,
        "action": "RETURN",
        "vars": {
          "__return__": 25
        }
      }
    ],
    "id": 1696,
    "task_id": 571,
    "exist_function": [
      "max_sum_pair_diff_lessthan_K"
    ]
  },
  {
    "code": "def max_sum_pair_diff_lessthan_K(arr, N, K): \r\n\tarr.sort() \r\n\tdp = [0] * N \r\n\tdp[0] = 0\r\n\tfor i in range(1, N): \r\n\t\tdp[i] = dp[i-1] \r\n\t\tif (arr[i] - arr[i-1] < K): \r\n\t\t\tif (i >= 2): \r\n\t\t\t\tdp[i] = max(dp[i], dp[i-2] + arr[i] + arr[i-1]); \r\n\t\t\telse: \r\n\t\t\t\tdp[i] = max(dp[i], arr[i] + arr[i-1]); \r\n\treturn dp[N - 1]",
    "entry_point": "max_sum_pair_diff_lessthan_K",
    "input": [
      [
        1,
        2,
        3,
        4,
        5,
        6
      ],
      6,
      6
    ],
    "output": 21,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            1,
            2,
            3,
            4,
            5,
            6
          ],
          "N": 6,
          "K": 6
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "dp": [
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 11,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "dp[1]": 3
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "dp[2]": 3
        }
      },
      {
        "line": 9,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "dp[2]": 5
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "dp[3]": 5
        }
      },
      {
        "line": 9,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "dp[3]": 10
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 6,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "dp[4]": 10
        }
      },
      {
        "line": 9,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "dp[4]": 14
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 6,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "dp[5]": 14
        }
      },
      {
        "line": 9,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "dp[5]": 21
        }
      },
      {
        "line": 12,
        "step": 17,
        "action": "RETURN",
        "vars": {
          "__return__": 21
        }
      }
    ],
    "id": 1697,
    "task_id": 571,
    "exist_function": [
      "max_sum_pair_diff_lessthan_K"
    ]
  },
  {
    "code": "def unique_product(list_data):\r\n    temp = list(set(list_data))\r\n    p = 1\r\n    for i in temp:\r\n        p *= i\r\n    return p",
    "entry_point": "unique_product",
    "input": [
      [
        10,
        20,
        30,
        40,
        20,
        50,
        60,
        40
      ]
    ],
    "output": 720000000,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list_data": [
            10,
            20,
            30,
            40,
            20,
            50,
            60,
            40
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "temp": [
            40,
            10,
            50,
            20,
            60,
            30
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "p": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 40
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "p": 40
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 10
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "p": 400
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 50
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "p": 20000
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 20
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "p": 400000
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 60
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "p": 24000000
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "i": 30
        }
      },
      {
        "line": 5,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "p": 720000000
        }
      },
      {
        "line": 6,
        "step": 16,
        "action": "RETURN",
        "vars": {
          "__return__": 720000000
        }
      }
    ],
    "id": 1701,
    "task_id": 573,
    "exist_function": [
      "unique_product"
    ]
  },
  {
    "code": "def unique_product(list_data):\r\n    temp = list(set(list_data))\r\n    p = 1\r\n    for i in temp:\r\n        p *= i\r\n    return p",
    "entry_point": "unique_product",
    "input": [
      [
        1,
        2,
        3,
        1
      ]
    ],
    "output": 6,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list_data": [
            1,
            2,
            3,
            1
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "temp": [
            1,
            2,
            3
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "p": 1
        }
      },
      {
        "line": 4,
        "step": "4~5",
        "action": "LOOP",
        "vars": {
          "i": "1→2"
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "p": 2
        }
      },
      {
        "line": 4,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "p": 6
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": 6
        }
      }
    ],
    "id": 1702,
    "task_id": 573,
    "exist_function": [
      "unique_product"
    ]
  },
  {
    "code": "def count_no (A,N,L,R): \r\n    count = 0\r\n    for i in range (L,R + 1): \r\n        if (i % A != 0): \r\n            count += 1\r\n        if (count == N): \r\n            break\r\n    return (i)",
    "entry_point": "count_no",
    "input": [
      2,
      3,
      1,
      10
    ],
    "output": 5,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "A": 2,
          "N": 3,
          "L": 1,
          "R": 10
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 3,
        "step": "5~6",
        "action": "LOOP",
        "vars": {
          "i": "2→3"
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 3,
        "step": "8~9",
        "action": "LOOP",
        "vars": {
          "i": "4→5"
        }
      },
      {
        "line": 5,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 8,
        "step": 11,
        "action": "RETURN",
        "vars": {
          "__return__": 5
        }
      }
    ],
    "id": 1707,
    "task_id": 575,
    "exist_function": [
      "count_no"
    ]
  },
  {
    "code": "def count_no (A,N,L,R): \r\n    count = 0\r\n    for i in range (L,R + 1): \r\n        if (i % A != 0): \r\n            count += 1\r\n        if (count == N): \r\n            break\r\n    return (i)",
    "entry_point": "count_no",
    "input": [
      3,
      6,
      4,
      20
    ],
    "output": 11,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "A": 3,
          "N": 6,
          "L": 4,
          "R": 20
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 3,
        "step": "7~8",
        "action": "LOOP",
        "vars": {
          "i": "6→7"
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 3,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "count": 4
        }
      },
      {
        "line": 3,
        "step": "12~13",
        "action": "LOOP",
        "vars": {
          "i": "9→10"
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "count": 5
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 11
        }
      },
      {
        "line": 5,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "count": 6
        }
      },
      {
        "line": 8,
        "step": 17,
        "action": "RETURN",
        "vars": {
          "__return__": 11
        }
      }
    ],
    "id": 1708,
    "task_id": 575,
    "exist_function": [
      "count_no"
    ]
  },
  {
    "code": "def count_no (A,N,L,R): \r\n    count = 0\r\n    for i in range (L,R + 1): \r\n        if (i % A != 0): \r\n            count += 1\r\n        if (count == N): \r\n            break\r\n    return (i)",
    "entry_point": "count_no",
    "input": [
      5,
      10,
      4,
      20
    ],
    "output": 16,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "A": 5,
          "N": 10,
          "L": 4,
          "R": 20
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 3,
        "step": "5~6",
        "action": "LOOP",
        "vars": {
          "i": "5→6"
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 3,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 3,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "count": 4
        }
      },
      {
        "line": 3,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "count": 5
        }
      },
      {
        "line": 3,
        "step": "14~15",
        "action": "LOOP",
        "vars": {
          "i": "10→11"
        }
      },
      {
        "line": 5,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "count": 6
        }
      },
      {
        "line": 3,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 12
        }
      },
      {
        "line": 5,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "count": 7
        }
      },
      {
        "line": 3,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 13
        }
      },
      {
        "line": 5,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "count": 8
        }
      },
      {
        "line": 3,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 14
        }
      },
      {
        "line": 5,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "count": 9
        }
      },
      {
        "line": 3,
        "step": "23~24",
        "action": "LOOP",
        "vars": {
          "i": "15→16"
        }
      },
      {
        "line": 5,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "count": 10
        }
      },
      {
        "line": 8,
        "step": 26,
        "action": "RETURN",
        "vars": {
          "__return__": 16
        }
      }
    ],
    "id": 1709,
    "task_id": 575,
    "exist_function": [
      "count_no"
    ]
  },
  {
    "code": "def is_Sub_Array(A,B,n,m): \r\n    i = 0; j = 0; \r\n    while (i < n and j < m):  \r\n        if (A[i] == B[j]): \r\n            i += 1; \r\n            j += 1; \r\n            if (j == m): \r\n                return True;  \r\n        else: \r\n            i = i - j + 1; \r\n            j = 0;       \r\n    return False;",
    "entry_point": "is_Sub_Array",
    "input": [
      [
        1,
        2,
        1
      ],
      [
        1,
        2,
        1
      ],
      3,
      3
    ],
    "output": true,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "A": [
            1,
            2,
            1
          ],
          "B": [
            1,
            2,
            1
          ],
          "n": 3,
          "m": 3
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "i": 0,
          "j": 0
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 6,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": true
        }
      }
    ],
    "id": 1711,
    "task_id": 576,
    "exist_function": [
      "is_Sub_Array"
    ]
  },
  {
    "code": "def perfect_squares(a, b):\r\n    lists=[]\r\n    for i in range (a,b+1):\r\n        j = 1;\r\n        while j*j <= i:\r\n            if j*j == i:\r\n                 lists.append(i)  \r\n            j = j+1\r\n        i = i+1\r\n    return lists",
    "entry_point": "perfect_squares",
    "input": [
      1,
      30
    ],
    "output": [
      1,
      4,
      9,
      16,
      25
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "a": 1,
          "b": 30
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "lists": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "lists[0]": 1
        }
      },
      {
        "line": 8,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 9,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 9,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 4,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 9,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "lists[1]": 4
        }
      },
      {
        "line": 8,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 9,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 4,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "20~21",
        "action": "LOOP",
        "vars": {
          "j": "2→3"
        }
      },
      {
        "line": 9,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 4,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "24~25",
        "action": "LOOP",
        "vars": {
          "j": "2→3"
        }
      },
      {
        "line": 9,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 4,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "28~29",
        "action": "LOOP",
        "vars": {
          "j": "2→3"
        }
      },
      {
        "line": 9,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 4,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "32~33",
        "action": "LOOP",
        "vars": {
          "j": "2→3"
        }
      },
      {
        "line": 9,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 4,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "36~37",
        "action": "LOOP",
        "vars": {
          "j": "2→3"
        }
      },
      {
        "line": 7,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "lists[2]": 9
        }
      },
      {
        "line": 8,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 9,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "i": 10
        }
      },
      {
        "line": 4,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "42~44",
        "action": "LOOP",
        "vars": {
          "j": "2→4"
        }
      },
      {
        "line": 9,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "i": 11
        }
      },
      {
        "line": 4,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "47~49",
        "action": "LOOP",
        "vars": {
          "j": "2→4"
        }
      },
      {
        "line": 9,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "i": 12
        }
      },
      {
        "line": 4,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "52~54",
        "action": "LOOP",
        "vars": {
          "j": "2→4"
        }
      },
      {
        "line": 9,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "i": 13
        }
      },
      {
        "line": 4,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "57~59",
        "action": "LOOP",
        "vars": {
          "j": "2→4"
        }
      },
      {
        "line": 9,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "i": 14
        }
      },
      {
        "line": 4,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "62~64",
        "action": "LOOP",
        "vars": {
          "j": "2→4"
        }
      },
      {
        "line": 9,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "i": 15
        }
      },
      {
        "line": 4,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "67~69",
        "action": "LOOP",
        "vars": {
          "j": "2→4"
        }
      },
      {
        "line": 9,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "i": 16
        }
      },
      {
        "line": 4,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "72~74",
        "action": "LOOP",
        "vars": {
          "j": "2→4"
        }
      },
      {
        "line": 7,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "lists[3]": 16
        }
      },
      {
        "line": 8,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 9,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "i": 17
        }
      },
      {
        "line": 4,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "79~82",
        "action": "LOOP",
        "vars": {
          "j": "2→5"
        }
      },
      {
        "line": 9,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "i": 18
        }
      },
      {
        "line": 4,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "85~88",
        "action": "LOOP",
        "vars": {
          "j": "2→5"
        }
      },
      {
        "line": 9,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "i": 19
        }
      },
      {
        "line": 4,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "91~94",
        "action": "LOOP",
        "vars": {
          "j": "2→5"
        }
      },
      {
        "line": 9,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "i": 20
        }
      },
      {
        "line": 4,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "97~100",
        "action": "LOOP",
        "vars": {
          "j": "2→5"
        }
      },
      {
        "line": 9,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "i": 21
        }
      },
      {
        "line": 4,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "103~106",
        "action": "LOOP",
        "vars": {
          "j": "2→5"
        }
      },
      {
        "line": 9,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "i": 22
        }
      },
      {
        "line": 4,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "109~112",
        "action": "LOOP",
        "vars": {
          "j": "2→5"
        }
      },
      {
        "line": 9,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "i": 23
        }
      },
      {
        "line": 4,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "115~118",
        "action": "LOOP",
        "vars": {
          "j": "2→5"
        }
      },
      {
        "line": 9,
        "step": 119,
        "action": "EXECUTE",
        "vars": {
          "i": 24
        }
      },
      {
        "line": 4,
        "step": 120,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "121~124",
        "action": "LOOP",
        "vars": {
          "j": "2→5"
        }
      },
      {
        "line": 9,
        "step": 125,
        "action": "EXECUTE",
        "vars": {
          "i": 25
        }
      },
      {
        "line": 4,
        "step": 126,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "127~130",
        "action": "LOOP",
        "vars": {
          "j": "2→5"
        }
      },
      {
        "line": 7,
        "step": 131,
        "action": "EXECUTE",
        "vars": {
          "lists[4]": 25
        }
      },
      {
        "line": 8,
        "step": 132,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 9,
        "step": 133,
        "action": "EXECUTE",
        "vars": {
          "i": 26
        }
      },
      {
        "line": 4,
        "step": 134,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "135~139",
        "action": "LOOP",
        "vars": {
          "j": "2→6"
        }
      },
      {
        "line": 9,
        "step": 140,
        "action": "EXECUTE",
        "vars": {
          "i": 27
        }
      },
      {
        "line": 4,
        "step": 141,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "142~146",
        "action": "LOOP",
        "vars": {
          "j": "2→6"
        }
      },
      {
        "line": 9,
        "step": 147,
        "action": "EXECUTE",
        "vars": {
          "i": 28
        }
      },
      {
        "line": 4,
        "step": 148,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "149~153",
        "action": "LOOP",
        "vars": {
          "j": "2→6"
        }
      },
      {
        "line": 9,
        "step": 154,
        "action": "EXECUTE",
        "vars": {
          "i": 29
        }
      },
      {
        "line": 4,
        "step": 155,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "156~160",
        "action": "LOOP",
        "vars": {
          "j": "2→6"
        }
      },
      {
        "line": 9,
        "step": 161,
        "action": "EXECUTE",
        "vars": {
          "i": 30
        }
      },
      {
        "line": 4,
        "step": 162,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "163~167",
        "action": "LOOP",
        "vars": {
          "j": "2→6"
        }
      },
      {
        "line": 9,
        "step": 168,
        "action": "EXECUTE",
        "vars": {
          "i": 31
        }
      },
      {
        "line": 10,
        "step": 169,
        "action": "RETURN",
        "vars": {
          "__return__": [
            1,
            4,
            9,
            16,
            25
          ]
        }
      }
    ],
    "id": 1749,
    "task_id": 589,
    "exist_function": [
      "perfect_squares"
    ]
  },
  {
    "code": "def perfect_squares(a, b):\r\n    lists=[]\r\n    for i in range (a,b+1):\r\n        j = 1;\r\n        while j*j <= i:\r\n            if j*j == i:\r\n                 lists.append(i)  \r\n            j = j+1\r\n        i = i+1\r\n    return lists",
    "entry_point": "perfect_squares",
    "input": [
      50,
      100
    ],
    "output": [
      64,
      81,
      100
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "a": 50,
          "b": 100
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "lists": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 50
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "5~11",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 51
        }
      },
      {
        "line": 4,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "14~20",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 52
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "23~29",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "i": 53
        }
      },
      {
        "line": 4,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "32~38",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "i": 54
        }
      },
      {
        "line": 4,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "41~47",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "i": 55
        }
      },
      {
        "line": 4,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "50~56",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "i": 56
        }
      },
      {
        "line": 4,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "59~65",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "i": 57
        }
      },
      {
        "line": 4,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "68~74",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "i": 58
        }
      },
      {
        "line": 4,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "77~83",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "i": 59
        }
      },
      {
        "line": 4,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "86~92",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "i": 60
        }
      },
      {
        "line": 4,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "95~101",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "i": 61
        }
      },
      {
        "line": 4,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "104~110",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 111,
        "action": "EXECUTE",
        "vars": {
          "i": 62
        }
      },
      {
        "line": 4,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "113~119",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 120,
        "action": "EXECUTE",
        "vars": {
          "i": 63
        }
      },
      {
        "line": 4,
        "step": 121,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "122~128",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 9,
        "step": 129,
        "action": "EXECUTE",
        "vars": {
          "i": 64
        }
      },
      {
        "line": 4,
        "step": 130,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "131~137",
        "action": "LOOP",
        "vars": {
          "j": "2→8"
        }
      },
      {
        "line": 7,
        "step": 138,
        "action": "EXECUTE",
        "vars": {
          "lists[0]": 64
        }
      },
      {
        "line": 8,
        "step": 139,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 9,
        "step": 140,
        "action": "EXECUTE",
        "vars": {
          "i": 65
        }
      },
      {
        "line": 4,
        "step": 141,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "142~149",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 150,
        "action": "EXECUTE",
        "vars": {
          "i": 66
        }
      },
      {
        "line": 4,
        "step": 151,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "152~159",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 160,
        "action": "EXECUTE",
        "vars": {
          "i": 67
        }
      },
      {
        "line": 4,
        "step": 161,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "162~169",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 170,
        "action": "EXECUTE",
        "vars": {
          "i": 68
        }
      },
      {
        "line": 4,
        "step": 171,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "172~179",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 180,
        "action": "EXECUTE",
        "vars": {
          "i": 69
        }
      },
      {
        "line": 4,
        "step": 181,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "182~189",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 190,
        "action": "EXECUTE",
        "vars": {
          "i": 70
        }
      },
      {
        "line": 4,
        "step": 191,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "192~199",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 200,
        "action": "EXECUTE",
        "vars": {
          "i": 71
        }
      },
      {
        "line": 4,
        "step": 201,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "202~209",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 210,
        "action": "EXECUTE",
        "vars": {
          "i": 72
        }
      },
      {
        "line": 4,
        "step": 211,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "212~219",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 220,
        "action": "EXECUTE",
        "vars": {
          "i": 73
        }
      },
      {
        "line": 4,
        "step": 221,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "222~229",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 230,
        "action": "EXECUTE",
        "vars": {
          "i": 74
        }
      },
      {
        "line": 4,
        "step": 231,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "232~239",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 240,
        "action": "EXECUTE",
        "vars": {
          "i": 75
        }
      },
      {
        "line": 4,
        "step": 241,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "242~249",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 250,
        "action": "EXECUTE",
        "vars": {
          "i": 76
        }
      },
      {
        "line": 4,
        "step": 251,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "252~259",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 260,
        "action": "EXECUTE",
        "vars": {
          "i": 77
        }
      },
      {
        "line": 4,
        "step": 261,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "262~269",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 270,
        "action": "EXECUTE",
        "vars": {
          "i": 78
        }
      },
      {
        "line": 4,
        "step": 271,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "272~279",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 280,
        "action": "EXECUTE",
        "vars": {
          "i": 79
        }
      },
      {
        "line": 4,
        "step": 281,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "282~289",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 290,
        "action": "EXECUTE",
        "vars": {
          "i": 80
        }
      },
      {
        "line": 4,
        "step": 291,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "292~299",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 9,
        "step": 300,
        "action": "EXECUTE",
        "vars": {
          "i": 81
        }
      },
      {
        "line": 4,
        "step": 301,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "302~309",
        "action": "LOOP",
        "vars": {
          "j": "2→9"
        }
      },
      {
        "line": 7,
        "step": 310,
        "action": "EXECUTE",
        "vars": {
          "lists[1]": 81
        }
      },
      {
        "line": 8,
        "step": 311,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 9,
        "step": 312,
        "action": "EXECUTE",
        "vars": {
          "i": 82
        }
      },
      {
        "line": 4,
        "step": 313,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "314~322",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 323,
        "action": "EXECUTE",
        "vars": {
          "i": 83
        }
      },
      {
        "line": 4,
        "step": 324,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "325~333",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 334,
        "action": "EXECUTE",
        "vars": {
          "i": 84
        }
      },
      {
        "line": 4,
        "step": 335,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "336~344",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 345,
        "action": "EXECUTE",
        "vars": {
          "i": 85
        }
      },
      {
        "line": 4,
        "step": 346,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "347~355",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 356,
        "action": "EXECUTE",
        "vars": {
          "i": 86
        }
      },
      {
        "line": 4,
        "step": 357,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "358~366",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 367,
        "action": "EXECUTE",
        "vars": {
          "i": 87
        }
      },
      {
        "line": 4,
        "step": 368,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "369~377",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 378,
        "action": "EXECUTE",
        "vars": {
          "i": 88
        }
      },
      {
        "line": 4,
        "step": 379,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "380~388",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 389,
        "action": "EXECUTE",
        "vars": {
          "i": 89
        }
      },
      {
        "line": 4,
        "step": 390,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "391~399",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 400,
        "action": "EXECUTE",
        "vars": {
          "i": 90
        }
      },
      {
        "line": 4,
        "step": 401,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "402~410",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 411,
        "action": "EXECUTE",
        "vars": {
          "i": 91
        }
      },
      {
        "line": 4,
        "step": 412,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "413~421",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 422,
        "action": "EXECUTE",
        "vars": {
          "i": 92
        }
      },
      {
        "line": 4,
        "step": 423,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "424~432",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 433,
        "action": "EXECUTE",
        "vars": {
          "i": 93
        }
      },
      {
        "line": 4,
        "step": 434,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "435~443",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 444,
        "action": "EXECUTE",
        "vars": {
          "i": 94
        }
      },
      {
        "line": 4,
        "step": 445,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "446~454",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 455,
        "action": "EXECUTE",
        "vars": {
          "i": 95
        }
      },
      {
        "line": 4,
        "step": 456,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "457~465",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 466,
        "action": "EXECUTE",
        "vars": {
          "i": 96
        }
      },
      {
        "line": 4,
        "step": 467,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "468~476",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 477,
        "action": "EXECUTE",
        "vars": {
          "i": 97
        }
      },
      {
        "line": 4,
        "step": 478,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "479~487",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 488,
        "action": "EXECUTE",
        "vars": {
          "i": 98
        }
      },
      {
        "line": 4,
        "step": 489,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "490~498",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 499,
        "action": "EXECUTE",
        "vars": {
          "i": 99
        }
      },
      {
        "line": 4,
        "step": 500,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "501~509",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 9,
        "step": 510,
        "action": "EXECUTE",
        "vars": {
          "i": 100
        }
      },
      {
        "line": 4,
        "step": 511,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "512~520",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 7,
        "step": 521,
        "action": "EXECUTE",
        "vars": {
          "lists[2]": 100
        }
      },
      {
        "line": 8,
        "step": 522,
        "action": "EXECUTE",
        "vars": {
          "j": 11
        }
      },
      {
        "line": 9,
        "step": 523,
        "action": "EXECUTE",
        "vars": {
          "i": 101
        }
      },
      {
        "line": 10,
        "step": 524,
        "action": "RETURN",
        "vars": {
          "__return__": [
            64,
            81,
            100
          ]
        }
      }
    ],
    "id": 1750,
    "task_id": 589,
    "exist_function": [
      "perfect_squares"
    ]
  },
  {
    "code": "def perfect_squares(a, b):\r\n    lists=[]\r\n    for i in range (a,b+1):\r\n        j = 1;\r\n        while j*j <= i:\r\n            if j*j == i:\r\n                 lists.append(i)  \r\n            j = j+1\r\n        i = i+1\r\n    return lists",
    "entry_point": "perfect_squares",
    "input": [
      100,
      200
    ],
    "output": [
      100,
      121,
      144,
      169,
      196
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "a": 100,
          "b": 200
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "lists": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 100
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "5~13",
        "action": "LOOP",
        "vars": {
          "j": "2→10"
        }
      },
      {
        "line": 7,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "lists[0]": 100
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "j": 11
        }
      },
      {
        "line": 9,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 101
        }
      },
      {
        "line": 4,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "18~27",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "i": 102
        }
      },
      {
        "line": 4,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "30~39",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "i": 103
        }
      },
      {
        "line": 4,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "42~51",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "i": 104
        }
      },
      {
        "line": 4,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "54~63",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "i": 105
        }
      },
      {
        "line": 4,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "66~75",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "i": 106
        }
      },
      {
        "line": 4,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "78~87",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "i": 107
        }
      },
      {
        "line": 4,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "90~99",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "i": 108
        }
      },
      {
        "line": 4,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "102~111",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "i": 109
        }
      },
      {
        "line": 4,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "114~123",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 124,
        "action": "EXECUTE",
        "vars": {
          "i": 110
        }
      },
      {
        "line": 4,
        "step": 125,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "126~135",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 136,
        "action": "EXECUTE",
        "vars": {
          "i": 111
        }
      },
      {
        "line": 4,
        "step": 137,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "138~147",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 148,
        "action": "EXECUTE",
        "vars": {
          "i": 112
        }
      },
      {
        "line": 4,
        "step": 149,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "150~159",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 160,
        "action": "EXECUTE",
        "vars": {
          "i": 113
        }
      },
      {
        "line": 4,
        "step": 161,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "162~171",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 172,
        "action": "EXECUTE",
        "vars": {
          "i": 114
        }
      },
      {
        "line": 4,
        "step": 173,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "174~183",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 184,
        "action": "EXECUTE",
        "vars": {
          "i": 115
        }
      },
      {
        "line": 4,
        "step": 185,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "186~195",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 196,
        "action": "EXECUTE",
        "vars": {
          "i": 116
        }
      },
      {
        "line": 4,
        "step": 197,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "198~207",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 208,
        "action": "EXECUTE",
        "vars": {
          "i": 117
        }
      },
      {
        "line": 4,
        "step": 209,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "210~219",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 220,
        "action": "EXECUTE",
        "vars": {
          "i": 118
        }
      },
      {
        "line": 4,
        "step": 221,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "222~231",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 232,
        "action": "EXECUTE",
        "vars": {
          "i": 119
        }
      },
      {
        "line": 4,
        "step": 233,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "234~243",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 244,
        "action": "EXECUTE",
        "vars": {
          "i": 120
        }
      },
      {
        "line": 4,
        "step": 245,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "246~255",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 9,
        "step": 256,
        "action": "EXECUTE",
        "vars": {
          "i": 121
        }
      },
      {
        "line": 4,
        "step": 257,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "258~267",
        "action": "LOOP",
        "vars": {
          "j": "2→11"
        }
      },
      {
        "line": 7,
        "step": 268,
        "action": "EXECUTE",
        "vars": {
          "lists[1]": 121
        }
      },
      {
        "line": 8,
        "step": 269,
        "action": "EXECUTE",
        "vars": {
          "j": 12
        }
      },
      {
        "line": 9,
        "step": 270,
        "action": "EXECUTE",
        "vars": {
          "i": 122
        }
      },
      {
        "line": 4,
        "step": 271,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "272~282",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 283,
        "action": "EXECUTE",
        "vars": {
          "i": 123
        }
      },
      {
        "line": 4,
        "step": 284,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "285~295",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 296,
        "action": "EXECUTE",
        "vars": {
          "i": 124
        }
      },
      {
        "line": 4,
        "step": 297,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "298~308",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 309,
        "action": "EXECUTE",
        "vars": {
          "i": 125
        }
      },
      {
        "line": 4,
        "step": 310,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "311~321",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 322,
        "action": "EXECUTE",
        "vars": {
          "i": 126
        }
      },
      {
        "line": 4,
        "step": 323,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "324~334",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 335,
        "action": "EXECUTE",
        "vars": {
          "i": 127
        }
      },
      {
        "line": 4,
        "step": 336,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "337~347",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 348,
        "action": "EXECUTE",
        "vars": {
          "i": 128
        }
      },
      {
        "line": 4,
        "step": 349,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "350~360",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 361,
        "action": "EXECUTE",
        "vars": {
          "i": 129
        }
      },
      {
        "line": 4,
        "step": 362,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "363~373",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 374,
        "action": "EXECUTE",
        "vars": {
          "i": 130
        }
      },
      {
        "line": 4,
        "step": 375,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "376~386",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 387,
        "action": "EXECUTE",
        "vars": {
          "i": 131
        }
      },
      {
        "line": 4,
        "step": 388,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "389~399",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 400,
        "action": "EXECUTE",
        "vars": {
          "i": 132
        }
      },
      {
        "line": 4,
        "step": 401,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "402~412",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 413,
        "action": "EXECUTE",
        "vars": {
          "i": 133
        }
      },
      {
        "line": 4,
        "step": 414,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "415~425",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 426,
        "action": "EXECUTE",
        "vars": {
          "i": 134
        }
      },
      {
        "line": 4,
        "step": 427,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "428~438",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 439,
        "action": "EXECUTE",
        "vars": {
          "i": 135
        }
      },
      {
        "line": 4,
        "step": 440,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "441~451",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 452,
        "action": "EXECUTE",
        "vars": {
          "i": 136
        }
      },
      {
        "line": 4,
        "step": 453,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "454~464",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 465,
        "action": "EXECUTE",
        "vars": {
          "i": 137
        }
      },
      {
        "line": 4,
        "step": 466,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "467~477",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 478,
        "action": "EXECUTE",
        "vars": {
          "i": 138
        }
      },
      {
        "line": 4,
        "step": 479,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "480~490",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 491,
        "action": "EXECUTE",
        "vars": {
          "i": 139
        }
      },
      {
        "line": 4,
        "step": 492,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "493~503",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 504,
        "action": "EXECUTE",
        "vars": {
          "i": 140
        }
      },
      {
        "line": 4,
        "step": 505,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "506~516",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 517,
        "action": "EXECUTE",
        "vars": {
          "i": 141
        }
      },
      {
        "line": 4,
        "step": 518,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "519~529",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 530,
        "action": "EXECUTE",
        "vars": {
          "i": 142
        }
      },
      {
        "line": 4,
        "step": 531,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "532~542",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 543,
        "action": "EXECUTE",
        "vars": {
          "i": 143
        }
      },
      {
        "line": 4,
        "step": 544,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "545~555",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 9,
        "step": 556,
        "action": "EXECUTE",
        "vars": {
          "i": 144
        }
      },
      {
        "line": 4,
        "step": 557,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "558~568",
        "action": "LOOP",
        "vars": {
          "j": "2→12"
        }
      },
      {
        "line": 7,
        "step": 569,
        "action": "EXECUTE",
        "vars": {
          "lists[2]": 144
        }
      },
      {
        "line": 8,
        "step": 570,
        "action": "EXECUTE",
        "vars": {
          "j": 13
        }
      },
      {
        "line": 9,
        "step": 571,
        "action": "EXECUTE",
        "vars": {
          "i": 145
        }
      },
      {
        "line": 4,
        "step": 572,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "573~584",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 585,
        "action": "EXECUTE",
        "vars": {
          "i": 146
        }
      },
      {
        "line": 4,
        "step": 586,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "587~598",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 599,
        "action": "EXECUTE",
        "vars": {
          "i": 147
        }
      },
      {
        "line": 4,
        "step": 600,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "601~612",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 613,
        "action": "EXECUTE",
        "vars": {
          "i": 148
        }
      },
      {
        "line": 4,
        "step": 614,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "615~626",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 627,
        "action": "EXECUTE",
        "vars": {
          "i": 149
        }
      },
      {
        "line": 4,
        "step": 628,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "629~640",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 641,
        "action": "EXECUTE",
        "vars": {
          "i": 150
        }
      },
      {
        "line": 4,
        "step": 642,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "643~654",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 655,
        "action": "EXECUTE",
        "vars": {
          "i": 151
        }
      },
      {
        "line": 4,
        "step": 656,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "657~668",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 669,
        "action": "EXECUTE",
        "vars": {
          "i": 152
        }
      },
      {
        "line": 4,
        "step": 670,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "671~682",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 683,
        "action": "EXECUTE",
        "vars": {
          "i": 153
        }
      },
      {
        "line": 4,
        "step": 684,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "685~696",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 697,
        "action": "EXECUTE",
        "vars": {
          "i": 154
        }
      },
      {
        "line": 4,
        "step": 698,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "699~710",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 711,
        "action": "EXECUTE",
        "vars": {
          "i": 155
        }
      },
      {
        "line": 4,
        "step": 712,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "713~724",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 725,
        "action": "EXECUTE",
        "vars": {
          "i": 156
        }
      },
      {
        "line": 4,
        "step": 726,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "727~738",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 739,
        "action": "EXECUTE",
        "vars": {
          "i": 157
        }
      },
      {
        "line": 4,
        "step": 740,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "741~752",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 753,
        "action": "EXECUTE",
        "vars": {
          "i": 158
        }
      },
      {
        "line": 4,
        "step": 754,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "755~766",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 767,
        "action": "EXECUTE",
        "vars": {
          "i": 159
        }
      },
      {
        "line": 4,
        "step": 768,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "769~780",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 781,
        "action": "EXECUTE",
        "vars": {
          "i": 160
        }
      },
      {
        "line": 4,
        "step": 782,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "783~794",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 795,
        "action": "EXECUTE",
        "vars": {
          "i": 161
        }
      },
      {
        "line": 4,
        "step": 796,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "797~808",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 809,
        "action": "EXECUTE",
        "vars": {
          "i": 162
        }
      },
      {
        "line": 4,
        "step": 810,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "811~822",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 823,
        "action": "EXECUTE",
        "vars": {
          "i": 163
        }
      },
      {
        "line": 4,
        "step": 824,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "825~836",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 837,
        "action": "EXECUTE",
        "vars": {
          "i": 164
        }
      },
      {
        "line": 4,
        "step": 838,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "839~850",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 851,
        "action": "EXECUTE",
        "vars": {
          "i": 165
        }
      },
      {
        "line": 4,
        "step": 852,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "853~864",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 865,
        "action": "EXECUTE",
        "vars": {
          "i": 166
        }
      },
      {
        "line": 4,
        "step": 866,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "867~878",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 879,
        "action": "EXECUTE",
        "vars": {
          "i": 167
        }
      },
      {
        "line": 4,
        "step": 880,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "881~892",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 893,
        "action": "EXECUTE",
        "vars": {
          "i": 168
        }
      },
      {
        "line": 4,
        "step": 894,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "895~906",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 9,
        "step": 907,
        "action": "EXECUTE",
        "vars": {
          "i": 169
        }
      },
      {
        "line": 4,
        "step": 908,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "909~920",
        "action": "LOOP",
        "vars": {
          "j": "2→13"
        }
      },
      {
        "line": 7,
        "step": 921,
        "action": "EXECUTE",
        "vars": {
          "lists[3]": 169
        }
      },
      {
        "line": 8,
        "step": 922,
        "action": "EXECUTE",
        "vars": {
          "j": 14
        }
      },
      {
        "line": 9,
        "step": 923,
        "action": "EXECUTE",
        "vars": {
          "i": 170
        }
      },
      {
        "line": 4,
        "step": 924,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "925~937",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 938,
        "action": "EXECUTE",
        "vars": {
          "i": 171
        }
      },
      {
        "line": 4,
        "step": 939,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "940~952",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 953,
        "action": "EXECUTE",
        "vars": {
          "i": 172
        }
      },
      {
        "line": 4,
        "step": 954,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "955~967",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 968,
        "action": "EXECUTE",
        "vars": {
          "i": 173
        }
      },
      {
        "line": 4,
        "step": 969,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "970~982",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 983,
        "action": "EXECUTE",
        "vars": {
          "i": 174
        }
      },
      {
        "line": 4,
        "step": 984,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "985~997",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 998,
        "action": "EXECUTE",
        "vars": {
          "i": 175
        }
      },
      {
        "line": 4,
        "step": 999,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1000~1012",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1013,
        "action": "EXECUTE",
        "vars": {
          "i": 176
        }
      },
      {
        "line": 4,
        "step": 1014,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1015~1027",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1028,
        "action": "EXECUTE",
        "vars": {
          "i": 177
        }
      },
      {
        "line": 4,
        "step": 1029,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1030~1042",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1043,
        "action": "EXECUTE",
        "vars": {
          "i": 178
        }
      },
      {
        "line": 4,
        "step": 1044,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1045~1057",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1058,
        "action": "EXECUTE",
        "vars": {
          "i": 179
        }
      },
      {
        "line": 4,
        "step": 1059,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1060~1072",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1073,
        "action": "EXECUTE",
        "vars": {
          "i": 180
        }
      },
      {
        "line": 4,
        "step": 1074,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1075~1087",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1088,
        "action": "EXECUTE",
        "vars": {
          "i": 181
        }
      },
      {
        "line": 4,
        "step": 1089,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1090~1102",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1103,
        "action": "EXECUTE",
        "vars": {
          "i": 182
        }
      },
      {
        "line": 4,
        "step": 1104,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1105~1117",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1118,
        "action": "EXECUTE",
        "vars": {
          "i": 183
        }
      },
      {
        "line": 4,
        "step": 1119,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1120~1132",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1133,
        "action": "EXECUTE",
        "vars": {
          "i": 184
        }
      },
      {
        "line": 4,
        "step": 1134,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1135~1147",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1148,
        "action": "EXECUTE",
        "vars": {
          "i": 185
        }
      },
      {
        "line": 4,
        "step": 1149,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1150~1162",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1163,
        "action": "EXECUTE",
        "vars": {
          "i": 186
        }
      },
      {
        "line": 4,
        "step": 1164,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1165~1177",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1178,
        "action": "EXECUTE",
        "vars": {
          "i": 187
        }
      },
      {
        "line": 4,
        "step": 1179,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1180~1192",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1193,
        "action": "EXECUTE",
        "vars": {
          "i": 188
        }
      },
      {
        "line": 4,
        "step": 1194,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1195~1207",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1208,
        "action": "EXECUTE",
        "vars": {
          "i": 189
        }
      },
      {
        "line": 4,
        "step": 1209,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1210~1222",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1223,
        "action": "EXECUTE",
        "vars": {
          "i": 190
        }
      },
      {
        "line": 4,
        "step": 1224,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1225~1237",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1238,
        "action": "EXECUTE",
        "vars": {
          "i": 191
        }
      },
      {
        "line": 4,
        "step": 1239,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1240~1252",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1253,
        "action": "EXECUTE",
        "vars": {
          "i": 192
        }
      },
      {
        "line": 4,
        "step": 1254,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1255~1267",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1268,
        "action": "EXECUTE",
        "vars": {
          "i": 193
        }
      },
      {
        "line": 4,
        "step": 1269,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1270~1282",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1283,
        "action": "EXECUTE",
        "vars": {
          "i": 194
        }
      },
      {
        "line": 4,
        "step": 1284,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1285~1297",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1298,
        "action": "EXECUTE",
        "vars": {
          "i": 195
        }
      },
      {
        "line": 4,
        "step": 1299,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1300~1312",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 9,
        "step": 1313,
        "action": "EXECUTE",
        "vars": {
          "i": 196
        }
      },
      {
        "line": 4,
        "step": 1314,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1315~1327",
        "action": "LOOP",
        "vars": {
          "j": "2→14"
        }
      },
      {
        "line": 7,
        "step": 1328,
        "action": "EXECUTE",
        "vars": {
          "lists[4]": 196
        }
      },
      {
        "line": 8,
        "step": 1329,
        "action": "EXECUTE",
        "vars": {
          "j": 15
        }
      },
      {
        "line": 9,
        "step": 1330,
        "action": "EXECUTE",
        "vars": {
          "i": 197
        }
      },
      {
        "line": 4,
        "step": 1331,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1332~1345",
        "action": "LOOP",
        "vars": {
          "j": "2→15"
        }
      },
      {
        "line": 9,
        "step": 1346,
        "action": "EXECUTE",
        "vars": {
          "i": 198
        }
      },
      {
        "line": 4,
        "step": 1347,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1348~1361",
        "action": "LOOP",
        "vars": {
          "j": "2→15"
        }
      },
      {
        "line": 9,
        "step": 1362,
        "action": "EXECUTE",
        "vars": {
          "i": 199
        }
      },
      {
        "line": 4,
        "step": 1363,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1364~1377",
        "action": "LOOP",
        "vars": {
          "j": "2→15"
        }
      },
      {
        "line": 9,
        "step": 1378,
        "action": "EXECUTE",
        "vars": {
          "i": 200
        }
      },
      {
        "line": 4,
        "step": 1379,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": "1380~1393",
        "action": "LOOP",
        "vars": {
          "j": "2→15"
        }
      },
      {
        "line": 9,
        "step": 1394,
        "action": "EXECUTE",
        "vars": {
          "i": 201
        }
      },
      {
        "line": 10,
        "step": 1395,
        "action": "RETURN",
        "vars": {
          "__return__": [
            100,
            121,
            144,
            169,
            196
          ]
        }
      }
    ],
    "id": 1751,
    "task_id": 589,
    "exist_function": [
      "perfect_squares"
    ]
  },
  {
    "code": "def swap_List(newList): \r\n    size = len(newList) \r\n    temp = newList[0] \r\n    newList[0] = newList[size - 1] \r\n    newList[size - 1] = temp  \r\n    return newList",
    "entry_point": "swap_List",
    "input": [
      [
        24,
        35,
        9,
        56,
        12
      ]
    ],
    "output": [
      24,
      35,
      9,
      56,
      12
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "newList": [
            12,
            35,
            9,
            56,
            24
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "size": 5
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "temp": 12
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "newList[0]": 24
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "newList[4]": 12
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "RETURN",
        "vars": {
          "__return__": [
            24,
            35,
            9,
            56,
            12
          ]
        }
      }
    ],
    "id": 1755,
    "task_id": 591,
    "exist_function": [
      "swap_List"
    ]
  },
  {
    "code": "def swap_List(newList): \r\n    size = len(newList) \r\n    temp = newList[0] \r\n    newList[0] = newList[size - 1] \r\n    newList[size - 1] = temp  \r\n    return newList",
    "entry_point": "swap_List",
    "input": [
      [
        3,
        2,
        1
      ]
    ],
    "output": [
      3,
      2,
      1
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "newList": [
            1,
            2,
            3
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "size": 3
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "temp": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "newList[0]": 3
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "newList[2]": 1
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "RETURN",
        "vars": {
          "__return__": [
            3,
            2,
            1
          ]
        }
      }
    ],
    "id": 1756,
    "task_id": 591,
    "exist_function": [
      "swap_List"
    ]
  },
  {
    "code": "def swap_List(newList): \r\n    size = len(newList) \r\n    temp = newList[0] \r\n    newList[0] = newList[size - 1] \r\n    newList[size - 1] = temp  \r\n    return newList",
    "entry_point": "swap_List",
    "input": [
      [
        6,
        5,
        4
      ]
    ],
    "output": [
      6,
      5,
      4
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "newList": [
            4,
            5,
            6
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "size": 3
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "temp": 4
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "newList[0]": 6
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "newList[2]": 4
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "RETURN",
        "vars": {
          "__return__": [
            6,
            5,
            4
          ]
        }
      }
    ],
    "id": 1757,
    "task_id": 591,
    "exist_function": [
      "swap_List"
    ]
  },
  {
    "code": "def diff_even_odd(list1):\r\n    first_even = next((el for el in list1 if el%2==0),-1)\r\n    first_odd = next((el for el in list1 if el%2!=0),-1)\r\n    return (first_even-first_odd)",
    "entry_point": "diff_even_odd",
    "input": [
      [
        1,
        3,
        5,
        7,
        4,
        1,
        6,
        8
      ]
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list1": [
            1,
            3,
            5,
            7,
            4,
            1,
            6,
            8
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "first_even": 4
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "first_odd": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 1764,
    "task_id": 594,
    "exist_function": [
      "diff_even_odd"
    ]
  },
  {
    "code": "def diff_even_odd(list1):\r\n    first_even = next((el for el in list1 if el%2==0),-1)\r\n    first_odd = next((el for el in list1 if el%2!=0),-1)\r\n    return (first_even-first_odd)",
    "entry_point": "diff_even_odd",
    "input": [
      [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10
      ]
    ],
    "output": 1,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list1": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "first_even": 2
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "first_odd": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 1765,
    "task_id": 594,
    "exist_function": [
      "diff_even_odd"
    ]
  },
  {
    "code": "def diff_even_odd(list1):\r\n    first_even = next((el for el in list1 if el%2==0),-1)\r\n    first_odd = next((el for el in list1 if el%2!=0),-1)\r\n    return (first_even-first_odd)",
    "entry_point": "diff_even_odd",
    "input": [
      [
        1,
        5,
        7,
        9,
        10
      ]
    ],
    "output": 9,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list1": [
            1,
            5,
            7,
            9,
            10
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "first_even": 10
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "first_odd": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 9
        }
      }
    ],
    "id": 1766,
    "task_id": 594,
    "exist_function": [
      "diff_even_odd"
    ]
  },
  {
    "code": "def min_Swaps(str1,str2) : \r\n    count = 0\r\n    for i in range(len(str1)) :  \r\n        if str1[i] != str2[i] : \r\n            count += 1\r\n    if count % 2 == 0 : \r\n        return (count // 2) \r\n    else : \r\n        return (\"Not Possible\")",
    "entry_point": "min_Swaps",
    "input": [
      "1101",
      "1110"
    ],
    "output": 1,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "str1": "1101",
          "str2": "1110"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 3,
        "step": "3~5",
        "action": "LOOP",
        "vars": {
          "i": "0→2"
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 7,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 1767,
    "task_id": 595,
    "exist_function": [
      "min_Swaps"
    ]
  },
  {
    "code": "def min_Swaps(str1,str2) : \r\n    count = 0\r\n    for i in range(len(str1)) :  \r\n        if str1[i] != str2[i] : \r\n            count += 1\r\n    if count % 2 == 0 : \r\n        return (count // 2) \r\n    else : \r\n        return (\"Not Possible\")",
    "entry_point": "min_Swaps",
    "input": [
      "111",
      "000"
    ],
    "output": "Not Possible",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "str1": "111",
          "str2": "000"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 9,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": "Not Possible"
        }
      }
    ],
    "id": 1768,
    "task_id": 595,
    "exist_function": [
      "min_Swaps"
    ]
  },
  {
    "code": "def min_Swaps(str1,str2) : \r\n    count = 0\r\n    for i in range(len(str1)) :  \r\n        if str1[i] != str2[i] : \r\n            count += 1\r\n    if count % 2 == 0 : \r\n        return (count // 2) \r\n    else : \r\n        return (\"Not Possible\")",
    "entry_point": "min_Swaps",
    "input": [
      "111",
      "110"
    ],
    "output": "Not Possible",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "str1": "111",
          "str2": "110"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 3,
        "step": "3~5",
        "action": "LOOP",
        "vars": {
          "i": "0→2"
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 9,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": "Not Possible"
        }
      }
    ],
    "id": 1769,
    "task_id": 595,
    "exist_function": [
      "min_Swaps"
    ]
  },
  {
    "code": "def find_kth(arr1, arr2, m, n, k):\r\n\tsorted1 = [0] * (m + n)\r\n\ti = 0\r\n\tj = 0\r\n\td = 0\r\n\twhile (i < m and j < n):\r\n\t\tif (arr1[i] < arr2[j]):\r\n\t\t\tsorted1[d] = arr1[i]\r\n\t\t\ti += 1\r\n\t\telse:\r\n\t\t\tsorted1[d] = arr2[j]\r\n\t\t\tj += 1\r\n\t\td += 1\r\n\twhile (i < m):\r\n\t\tsorted1[d] = arr1[i]\r\n\t\td += 1\r\n\t\ti += 1\r\n\twhile (j < n):\r\n\t\tsorted1[d] = arr2[j]\r\n\t\td += 1\r\n\t\tj += 1\r\n\treturn sorted1[k - 1]",
    "entry_point": "find_kth",
    "input": [
      [
        2,
        3,
        6,
        7,
        9
      ],
      [
        1,
        4,
        8,
        10
      ],
      5,
      4,
      5
    ],
    "output": 6,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr1": [
            2,
            3,
            6,
            7,
            9
          ],
          "arr2": [
            1,
            4,
            8,
            10
          ],
          "m": 5,
          "n": 4,
          "k": 5
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sorted1": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "d": 0
        }
      },
      {
        "line": 11,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "sorted1[0]": 1
        }
      },
      {
        "line": 12,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 13,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "d": 1
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "sorted1[1]": 2
        }
      },
      {
        "line": 9,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 13,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "d": 2
        }
      },
      {
        "line": 8,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "sorted1[2]": 3
        }
      },
      {
        "line": 9,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 13,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "d": 3
        }
      },
      {
        "line": 11,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "sorted1[3]": 4
        }
      },
      {
        "line": 12,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 13,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "d": 4
        }
      },
      {
        "line": 8,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "sorted1[4]": 6
        }
      },
      {
        "line": 9,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 13,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "d": 5
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "sorted1[5]": 7
        }
      },
      {
        "line": 9,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 13,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "d": 6
        }
      },
      {
        "line": 11,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "sorted1[6]": 8
        }
      },
      {
        "line": 12,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 13,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "d": 7
        }
      },
      {
        "line": 8,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "sorted1[7]": 9
        }
      },
      {
        "line": 9,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 13,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "d": 8
        }
      },
      {
        "line": 19,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "sorted1[8]": 10
        }
      },
      {
        "line": 20,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "d": 9
        }
      },
      {
        "line": 21,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 22,
        "step": 33,
        "action": "RETURN",
        "vars": {
          "__return__": 6
        }
      }
    ],
    "id": 1773,
    "task_id": 597,
    "exist_function": [
      "find_kth"
    ]
  },
  {
    "code": "def find_kth(arr1, arr2, m, n, k):\r\n\tsorted1 = [0] * (m + n)\r\n\ti = 0\r\n\tj = 0\r\n\td = 0\r\n\twhile (i < m and j < n):\r\n\t\tif (arr1[i] < arr2[j]):\r\n\t\t\tsorted1[d] = arr1[i]\r\n\t\t\ti += 1\r\n\t\telse:\r\n\t\t\tsorted1[d] = arr2[j]\r\n\t\t\tj += 1\r\n\t\td += 1\r\n\twhile (i < m):\r\n\t\tsorted1[d] = arr1[i]\r\n\t\td += 1\r\n\t\ti += 1\r\n\twhile (j < n):\r\n\t\tsorted1[d] = arr2[j]\r\n\t\td += 1\r\n\t\tj += 1\r\n\treturn sorted1[k - 1]",
    "entry_point": "find_kth",
    "input": [
      [
        100,
        112,
        256,
        349,
        770
      ],
      [
        72,
        86,
        113,
        119,
        265,
        445,
        892
      ],
      5,
      7,
      7
    ],
    "output": 256,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr1": [
            100,
            112,
            256,
            349,
            770
          ],
          "arr2": [
            72,
            86,
            113,
            119,
            265,
            445,
            892
          ],
          "m": 5,
          "n": 7,
          "k": 7
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sorted1": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "d": 0
        }
      },
      {
        "line": 11,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "sorted1[0]": 72
        }
      },
      {
        "line": 12,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 13,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "d": 1
        }
      },
      {
        "line": 11,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "sorted1[1]": 86
        }
      },
      {
        "line": 12,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 13,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "d": 2
        }
      },
      {
        "line": 8,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "sorted1[2]": 100
        }
      },
      {
        "line": 9,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 13,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "d": 3
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "sorted1[3]": 112
        }
      },
      {
        "line": 9,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 13,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "d": 4
        }
      },
      {
        "line": 11,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "sorted1[4]": 113
        }
      },
      {
        "line": 12,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 13,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "d": 5
        }
      },
      {
        "line": 11,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "sorted1[5]": 119
        }
      },
      {
        "line": 12,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 13,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "d": 6
        }
      },
      {
        "line": 8,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "sorted1[6]": 256
        }
      },
      {
        "line": 9,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 13,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "d": 7
        }
      },
      {
        "line": 11,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "sorted1[7]": 265
        }
      },
      {
        "line": 12,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 13,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "d": 8
        }
      },
      {
        "line": 8,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "sorted1[8]": 349
        }
      },
      {
        "line": 9,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 13,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "d": 9
        }
      },
      {
        "line": 11,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "sorted1[9]": 445
        }
      },
      {
        "line": 12,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 13,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "d": 10
        }
      },
      {
        "line": 8,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "sorted1[10]": 770
        }
      },
      {
        "line": 9,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 13,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "d": 11
        }
      },
      {
        "line": 19,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "sorted1[11]": 892
        }
      },
      {
        "line": 20,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "d": 12
        }
      },
      {
        "line": 21,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 22,
        "step": 42,
        "action": "RETURN",
        "vars": {
          "__return__": 256
        }
      }
    ],
    "id": 1774,
    "task_id": 597,
    "exist_function": [
      "find_kth"
    ]
  },
  {
    "code": "def find_kth(arr1, arr2, m, n, k):\r\n\tsorted1 = [0] * (m + n)\r\n\ti = 0\r\n\tj = 0\r\n\td = 0\r\n\twhile (i < m and j < n):\r\n\t\tif (arr1[i] < arr2[j]):\r\n\t\t\tsorted1[d] = arr1[i]\r\n\t\t\ti += 1\r\n\t\telse:\r\n\t\t\tsorted1[d] = arr2[j]\r\n\t\t\tj += 1\r\n\t\td += 1\r\n\twhile (i < m):\r\n\t\tsorted1[d] = arr1[i]\r\n\t\td += 1\r\n\t\ti += 1\r\n\twhile (j < n):\r\n\t\tsorted1[d] = arr2[j]\r\n\t\td += 1\r\n\t\tj += 1\r\n\treturn sorted1[k - 1]",
    "entry_point": "find_kth",
    "input": [
      [
        3,
        4,
        7,
        8,
        10
      ],
      [
        2,
        5,
        9,
        11
      ],
      5,
      4,
      6
    ],
    "output": 8,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr1": [
            3,
            4,
            7,
            8,
            10
          ],
          "arr2": [
            2,
            5,
            9,
            11
          ],
          "m": 5,
          "n": 4,
          "k": 6
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sorted1": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "d": 0
        }
      },
      {
        "line": 11,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "sorted1[0]": 2
        }
      },
      {
        "line": 12,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 13,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "d": 1
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "sorted1[1]": 3
        }
      },
      {
        "line": 9,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 13,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "d": 2
        }
      },
      {
        "line": 8,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "sorted1[2]": 4
        }
      },
      {
        "line": 9,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 13,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "d": 3
        }
      },
      {
        "line": 11,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "sorted1[3]": 5
        }
      },
      {
        "line": 12,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 13,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "d": 4
        }
      },
      {
        "line": 8,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "sorted1[4]": 7
        }
      },
      {
        "line": 9,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 13,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "d": 5
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "sorted1[5]": 8
        }
      },
      {
        "line": 9,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 13,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "d": 6
        }
      },
      {
        "line": 11,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "sorted1[6]": 9
        }
      },
      {
        "line": 12,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 13,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "d": 7
        }
      },
      {
        "line": 8,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "sorted1[7]": 10
        }
      },
      {
        "line": 9,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 13,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "d": 8
        }
      },
      {
        "line": 19,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "sorted1[8]": 11
        }
      },
      {
        "line": 20,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "d": 9
        }
      },
      {
        "line": 21,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 22,
        "step": 33,
        "action": "RETURN",
        "vars": {
          "__return__": 8
        }
      }
    ],
    "id": 1775,
    "task_id": 597,
    "exist_function": [
      "find_kth"
    ]
  },
  {
    "code": "def armstrong_number(number):\r\n sum = 0\r\n times = 0\r\n temp = number\r\n while temp > 0:\r\n           times = times + 1\r\n           temp = temp // 10\r\n temp = number\r\n while temp > 0:\r\n           reminder = temp % 10\r\n           sum = sum + (reminder ** times)\r\n           temp //= 10\r\n if number == sum:\r\n           return True\r\n else:\r\n           return False",
    "entry_point": "armstrong_number",
    "input": [
      153
    ],
    "output": true,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "number": 153
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sum": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "times": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "temp": 153
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "times": 1
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "temp": 15
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "times": 2
        }
      },
      {
        "line": 7,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "temp": 1
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "times": 3
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "temp": 0
        }
      },
      {
        "line": 8,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "temp": 153
        }
      },
      {
        "line": 10,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "reminder": 3
        }
      },
      {
        "line": 11,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "sum": 27
        }
      },
      {
        "line": 12,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "temp": 15
        }
      },
      {
        "line": 10,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "reminder": 5
        }
      },
      {
        "line": 11,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "sum": 152
        }
      },
      {
        "line": 12,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "temp": 1
        }
      },
      {
        "line": 10,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "reminder": 1
        }
      },
      {
        "line": 11,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "sum": 153
        }
      },
      {
        "line": 12,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "temp": 0
        }
      },
      {
        "line": 14,
        "step": 21,
        "action": "RETURN",
        "vars": {
          "__return__": true
        }
      }
    ],
    "id": 1776,
    "task_id": 598,
    "exist_function": [
      "armstrong_number"
    ]
  },
  {
    "code": "def sum_average(number):\r\n total = 0\r\n for value in range(1, number + 1):\r\n    total = total + value\r\n average = total / number\r\n return (total,average)",
    "entry_point": "sum_average",
    "input": [
      10
    ],
    "output": "(55, 5.5)",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "number": 10
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "total": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "value": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "total": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "value": 2
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "total": 3
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "value": 3
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "total": 6
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "value": 4
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "total": 10
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "value": 5
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "total": 15
        }
      },
      {
        "line": 3,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "value": 6
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "total": 21
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "value": 7
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "total": 28
        }
      },
      {
        "line": 3,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "value": 8
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "total": 36
        }
      },
      {
        "line": 3,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "value": 9
        }
      },
      {
        "line": 4,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "total": 45
        }
      },
      {
        "line": 3,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "value": 10
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "total": 55
        }
      },
      {
        "line": 5,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "average": 5.5
        }
      },
      {
        "line": 6,
        "step": 24,
        "action": "RETURN",
        "vars": {
          "__return__": "(55, 5.5)"
        }
      }
    ],
    "id": 1779,
    "task_id": 599,
    "exist_function": [
      "sum_average"
    ]
  },
  {
    "code": "def sum_average(number):\r\n total = 0\r\n for value in range(1, number + 1):\r\n    total = total + value\r\n average = total / number\r\n return (total,average)",
    "entry_point": "sum_average",
    "input": [
      15
    ],
    "output": "(120, 8.0)",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "number": 15
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "total": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "value": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "total": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "value": 2
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "total": 3
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "value": 3
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "total": 6
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "value": 4
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "total": 10
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "value": 5
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "total": 15
        }
      },
      {
        "line": 3,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "value": 6
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "total": 21
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "value": 7
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "total": 28
        }
      },
      {
        "line": 3,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "value": 8
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "total": 36
        }
      },
      {
        "line": 3,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "value": 9
        }
      },
      {
        "line": 4,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "total": 45
        }
      },
      {
        "line": 3,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "value": 10
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "total": 55
        }
      },
      {
        "line": 3,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "value": 11
        }
      },
      {
        "line": 4,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "total": 66
        }
      },
      {
        "line": 3,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "value": 12
        }
      },
      {
        "line": 4,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "total": 78
        }
      },
      {
        "line": 3,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "value": 13
        }
      },
      {
        "line": 4,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "total": 91
        }
      },
      {
        "line": 3,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "value": 14
        }
      },
      {
        "line": 4,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "total": 105
        }
      },
      {
        "line": 3,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "value": 15
        }
      },
      {
        "line": 4,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "total": 120
        }
      },
      {
        "line": 5,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "average": 8.0
        }
      },
      {
        "line": 6,
        "step": 34,
        "action": "RETURN",
        "vars": {
          "__return__": "(120, 8.0)"
        }
      }
    ],
    "id": 1780,
    "task_id": 599,
    "exist_function": [
      "sum_average"
    ]
  },
  {
    "code": "def sum_average(number):\r\n total = 0\r\n for value in range(1, number + 1):\r\n    total = total + value\r\n average = total / number\r\n return (total,average)",
    "entry_point": "sum_average",
    "input": [
      20
    ],
    "output": "(210, 10.5)",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "number": 20
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "total": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "value": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "total": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "value": 2
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "total": 3
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "value": 3
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "total": 6
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "value": 4
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "total": 10
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "value": 5
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "total": 15
        }
      },
      {
        "line": 3,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "value": 6
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "total": 21
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "value": 7
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "total": 28
        }
      },
      {
        "line": 3,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "value": 8
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "total": 36
        }
      },
      {
        "line": 3,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "value": 9
        }
      },
      {
        "line": 4,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "total": 45
        }
      },
      {
        "line": 3,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "value": 10
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "total": 55
        }
      },
      {
        "line": 3,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "value": 11
        }
      },
      {
        "line": 4,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "total": 66
        }
      },
      {
        "line": 3,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "value": 12
        }
      },
      {
        "line": 4,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "total": 78
        }
      },
      {
        "line": 3,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "value": 13
        }
      },
      {
        "line": 4,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "total": 91
        }
      },
      {
        "line": 3,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "value": 14
        }
      },
      {
        "line": 4,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "total": 105
        }
      },
      {
        "line": 3,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "value": 15
        }
      },
      {
        "line": 4,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "total": 120
        }
      },
      {
        "line": 3,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "value": 16
        }
      },
      {
        "line": 4,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "total": 136
        }
      },
      {
        "line": 3,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "value": 17
        }
      },
      {
        "line": 4,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "total": 153
        }
      },
      {
        "line": 3,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "value": 18
        }
      },
      {
        "line": 4,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "total": 171
        }
      },
      {
        "line": 3,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "value": 19
        }
      },
      {
        "line": 4,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "total": 190
        }
      },
      {
        "line": 3,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "value": 20
        }
      },
      {
        "line": 4,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "total": 210
        }
      },
      {
        "line": 5,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "average": 10.5
        }
      },
      {
        "line": 6,
        "step": 44,
        "action": "RETURN",
        "vars": {
          "__return__": "(210, 10.5)"
        }
      }
    ],
    "id": 1781,
    "task_id": 599,
    "exist_function": [
      "sum_average"
    ]
  },
  {
    "code": "def first_repeated_char(str1):\r\n  for index,c in enumerate(str1):\r\n    if str1[:index+1].count(c) > 1:\r\n      return c \r\n  return \"None\"",
    "entry_point": "first_repeated_char",
    "input": [
      "abcabc"
    ],
    "output": "a",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "str1": "abcabc"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "c": "a",
          "index": 0
        }
      },
      {
        "line": 2,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "c": "b",
          "index": 1
        }
      },
      {
        "line": 2,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "c": "c",
          "index": 2
        }
      },
      {
        "line": 2,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "c": "a",
          "index": 3
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "RETURN",
        "vars": {
          "__return__": "a"
        }
      }
    ],
    "id": 1785,
    "task_id": 602,
    "exist_function": [
      "first_repeated_char"
    ]
  },
  {
    "code": "def first_repeated_char(str1):\r\n  for index,c in enumerate(str1):\r\n    if str1[:index+1].count(c) > 1:\r\n      return c \r\n  return \"None\"",
    "entry_point": "first_repeated_char",
    "input": [
      "abc"
    ],
    "output": "None",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "str1": "abc"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "c": "a",
          "index": 0
        }
      },
      {
        "line": 2,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "c": "b",
          "index": 1
        }
      },
      {
        "line": 2,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "c": "c",
          "index": 2
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "RETURN",
        "vars": {
          "__return__": "None"
        }
      }
    ],
    "id": 1786,
    "task_id": 602,
    "exist_function": [
      "first_repeated_char"
    ]
  },
  {
    "code": "def first_repeated_char(str1):\r\n  for index,c in enumerate(str1):\r\n    if str1[:index+1].count(c) > 1:\r\n      return c \r\n  return \"None\"",
    "entry_point": "first_repeated_char",
    "input": [
      "123123"
    ],
    "output": "1",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "str1": "123123"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "c": "1",
          "index": 0
        }
      },
      {
        "line": 2,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "c": "2",
          "index": 1
        }
      },
      {
        "line": 2,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "c": "3",
          "index": 2
        }
      },
      {
        "line": 2,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "c": "1",
          "index": 3
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "RETURN",
        "vars": {
          "__return__": "1"
        }
      }
    ],
    "id": 1787,
    "task_id": 602,
    "exist_function": [
      "first_repeated_char"
    ]
  },
  {
    "code": "def get_ludic(n):\r\n\tludics = []\r\n\tfor i in range(1, n + 1):\r\n\t\tludics.append(i)\r\n\tindex = 1\r\n\twhile(index != len(ludics)):\r\n\t\tfirst_ludic = ludics[index]\r\n\t\tremove_index = index + first_ludic\r\n\t\twhile(remove_index < len(ludics)):\r\n\t\t\tludics.remove(ludics[remove_index])\r\n\t\t\tremove_index = remove_index + first_ludic - 1\r\n\t\tindex += 1\r\n\treturn ludics",
    "entry_point": "get_ludic",
    "input": [
      10
    ],
    "output": [
      1,
      2,
      3,
      5,
      7
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 10
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "ludics": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "ludics[0]": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "ludics[1]": 2
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "ludics[2]": 3
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "ludics[3]": 4
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "ludics[4]": 5
        }
      },
      {
        "line": 3,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "ludics[5]": 6
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "ludics[6]": 7
        }
      },
      {
        "line": 3,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "ludics[7]": 8
        }
      },
      {
        "line": 3,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 4,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "ludics[8]": 9
        }
      },
      {
        "line": 3,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 10
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "ludics[9]": 10
        }
      },
      {
        "line": 5,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "index": 1
        }
      },
      {
        "line": 7,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 2
        }
      },
      {
        "line": 8,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 3
        }
      },
      {
        "line": 10,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "ludics[8]": 10,
          "ludics[6]": 8,
          "ludics[3]": 5,
          "ludics[4]": 6,
          "ludics[5]": 7,
          "ludics[7]": 9
        }
      },
      {
        "line": 11,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 4
        }
      },
      {
        "line": 10,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "ludics[6]": 9,
          "ludics[4]": 7,
          "ludics[5]": 8,
          "ludics[7]": 10
        }
      },
      {
        "line": 11,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 5
        }
      },
      {
        "line": 10,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "ludics[6]": 10,
          "ludics[5]": 9
        }
      },
      {
        "line": 11,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 6
        }
      },
      {
        "line": 10,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "ludics": [
            1,
            2,
            3,
            5,
            7,
            9
          ]
        }
      },
      {
        "line": 11,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 7
        }
      },
      {
        "line": 12,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "index": 2
        }
      },
      {
        "line": 7,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 3
        }
      },
      {
        "line": 8,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 5
        }
      },
      {
        "line": 10,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "ludics": [
            1,
            2,
            3,
            5,
            7
          ]
        }
      },
      {
        "line": 11,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 7
        }
      },
      {
        "line": 12,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "index": 3
        }
      },
      {
        "line": 7,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 5
        }
      },
      {
        "line": 8,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 8
        }
      },
      {
        "line": 12,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "index": 4
        }
      },
      {
        "line": 7,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 7
        }
      },
      {
        "line": 8,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 11
        }
      },
      {
        "line": 12,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "index": 5
        }
      },
      {
        "line": 13,
        "step": 46,
        "action": "RETURN",
        "vars": {
          "__return__": [
            1,
            2,
            3,
            5,
            7
          ]
        }
      }
    ],
    "id": 1788,
    "task_id": 603,
    "exist_function": [
      "get_ludic"
    ]
  },
  {
    "code": "def get_ludic(n):\r\n\tludics = []\r\n\tfor i in range(1, n + 1):\r\n\t\tludics.append(i)\r\n\tindex = 1\r\n\twhile(index != len(ludics)):\r\n\t\tfirst_ludic = ludics[index]\r\n\t\tremove_index = index + first_ludic\r\n\t\twhile(remove_index < len(ludics)):\r\n\t\t\tludics.remove(ludics[remove_index])\r\n\t\t\tremove_index = remove_index + first_ludic - 1\r\n\t\tindex += 1\r\n\treturn ludics",
    "entry_point": "get_ludic",
    "input": [
      25
    ],
    "output": [
      1,
      2,
      3,
      5,
      7,
      11,
      13,
      17,
      23,
      25
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 25
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "ludics": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "ludics[0]": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "ludics[1]": 2
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "ludics[2]": 3
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "ludics[3]": 4
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "ludics[4]": 5
        }
      },
      {
        "line": 3,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "ludics[5]": 6
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "ludics[6]": 7
        }
      },
      {
        "line": 3,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "ludics[7]": 8
        }
      },
      {
        "line": 3,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 4,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "ludics[8]": 9
        }
      },
      {
        "line": 3,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 10
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "ludics[9]": 10
        }
      },
      {
        "line": 3,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "i": 11
        }
      },
      {
        "line": 4,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "ludics[10]": 11
        }
      },
      {
        "line": 3,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "i": 12
        }
      },
      {
        "line": 4,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "ludics[11]": 12
        }
      },
      {
        "line": 3,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "i": 13
        }
      },
      {
        "line": 4,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "ludics[12]": 13
        }
      },
      {
        "line": 3,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "i": 14
        }
      },
      {
        "line": 4,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "ludics[13]": 14
        }
      },
      {
        "line": 3,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "i": 15
        }
      },
      {
        "line": 4,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "ludics[14]": 15
        }
      },
      {
        "line": 3,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "i": 16
        }
      },
      {
        "line": 4,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "ludics[15]": 16
        }
      },
      {
        "line": 3,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "i": 17
        }
      },
      {
        "line": 4,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "ludics[16]": 17
        }
      },
      {
        "line": 3,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "i": 18
        }
      },
      {
        "line": 4,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "ludics[17]": 18
        }
      },
      {
        "line": 3,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "i": 19
        }
      },
      {
        "line": 4,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "ludics[18]": 19
        }
      },
      {
        "line": 3,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "i": 20
        }
      },
      {
        "line": 4,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "ludics[19]": 20
        }
      },
      {
        "line": 3,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "i": 21
        }
      },
      {
        "line": 4,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 21
        }
      },
      {
        "line": 3,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "i": 22
        }
      },
      {
        "line": 4,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "ludics[21]": 22
        }
      },
      {
        "line": 3,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "i": 23
        }
      },
      {
        "line": 4,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "ludics[22]": 23
        }
      },
      {
        "line": 3,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "i": 24
        }
      },
      {
        "line": 4,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "ludics[23]": 24
        }
      },
      {
        "line": 3,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "i": 25
        }
      },
      {
        "line": 4,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "ludics[24]": 25
        }
      },
      {
        "line": 5,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "index": 1
        }
      },
      {
        "line": 7,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 2
        }
      },
      {
        "line": 8,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 3
        }
      },
      {
        "line": 10,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 22,
          "ludics[19]": 21,
          "ludics[7]": 9,
          "ludics[9]": 11,
          "ludics[18]": 20,
          "ludics[5]": 7,
          "ludics[14]": 16,
          "ludics[8]": 10,
          "ludics[6]": 8,
          "ludics[3]": 5,
          "ludics[15]": 17,
          "ludics[4]": 6,
          "ludics[11]": 13,
          "ludics[13]": 15,
          "ludics[23]": 25,
          "ludics[12]": 14,
          "ludics[10]": 12,
          "ludics[22]": 24,
          "ludics[16]": 18,
          "ludics[21]": 23,
          "ludics[17]": 19
        }
      },
      {
        "line": 11,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 4
        }
      },
      {
        "line": 10,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 23,
          "ludics[19]": 22,
          "ludics[7]": 10,
          "ludics[9]": 12,
          "ludics[18]": 21,
          "ludics[5]": 8,
          "ludics[14]": 17,
          "ludics[8]": 11,
          "ludics[6]": 9,
          "ludics[15]": 18,
          "ludics[4]": 7,
          "ludics[11]": 14,
          "ludics[13]": 16,
          "ludics[12]": 15,
          "ludics[10]": 13,
          "ludics[22]": 25,
          "ludics[16]": 19,
          "ludics[21]": 24,
          "ludics[17]": 20
        }
      },
      {
        "line": 11,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 5
        }
      },
      {
        "line": 10,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 24,
          "ludics[19]": 23,
          "ludics[7]": 11,
          "ludics[9]": 13,
          "ludics[18]": 22,
          "ludics[5]": 9,
          "ludics[14]": 18,
          "ludics[8]": 12,
          "ludics[6]": 10,
          "ludics[15]": 19,
          "ludics[11]": 15,
          "ludics[13]": 17,
          "ludics[12]": 16,
          "ludics[10]": 14,
          "ludics[16]": 20,
          "ludics[21]": 25,
          "ludics[17]": 21
        }
      },
      {
        "line": 11,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 6
        }
      },
      {
        "line": 10,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "ludics[17]": 22,
          "ludics[14]": 19,
          "ludics[12]": 17,
          "ludics[8]": 13,
          "ludics[9]": 14,
          "ludics[6]": 11,
          "ludics[10]": 15,
          "ludics[15]": 20,
          "ludics[20]": 25,
          "ludics[18]": 23,
          "ludics[19]": 24,
          "ludics[11]": 16,
          "ludics[16]": 21,
          "ludics[13]": 18,
          "ludics[7]": 12
        }
      },
      {
        "line": 11,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 7
        }
      },
      {
        "line": 10,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "ludics[17]": 23,
          "ludics[14]": 20,
          "ludics[12]": 18,
          "ludics[8]": 14,
          "ludics[9]": 15,
          "ludics[10]": 16,
          "ludics[15]": 21,
          "ludics[18]": 24,
          "ludics[19]": 25,
          "ludics[11]": 17,
          "ludics[16]": 22,
          "ludics[13]": 19,
          "ludics[7]": 13
        }
      },
      {
        "line": 11,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 8
        }
      },
      {
        "line": 10,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "ludics[17]": 24,
          "ludics[14]": 21,
          "ludics[12]": 19,
          "ludics[8]": 15,
          "ludics[9]": 16,
          "ludics[10]": 17,
          "ludics[15]": 22,
          "ludics[18]": 25,
          "ludics[11]": 18,
          "ludics[16]": 23,
          "ludics[13]": 20
        }
      },
      {
        "line": 11,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 9
        }
      },
      {
        "line": 10,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "ludics[17]": 25,
          "ludics[14]": 22,
          "ludics[12]": 20,
          "ludics[9]": 17,
          "ludics[10]": 18,
          "ludics[15]": 23,
          "ludics[11]": 19,
          "ludics[16]": 24,
          "ludics[13]": 21
        }
      },
      {
        "line": 11,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 10
        }
      },
      {
        "line": 10,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "ludics[14]": 23,
          "ludics[12]": 21,
          "ludics[10]": 19,
          "ludics[15]": 24,
          "ludics[11]": 20,
          "ludics[16]": 25,
          "ludics[13]": 22
        }
      },
      {
        "line": 11,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 11
        }
      },
      {
        "line": 10,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "ludics[14]": 24,
          "ludics[12]": 22,
          "ludics[15]": 25,
          "ludics[11]": 21,
          "ludics[13]": 23
        }
      },
      {
        "line": 11,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 12
        }
      },
      {
        "line": 10,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "ludics[14]": 25,
          "ludics[12]": 23,
          "ludics[13]": 24
        }
      },
      {
        "line": 11,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 13
        }
      },
      {
        "line": 10,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "ludics[13]": 25
        }
      },
      {
        "line": 11,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 14
        }
      },
      {
        "line": 12,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "index": 2
        }
      },
      {
        "line": 7,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 3
        }
      },
      {
        "line": 8,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 5
        }
      },
      {
        "line": 10,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "ludics[12]": 25,
          "ludics[8]": 17,
          "ludics[9]": 19,
          "ludics[6]": 13,
          "ludics[10]": 21,
          "ludics[11]": 23,
          "ludics[5]": 11,
          "ludics[7]": 15
        }
      },
      {
        "line": 11,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 7
        }
      },
      {
        "line": 10,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "ludics[8]": 19,
          "ludics[9]": 21,
          "ludics[10]": 23,
          "ludics[11]": 25,
          "ludics[7]": 17
        }
      },
      {
        "line": 11,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 9
        }
      },
      {
        "line": 10,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "ludics[10]": 25,
          "ludics[9]": 23
        }
      },
      {
        "line": 11,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 11
        }
      },
      {
        "line": 12,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "index": 3
        }
      },
      {
        "line": 7,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 5
        }
      },
      {
        "line": 8,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 8
        }
      },
      {
        "line": 10,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "ludics[8]": 23,
          "ludics[9]": 25
        }
      },
      {
        "line": 11,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 12
        }
      },
      {
        "line": 12,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "index": 4
        }
      },
      {
        "line": 7,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 7
        }
      },
      {
        "line": 8,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 11
        }
      },
      {
        "line": 12,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "index": 5
        }
      },
      {
        "line": 7,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 11
        }
      },
      {
        "line": 8,
        "step": 97,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 16
        }
      },
      {
        "line": 12,
        "step": 98,
        "action": "EXECUTE",
        "vars": {
          "index": 6
        }
      },
      {
        "line": 7,
        "step": 99,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 13
        }
      },
      {
        "line": 8,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 19
        }
      },
      {
        "line": 12,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "index": 7
        }
      },
      {
        "line": 7,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 17
        }
      },
      {
        "line": 8,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 24
        }
      },
      {
        "line": 12,
        "step": 104,
        "action": "EXECUTE",
        "vars": {
          "index": 8
        }
      },
      {
        "line": 7,
        "step": 105,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 23
        }
      },
      {
        "line": 8,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 31
        }
      },
      {
        "line": 12,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "index": 9
        }
      },
      {
        "line": 7,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 25
        }
      },
      {
        "line": 8,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 34
        }
      },
      {
        "line": 12,
        "step": 110,
        "action": "EXECUTE",
        "vars": {
          "index": 10
        }
      },
      {
        "line": 13,
        "step": 111,
        "action": "RETURN",
        "vars": {
          "__return__": [
            1,
            2,
            3,
            5,
            7,
            11,
            13,
            17,
            23,
            25
          ]
        }
      }
    ],
    "id": 1789,
    "task_id": 603,
    "exist_function": [
      "get_ludic"
    ]
  },
  {
    "code": "def get_ludic(n):\r\n\tludics = []\r\n\tfor i in range(1, n + 1):\r\n\t\tludics.append(i)\r\n\tindex = 1\r\n\twhile(index != len(ludics)):\r\n\t\tfirst_ludic = ludics[index]\r\n\t\tremove_index = index + first_ludic\r\n\t\twhile(remove_index < len(ludics)):\r\n\t\t\tludics.remove(ludics[remove_index])\r\n\t\t\tremove_index = remove_index + first_ludic - 1\r\n\t\tindex += 1\r\n\treturn ludics",
    "entry_point": "get_ludic",
    "input": [
      45
    ],
    "output": [
      1,
      2,
      3,
      5,
      7,
      11,
      13,
      17,
      23,
      25,
      29,
      37,
      41,
      43
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 45
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "ludics": []
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "ludics[0]": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "ludics[1]": 2
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "ludics[2]": 3
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "ludics[3]": 4
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "ludics[4]": 5
        }
      },
      {
        "line": 3,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "ludics[5]": 6
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "ludics[6]": 7
        }
      },
      {
        "line": 3,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "ludics[7]": 8
        }
      },
      {
        "line": 3,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 9
        }
      },
      {
        "line": 4,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "ludics[8]": 9
        }
      },
      {
        "line": 3,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 10
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "ludics[9]": 10
        }
      },
      {
        "line": 3,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "i": 11
        }
      },
      {
        "line": 4,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "ludics[10]": 11
        }
      },
      {
        "line": 3,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "i": 12
        }
      },
      {
        "line": 4,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "ludics[11]": 12
        }
      },
      {
        "line": 3,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "i": 13
        }
      },
      {
        "line": 4,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "ludics[12]": 13
        }
      },
      {
        "line": 3,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "i": 14
        }
      },
      {
        "line": 4,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "ludics[13]": 14
        }
      },
      {
        "line": 3,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "i": 15
        }
      },
      {
        "line": 4,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "ludics[14]": 15
        }
      },
      {
        "line": 3,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "i": 16
        }
      },
      {
        "line": 4,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "ludics[15]": 16
        }
      },
      {
        "line": 3,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "i": 17
        }
      },
      {
        "line": 4,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "ludics[16]": 17
        }
      },
      {
        "line": 3,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "i": 18
        }
      },
      {
        "line": 4,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "ludics[17]": 18
        }
      },
      {
        "line": 3,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "i": 19
        }
      },
      {
        "line": 4,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "ludics[18]": 19
        }
      },
      {
        "line": 3,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "i": 20
        }
      },
      {
        "line": 4,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "ludics[19]": 20
        }
      },
      {
        "line": 3,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "i": 21
        }
      },
      {
        "line": 4,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 21
        }
      },
      {
        "line": 3,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "i": 22
        }
      },
      {
        "line": 4,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "ludics[21]": 22
        }
      },
      {
        "line": 3,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "i": 23
        }
      },
      {
        "line": 4,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "ludics[22]": 23
        }
      },
      {
        "line": 3,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "i": 24
        }
      },
      {
        "line": 4,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "ludics[23]": 24
        }
      },
      {
        "line": 3,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "i": 25
        }
      },
      {
        "line": 4,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "ludics[24]": 25
        }
      },
      {
        "line": 3,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "i": 26
        }
      },
      {
        "line": 4,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "ludics[25]": 26
        }
      },
      {
        "line": 3,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "i": 27
        }
      },
      {
        "line": 4,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "ludics[26]": 27
        }
      },
      {
        "line": 3,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "i": 28
        }
      },
      {
        "line": 4,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "ludics[27]": 28
        }
      },
      {
        "line": 3,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "i": 29
        }
      },
      {
        "line": 4,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "ludics[28]": 29
        }
      },
      {
        "line": 3,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "i": 30
        }
      },
      {
        "line": 4,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "ludics[29]": 30
        }
      },
      {
        "line": 3,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "i": 31
        }
      },
      {
        "line": 4,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "ludics[30]": 31
        }
      },
      {
        "line": 3,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "i": 32
        }
      },
      {
        "line": 4,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "ludics[31]": 32
        }
      },
      {
        "line": 3,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "i": 33
        }
      },
      {
        "line": 4,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "ludics[32]": 33
        }
      },
      {
        "line": 3,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "i": 34
        }
      },
      {
        "line": 4,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "ludics[33]": 34
        }
      },
      {
        "line": 3,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "i": 35
        }
      },
      {
        "line": 4,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "ludics[34]": 35
        }
      },
      {
        "line": 3,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "i": 36
        }
      },
      {
        "line": 4,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "ludics[35]": 36
        }
      },
      {
        "line": 3,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "i": 37
        }
      },
      {
        "line": 4,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "ludics[36]": 37
        }
      },
      {
        "line": 3,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "i": 38
        }
      },
      {
        "line": 4,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "ludics[37]": 38
        }
      },
      {
        "line": 3,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "i": 39
        }
      },
      {
        "line": 4,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "ludics[38]": 39
        }
      },
      {
        "line": 3,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "i": 40
        }
      },
      {
        "line": 4,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "ludics[39]": 40
        }
      },
      {
        "line": 3,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "i": 41
        }
      },
      {
        "line": 4,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "ludics[40]": 41
        }
      },
      {
        "line": 3,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "i": 42
        }
      },
      {
        "line": 4,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "ludics[41]": 42
        }
      },
      {
        "line": 3,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "i": 43
        }
      },
      {
        "line": 4,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "ludics[42]": 43
        }
      },
      {
        "line": 3,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "i": 44
        }
      },
      {
        "line": 4,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "ludics[43]": 44
        }
      },
      {
        "line": 3,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "i": 45
        }
      },
      {
        "line": 4,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "ludics[44]": 45
        }
      },
      {
        "line": 5,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "index": 1
        }
      },
      {
        "line": 7,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 2
        }
      },
      {
        "line": 8,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 3
        }
      },
      {
        "line": 10,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "ludics[40]": 42,
          "ludics[20]": 22,
          "ludics[24]": 26,
          "ludics[19]": 21,
          "ludics[29]": 31,
          "ludics[32]": 34,
          "ludics[42]": 44,
          "ludics[30]": 32,
          "ludics[7]": 9,
          "ludics[31]": 33,
          "ludics[9]": 11,
          "ludics[36]": 38,
          "ludics[34]": 36,
          "ludics[37]": 39,
          "ludics[18]": 20,
          "ludics[5]": 7,
          "ludics[25]": 27,
          "ludics[14]": 16,
          "ludics[8]": 10,
          "ludics[6]": 8,
          "ludics[3]": 5,
          "ludics[15]": 17,
          "ludics[26]": 28,
          "ludics[4]": 6,
          "ludics[28]": 30,
          "ludics[11]": 13,
          "ludics[13]": 15,
          "ludics[38]": 40,
          "ludics[23]": 25,
          "ludics[12]": 14,
          "ludics[10]": 12,
          "ludics[27]": 29,
          "ludics[22]": 24,
          "ludics[33]": 35,
          "ludics[39]": 41,
          "ludics[16]": 18,
          "ludics[21]": 23,
          "ludics[41]": 43,
          "ludics[43]": 45,
          "ludics[17]": 19,
          "ludics[35]": 37
        }
      },
      {
        "line": 11,
        "step": 97,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 4
        }
      },
      {
        "line": 10,
        "step": 98,
        "action": "EXECUTE",
        "vars": {
          "ludics[40]": 43,
          "ludics[20]": 23,
          "ludics[24]": 27,
          "ludics[19]": 22,
          "ludics[29]": 32,
          "ludics[32]": 35,
          "ludics[42]": 45,
          "ludics[30]": 33,
          "ludics[7]": 10,
          "ludics[31]": 34,
          "ludics[9]": 12,
          "ludics[36]": 39,
          "ludics[34]": 37,
          "ludics[37]": 40,
          "ludics[18]": 21,
          "ludics[5]": 8,
          "ludics[25]": 28,
          "ludics[14]": 17,
          "ludics[8]": 11,
          "ludics[6]": 9,
          "ludics[15]": 18,
          "ludics[26]": 29,
          "ludics[4]": 7,
          "ludics[28]": 31,
          "ludics[11]": 14,
          "ludics[13]": 16,
          "ludics[38]": 41,
          "ludics[23]": 26,
          "ludics[12]": 15,
          "ludics[10]": 13,
          "ludics[27]": 30,
          "ludics[22]": 25,
          "ludics[33]": 36,
          "ludics[39]": 42,
          "ludics[16]": 19,
          "ludics[21]": 24,
          "ludics[41]": 44,
          "ludics[17]": 20,
          "ludics[35]": 38
        }
      },
      {
        "line": 11,
        "step": 99,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 5
        }
      },
      {
        "line": 10,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "ludics[40]": 44,
          "ludics[20]": 24,
          "ludics[24]": 28,
          "ludics[19]": 23,
          "ludics[29]": 33,
          "ludics[32]": 36,
          "ludics[30]": 34,
          "ludics[7]": 11,
          "ludics[31]": 35,
          "ludics[9]": 13,
          "ludics[36]": 40,
          "ludics[34]": 38,
          "ludics[37]": 41,
          "ludics[18]": 22,
          "ludics[5]": 9,
          "ludics[25]": 29,
          "ludics[14]": 18,
          "ludics[8]": 12,
          "ludics[6]": 10,
          "ludics[15]": 19,
          "ludics[26]": 30,
          "ludics[28]": 32,
          "ludics[11]": 15,
          "ludics[13]": 17,
          "ludics[38]": 42,
          "ludics[23]": 27,
          "ludics[12]": 16,
          "ludics[10]": 14,
          "ludics[27]": 31,
          "ludics[22]": 26,
          "ludics[33]": 37,
          "ludics[39]": 43,
          "ludics[16]": 20,
          "ludics[21]": 25,
          "ludics[41]": 45,
          "ludics[17]": 21,
          "ludics[35]": 39
        }
      },
      {
        "line": 11,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 6
        }
      },
      {
        "line": 10,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "ludics[40]": 45,
          "ludics[20]": 25,
          "ludics[24]": 29,
          "ludics[19]": 24,
          "ludics[29]": 34,
          "ludics[32]": 37,
          "ludics[30]": 35,
          "ludics[7]": 12,
          "ludics[31]": 36,
          "ludics[9]": 14,
          "ludics[36]": 41,
          "ludics[34]": 39,
          "ludics[37]": 42,
          "ludics[18]": 23,
          "ludics[25]": 30,
          "ludics[14]": 19,
          "ludics[8]": 13,
          "ludics[6]": 11,
          "ludics[15]": 20,
          "ludics[26]": 31,
          "ludics[28]": 33,
          "ludics[11]": 16,
          "ludics[13]": 18,
          "ludics[38]": 43,
          "ludics[23]": 28,
          "ludics[12]": 17,
          "ludics[10]": 15,
          "ludics[27]": 32,
          "ludics[22]": 27,
          "ludics[33]": 38,
          "ludics[39]": 44,
          "ludics[16]": 21,
          "ludics[21]": 26,
          "ludics[17]": 22,
          "ludics[35]": 40
        }
      },
      {
        "line": 11,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 7
        }
      },
      {
        "line": 10,
        "step": 104,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 26,
          "ludics[24]": 30,
          "ludics[19]": 25,
          "ludics[29]": 35,
          "ludics[32]": 38,
          "ludics[30]": 36,
          "ludics[7]": 13,
          "ludics[31]": 37,
          "ludics[9]": 15,
          "ludics[36]": 42,
          "ludics[34]": 40,
          "ludics[37]": 43,
          "ludics[18]": 24,
          "ludics[25]": 31,
          "ludics[14]": 20,
          "ludics[8]": 14,
          "ludics[15]": 21,
          "ludics[26]": 32,
          "ludics[28]": 34,
          "ludics[11]": 17,
          "ludics[13]": 19,
          "ludics[38]": 44,
          "ludics[23]": 29,
          "ludics[12]": 18,
          "ludics[10]": 16,
          "ludics[27]": 33,
          "ludics[22]": 28,
          "ludics[33]": 39,
          "ludics[39]": 45,
          "ludics[16]": 22,
          "ludics[21]": 27,
          "ludics[17]": 23,
          "ludics[35]": 41
        }
      },
      {
        "line": 11,
        "step": 105,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 8
        }
      },
      {
        "line": 10,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 27,
          "ludics[24]": 31,
          "ludics[19]": 26,
          "ludics[29]": 36,
          "ludics[32]": 39,
          "ludics[30]": 37,
          "ludics[31]": 38,
          "ludics[9]": 16,
          "ludics[36]": 43,
          "ludics[34]": 41,
          "ludics[37]": 44,
          "ludics[18]": 25,
          "ludics[25]": 32,
          "ludics[14]": 21,
          "ludics[8]": 15,
          "ludics[15]": 22,
          "ludics[26]": 33,
          "ludics[28]": 35,
          "ludics[11]": 18,
          "ludics[13]": 20,
          "ludics[38]": 45,
          "ludics[23]": 30,
          "ludics[12]": 19,
          "ludics[10]": 17,
          "ludics[27]": 34,
          "ludics[22]": 29,
          "ludics[33]": 40,
          "ludics[16]": 23,
          "ludics[21]": 28,
          "ludics[17]": 24,
          "ludics[35]": 42
        }
      },
      {
        "line": 11,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 9
        }
      },
      {
        "line": 10,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 28,
          "ludics[24]": 32,
          "ludics[19]": 27,
          "ludics[29]": 37,
          "ludics[32]": 40,
          "ludics[30]": 38,
          "ludics[31]": 39,
          "ludics[9]": 17,
          "ludics[36]": 44,
          "ludics[34]": 42,
          "ludics[37]": 45,
          "ludics[18]": 26,
          "ludics[25]": 33,
          "ludics[14]": 22,
          "ludics[15]": 23,
          "ludics[26]": 34,
          "ludics[28]": 36,
          "ludics[11]": 19,
          "ludics[13]": 21,
          "ludics[23]": 31,
          "ludics[12]": 20,
          "ludics[10]": 18,
          "ludics[27]": 35,
          "ludics[22]": 30,
          "ludics[33]": 41,
          "ludics[16]": 24,
          "ludics[21]": 29,
          "ludics[17]": 25,
          "ludics[35]": 43
        }
      },
      {
        "line": 11,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 10
        }
      },
      {
        "line": 10,
        "step": 110,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 29,
          "ludics[24]": 33,
          "ludics[19]": 28,
          "ludics[29]": 38,
          "ludics[32]": 41,
          "ludics[30]": 39,
          "ludics[31]": 40,
          "ludics[36]": 45,
          "ludics[34]": 43,
          "ludics[18]": 27,
          "ludics[25]": 34,
          "ludics[14]": 23,
          "ludics[15]": 24,
          "ludics[26]": 35,
          "ludics[28]": 37,
          "ludics[11]": 20,
          "ludics[13]": 22,
          "ludics[23]": 32,
          "ludics[12]": 21,
          "ludics[10]": 19,
          "ludics[27]": 36,
          "ludics[22]": 31,
          "ludics[33]": 42,
          "ludics[16]": 25,
          "ludics[21]": 30,
          "ludics[17]": 26,
          "ludics[35]": 44
        }
      },
      {
        "line": 11,
        "step": 111,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 11
        }
      },
      {
        "line": 10,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 30,
          "ludics[24]": 34,
          "ludics[19]": 29,
          "ludics[29]": 39,
          "ludics[32]": 42,
          "ludics[30]": 40,
          "ludics[31]": 41,
          "ludics[34]": 44,
          "ludics[18]": 28,
          "ludics[25]": 35,
          "ludics[14]": 24,
          "ludics[15]": 25,
          "ludics[26]": 36,
          "ludics[28]": 38,
          "ludics[11]": 21,
          "ludics[13]": 23,
          "ludics[23]": 33,
          "ludics[12]": 22,
          "ludics[27]": 37,
          "ludics[22]": 32,
          "ludics[33]": 43,
          "ludics[16]": 26,
          "ludics[21]": 31,
          "ludics[17]": 27,
          "ludics[35]": 45
        }
      },
      {
        "line": 11,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 12
        }
      },
      {
        "line": 10,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 31,
          "ludics[24]": 35,
          "ludics[19]": 30,
          "ludics[29]": 40,
          "ludics[32]": 43,
          "ludics[30]": 41,
          "ludics[31]": 42,
          "ludics[34]": 45,
          "ludics[18]": 29,
          "ludics[25]": 36,
          "ludics[14]": 25,
          "ludics[15]": 26,
          "ludics[26]": 37,
          "ludics[28]": 39,
          "ludics[13]": 24,
          "ludics[23]": 34,
          "ludics[12]": 23,
          "ludics[27]": 38,
          "ludics[22]": 33,
          "ludics[33]": 44,
          "ludics[16]": 27,
          "ludics[21]": 32,
          "ludics[17]": 28
        }
      },
      {
        "line": 11,
        "step": 115,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 13
        }
      },
      {
        "line": 10,
        "step": 116,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 32,
          "ludics[24]": 36,
          "ludics[19]": 31,
          "ludics[29]": 41,
          "ludics[32]": 44,
          "ludics[30]": 42,
          "ludics[31]": 43,
          "ludics[18]": 30,
          "ludics[25]": 37,
          "ludics[14]": 26,
          "ludics[15]": 27,
          "ludics[26]": 38,
          "ludics[28]": 40,
          "ludics[13]": 25,
          "ludics[23]": 35,
          "ludics[27]": 39,
          "ludics[22]": 34,
          "ludics[33]": 45,
          "ludics[16]": 28,
          "ludics[21]": 33,
          "ludics[17]": 29
        }
      },
      {
        "line": 11,
        "step": 117,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 14
        }
      },
      {
        "line": 10,
        "step": 118,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 33,
          "ludics[24]": 37,
          "ludics[19]": 32,
          "ludics[29]": 42,
          "ludics[32]": 45,
          "ludics[30]": 43,
          "ludics[31]": 44,
          "ludics[18]": 31,
          "ludics[25]": 38,
          "ludics[14]": 27,
          "ludics[15]": 28,
          "ludics[26]": 39,
          "ludics[28]": 41,
          "ludics[23]": 36,
          "ludics[27]": 40,
          "ludics[22]": 35,
          "ludics[16]": 29,
          "ludics[21]": 34,
          "ludics[17]": 30
        }
      },
      {
        "line": 11,
        "step": 119,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 15
        }
      },
      {
        "line": 10,
        "step": 120,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 34,
          "ludics[24]": 38,
          "ludics[19]": 33,
          "ludics[29]": 43,
          "ludics[30]": 44,
          "ludics[31]": 45,
          "ludics[18]": 32,
          "ludics[25]": 39,
          "ludics[15]": 29,
          "ludics[26]": 40,
          "ludics[28]": 42,
          "ludics[23]": 37,
          "ludics[27]": 41,
          "ludics[22]": 36,
          "ludics[16]": 30,
          "ludics[21]": 35,
          "ludics[17]": 31
        }
      },
      {
        "line": 11,
        "step": 121,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 16
        }
      },
      {
        "line": 10,
        "step": 122,
        "action": "EXECUTE",
        "vars": {
          "ludics[23]": 38,
          "ludics[27]": 42,
          "ludics[20]": 35,
          "ludics[22]": 37,
          "ludics[18]": 33,
          "ludics[19]": 34,
          "ludics[24]": 39,
          "ludics[26]": 41,
          "ludics[28]": 43,
          "ludics[29]": 44,
          "ludics[16]": 31,
          "ludics[21]": 36,
          "ludics[25]": 40,
          "ludics[17]": 32,
          "ludics[30]": 45
        }
      },
      {
        "line": 11,
        "step": 123,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 17
        }
      },
      {
        "line": 10,
        "step": 124,
        "action": "EXECUTE",
        "vars": {
          "ludics[23]": 39,
          "ludics[27]": 43,
          "ludics[20]": 36,
          "ludics[22]": 38,
          "ludics[18]": 34,
          "ludics[19]": 35,
          "ludics[24]": 40,
          "ludics[26]": 42,
          "ludics[28]": 44,
          "ludics[29]": 45,
          "ludics[21]": 37,
          "ludics[25]": 41,
          "ludics[17]": 33
        }
      },
      {
        "line": 11,
        "step": 125,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 18
        }
      },
      {
        "line": 10,
        "step": 126,
        "action": "EXECUTE",
        "vars": {
          "ludics[23]": 40,
          "ludics[27]": 44,
          "ludics[22]": 39,
          "ludics[20]": 37,
          "ludics[18]": 35,
          "ludics[19]": 36,
          "ludics[24]": 41,
          "ludics[26]": 43,
          "ludics[28]": 45,
          "ludics[21]": 38,
          "ludics[25]": 42
        }
      },
      {
        "line": 11,
        "step": 127,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 19
        }
      },
      {
        "line": 10,
        "step": 128,
        "action": "EXECUTE",
        "vars": {
          "ludics[23]": 41,
          "ludics[27]": 45,
          "ludics[22]": 40,
          "ludics[20]": 38,
          "ludics[24]": 42,
          "ludics[19]": 37,
          "ludics[26]": 44,
          "ludics[21]": 39,
          "ludics[25]": 43
        }
      },
      {
        "line": 11,
        "step": 129,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 20
        }
      },
      {
        "line": 10,
        "step": 130,
        "action": "EXECUTE",
        "vars": {
          "ludics[23]": 42,
          "ludics[22]": 41,
          "ludics[20]": 39,
          "ludics[24]": 43,
          "ludics[26]": 45,
          "ludics[21]": 40,
          "ludics[25]": 44
        }
      },
      {
        "line": 11,
        "step": 131,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 21
        }
      },
      {
        "line": 10,
        "step": 132,
        "action": "EXECUTE",
        "vars": {
          "ludics[23]": 43,
          "ludics[22]": 42,
          "ludics[24]": 44,
          "ludics[21]": 41,
          "ludics[25]": 45
        }
      },
      {
        "line": 11,
        "step": 133,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 22
        }
      },
      {
        "line": 10,
        "step": 134,
        "action": "EXECUTE",
        "vars": {
          "ludics[23]": 44,
          "ludics[22]": 43,
          "ludics[24]": 45
        }
      },
      {
        "line": 11,
        "step": 135,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 23
        }
      },
      {
        "line": 10,
        "step": 136,
        "action": "EXECUTE",
        "vars": {
          "ludics[23]": 45
        }
      },
      {
        "line": 11,
        "step": 137,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 24
        }
      },
      {
        "line": 12,
        "step": 138,
        "action": "EXECUTE",
        "vars": {
          "index": 2
        }
      },
      {
        "line": 7,
        "step": 139,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 3
        }
      },
      {
        "line": 8,
        "step": 140,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 5
        }
      },
      {
        "line": 10,
        "step": 141,
        "action": "EXECUTE",
        "vars": {
          "ludics[20]": 41,
          "ludics[19]": 39,
          "ludics[7]": 15,
          "ludics[9]": 19,
          "ludics[18]": 37,
          "ludics[5]": 11,
          "ludics[14]": 29,
          "ludics[8]": 17,
          "ludics[6]": 13,
          "ludics[15]": 31,
          "ludics[11]": 23,
          "ludics[13]": 27,
          "ludics[12]": 25,
          "ludics[10]": 21,
          "ludics[22]": 45,
          "ludics[16]": 33,
          "ludics[21]": 43,
          "ludics[17]": 35
        }
      },
      {
        "line": 11,
        "step": 142,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 7
        }
      },
      {
        "line": 10,
        "step": 143,
        "action": "EXECUTE",
        "vars": {
          "ludics[17]": 37,
          "ludics[14]": 31,
          "ludics[12]": 27,
          "ludics[8]": 19,
          "ludics[9]": 21,
          "ludics[10]": 23,
          "ludics[15]": 33,
          "ludics[20]": 43,
          "ludics[18]": 39,
          "ludics[19]": 41,
          "ludics[11]": 25,
          "ludics[16]": 35,
          "ludics[21]": 45,
          "ludics[13]": 29,
          "ludics[7]": 17
        }
      },
      {
        "line": 11,
        "step": 144,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 9
        }
      },
      {
        "line": 10,
        "step": 145,
        "action": "EXECUTE",
        "vars": {
          "ludics[17]": 39,
          "ludics[14]": 33,
          "ludics[12]": 29,
          "ludics[9]": 23,
          "ludics[10]": 25,
          "ludics[15]": 35,
          "ludics[20]": 45,
          "ludics[18]": 41,
          "ludics[19]": 43,
          "ludics[11]": 27,
          "ludics[16]": 37,
          "ludics[13]": 31
        }
      },
      {
        "line": 11,
        "step": 146,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 11
        }
      },
      {
        "line": 10,
        "step": 147,
        "action": "EXECUTE",
        "vars": {
          "ludics[17]": 41,
          "ludics[14]": 35,
          "ludics[12]": 31,
          "ludics[15]": 37,
          "ludics[18]": 43,
          "ludics[19]": 45,
          "ludics[11]": 29,
          "ludics[16]": 39,
          "ludics[13]": 33
        }
      },
      {
        "line": 11,
        "step": 148,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 13
        }
      },
      {
        "line": 10,
        "step": 149,
        "action": "EXECUTE",
        "vars": {
          "ludics[17]": 43,
          "ludics[14]": 37,
          "ludics[15]": 39,
          "ludics[18]": 45,
          "ludics[16]": 41,
          "ludics[13]": 35
        }
      },
      {
        "line": 11,
        "step": 150,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 15
        }
      },
      {
        "line": 10,
        "step": 151,
        "action": "EXECUTE",
        "vars": {
          "ludics[15]": 41,
          "ludics[16]": 43,
          "ludics[17]": 45
        }
      },
      {
        "line": 11,
        "step": 152,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 17
        }
      },
      {
        "line": 10,
        "step": 153,
        "action": "EXECUTE",
        "vars": {
          "ludics": [
            1,
            2,
            3,
            5,
            7,
            11,
            13,
            17,
            19,
            23,
            25,
            29,
            31,
            35,
            37,
            41,
            43
          ]
        }
      },
      {
        "line": 11,
        "step": 154,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 19
        }
      },
      {
        "line": 12,
        "step": 155,
        "action": "EXECUTE",
        "vars": {
          "index": 3
        }
      },
      {
        "line": 7,
        "step": 156,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 5
        }
      },
      {
        "line": 8,
        "step": 157,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 8
        }
      },
      {
        "line": 10,
        "step": 158,
        "action": "EXECUTE",
        "vars": {
          "ludics[14]": 41,
          "ludics[12]": 35,
          "ludics[8]": 23,
          "ludics[9]": 25,
          "ludics[10]": 29,
          "ludics[15]": 43,
          "ludics[11]": 31,
          "ludics[13]": 37
        }
      },
      {
        "line": 11,
        "step": 159,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 12
        }
      },
      {
        "line": 10,
        "step": 160,
        "action": "EXECUTE",
        "vars": {
          "ludics[14]": 43,
          "ludics[12]": 37,
          "ludics[13]": 41
        }
      },
      {
        "line": 11,
        "step": 161,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 16
        }
      },
      {
        "line": 12,
        "step": 162,
        "action": "EXECUTE",
        "vars": {
          "index": 4
        }
      },
      {
        "line": 7,
        "step": 163,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 7
        }
      },
      {
        "line": 8,
        "step": 164,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 11
        }
      },
      {
        "line": 10,
        "step": 165,
        "action": "EXECUTE",
        "vars": {
          "ludics[12]": 41,
          "ludics[11]": 37,
          "ludics[13]": 43
        }
      },
      {
        "line": 11,
        "step": 166,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 17
        }
      },
      {
        "line": 12,
        "step": 167,
        "action": "EXECUTE",
        "vars": {
          "index": 5
        }
      },
      {
        "line": 7,
        "step": 168,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 11
        }
      },
      {
        "line": 8,
        "step": 169,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 16
        }
      },
      {
        "line": 12,
        "step": 170,
        "action": "EXECUTE",
        "vars": {
          "index": 6
        }
      },
      {
        "line": 7,
        "step": 171,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 13
        }
      },
      {
        "line": 8,
        "step": 172,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 19
        }
      },
      {
        "line": 12,
        "step": 173,
        "action": "EXECUTE",
        "vars": {
          "index": 7
        }
      },
      {
        "line": 7,
        "step": 174,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 17
        }
      },
      {
        "line": 8,
        "step": 175,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 24
        }
      },
      {
        "line": 12,
        "step": 176,
        "action": "EXECUTE",
        "vars": {
          "index": 8
        }
      },
      {
        "line": 7,
        "step": 177,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 23
        }
      },
      {
        "line": 8,
        "step": 178,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 31
        }
      },
      {
        "line": 12,
        "step": 179,
        "action": "EXECUTE",
        "vars": {
          "index": 9
        }
      },
      {
        "line": 7,
        "step": 180,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 25
        }
      },
      {
        "line": 8,
        "step": 181,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 34
        }
      },
      {
        "line": 12,
        "step": 182,
        "action": "EXECUTE",
        "vars": {
          "index": 10
        }
      },
      {
        "line": 7,
        "step": 183,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 29
        }
      },
      {
        "line": 8,
        "step": 184,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 39
        }
      },
      {
        "line": 12,
        "step": 185,
        "action": "EXECUTE",
        "vars": {
          "index": 11
        }
      },
      {
        "line": 7,
        "step": 186,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 37
        }
      },
      {
        "line": 8,
        "step": 187,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 48
        }
      },
      {
        "line": 12,
        "step": 188,
        "action": "EXECUTE",
        "vars": {
          "index": 12
        }
      },
      {
        "line": 7,
        "step": 189,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 41
        }
      },
      {
        "line": 8,
        "step": 190,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 53
        }
      },
      {
        "line": 12,
        "step": 191,
        "action": "EXECUTE",
        "vars": {
          "index": 13
        }
      },
      {
        "line": 7,
        "step": 192,
        "action": "EXECUTE",
        "vars": {
          "first_ludic": 43
        }
      },
      {
        "line": 8,
        "step": 193,
        "action": "EXECUTE",
        "vars": {
          "remove_index": 56
        }
      },
      {
        "line": 12,
        "step": 194,
        "action": "EXECUTE",
        "vars": {
          "index": 14
        }
      },
      {
        "line": 13,
        "step": 195,
        "action": "RETURN",
        "vars": {
          "__return__": [
            1,
            2,
            3,
            5,
            7,
            11,
            13,
            17,
            23,
            25,
            29,
            37,
            41,
            43
          ]
        }
      }
    ],
    "id": 1790,
    "task_id": 603,
    "exist_function": [
      "get_ludic"
    ]
  },
  {
    "code": "import re\r\npattern = 'fox'\r\ntext = 'The quick brown fox jumps over the lazy dog.'\r\ndef find_literals(text, pattern):\r\n  match = re.search(pattern, text)\r\n  s = match.start()\r\n  e = match.end()\r\n  return (match.re.pattern, s, e)",
    "entry_point": "find_literals",
    "input": [
      "The quick brown fox jumps over the lazy dog.",
      "fox"
    ],
    "output": "('fox', 16, 19)",
    "traces": [
      {
        "line": 4,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "text": "The quick brown fox jumps over the lazy dog.",
          "pattern": "fox"
        }
      },
      {
        "line": 6,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "s": 16
        }
      },
      {
        "line": 7,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "e": 19
        }
      },
      {
        "line": 8,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": "('fox', 16, 19)"
        }
      }
    ],
    "id": 1800,
    "task_id": 607,
    "exist_function": [
      "find_literals"
    ]
  },
  {
    "code": "import re\r\npattern = 'fox'\r\ntext = 'The quick brown fox jumps over the lazy dog.'\r\ndef find_literals(text, pattern):\r\n  match = re.search(pattern, text)\r\n  s = match.start()\r\n  e = match.end()\r\n  return (match.re.pattern, s, e)",
    "entry_point": "find_literals",
    "input": [
      "Its been a very crazy procedure right",
      "crazy"
    ],
    "output": "('crazy', 16, 21)",
    "traces": [
      {
        "line": 4,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "text": "Its been a very crazy procedure right",
          "pattern": "crazy"
        }
      },
      {
        "line": 6,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "s": 16
        }
      },
      {
        "line": 7,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "e": 21
        }
      },
      {
        "line": 8,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": "('crazy', 16, 21)"
        }
      }
    ],
    "id": 1801,
    "task_id": 607,
    "exist_function": [
      "find_literals"
    ]
  },
  {
    "code": "import re\r\npattern = 'fox'\r\ntext = 'The quick brown fox jumps over the lazy dog.'\r\ndef find_literals(text, pattern):\r\n  match = re.search(pattern, text)\r\n  s = match.start()\r\n  e = match.end()\r\n  return (match.re.pattern, s, e)",
    "entry_point": "find_literals",
    "input": [
      "Hardest choices required strongest will",
      "will"
    ],
    "output": "('will', 35, 39)",
    "traces": [
      {
        "line": 4,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "text": "Hardest choices required strongest will",
          "pattern": "will"
        }
      },
      {
        "line": 6,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "s": 35
        }
      },
      {
        "line": 7,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "e": 39
        }
      },
      {
        "line": 8,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": "('will', 35, 39)"
        }
      }
    ],
    "id": 1802,
    "task_id": 607,
    "exist_function": [
      "find_literals"
    ]
  },
  {
    "code": "def bell_Number(n): \r\n    bell = [[0 for i in range(n+1)] for j in range(n+1)] \r\n    bell[0][0] = 1\r\n    for i in range(1, n+1):\r\n        bell[i][0] = bell[i-1][i-1]\r\n        for j in range(1, i+1): \r\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1] \r\n    return bell[n][0]",
    "entry_point": "bell_Number",
    "input": [
      2
    ],
    "output": 2,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 2
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "bell": [
            [
              0,
              0,
              0
            ],
            [
              0,
              0,
              0
            ],
            [
              0,
              0,
              0
            ]
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "bell[0][0]": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "bell[1][0]": 1
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "bell[1][1]": 2
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "bell[2][0]": 2
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "bell[2][1]": 3
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "bell[2][2]": 5
        }
      },
      {
        "line": 8,
        "step": 13,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 1803,
    "task_id": 608,
    "exist_function": [
      "bell_Number"
    ]
  },
  {
    "code": "def bell_Number(n): \r\n    bell = [[0 for i in range(n+1)] for j in range(n+1)] \r\n    bell[0][0] = 1\r\n    for i in range(1, n+1):\r\n        bell[i][0] = bell[i-1][i-1]\r\n        for j in range(1, i+1): \r\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1] \r\n    return bell[n][0]",
    "entry_point": "bell_Number",
    "input": [
      3
    ],
    "output": 5,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 3
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "bell": [
            [
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0
            ]
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "bell[0][0]": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "bell[1][0]": 1
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "bell[1][1]": 2
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "bell[2][0]": 2
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "bell[2][1]": 3
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "bell[2][2]": 5
        }
      },
      {
        "line": 4,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "bell[3][0]": 5
        }
      },
      {
        "line": 6,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "bell[3][1]": 7
        }
      },
      {
        "line": 6,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "bell[3][2]": 10
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 7,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "bell[3][3]": 15
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "RETURN",
        "vars": {
          "__return__": 5
        }
      }
    ],
    "id": 1804,
    "task_id": 608,
    "exist_function": [
      "bell_Number"
    ]
  },
  {
    "code": "def bell_Number(n): \r\n    bell = [[0 for i in range(n+1)] for j in range(n+1)] \r\n    bell[0][0] = 1\r\n    for i in range(1, n+1):\r\n        bell[i][0] = bell[i-1][i-1]\r\n        for j in range(1, i+1): \r\n            bell[i][j] = bell[i-1][j-1] + bell[i][j-1] \r\n    return bell[n][0]",
    "entry_point": "bell_Number",
    "input": [
      4
    ],
    "output": 15,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 4
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "bell": [
            [
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0
            ],
            [
              0,
              0,
              0,
              0,
              0
            ]
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "bell[0][0]": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "bell[1][0]": 1
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "bell[1][1]": 2
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "bell[2][0]": 2
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "bell[2][1]": 3
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "bell[2][2]": 5
        }
      },
      {
        "line": 4,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "bell[3][0]": 5
        }
      },
      {
        "line": 6,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "bell[3][1]": 7
        }
      },
      {
        "line": 6,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "bell[3][2]": 10
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 7,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "bell[3][3]": 15
        }
      },
      {
        "line": 4,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "bell[4][0]": 15
        }
      },
      {
        "line": 6,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 7,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "bell[4][1]": 20
        }
      },
      {
        "line": 6,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 7,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "bell[4][2]": 27
        }
      },
      {
        "line": 6,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 7,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "bell[4][3]": 37
        }
      },
      {
        "line": 6,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 7,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "bell[4][4]": 52
        }
      },
      {
        "line": 8,
        "step": 31,
        "action": "RETURN",
        "vars": {
          "__return__": 15
        }
      }
    ],
    "id": 1805,
    "task_id": 608,
    "exist_function": [
      "bell_Number"
    ]
  },
  {
    "code": "def move_num(test_str):\r\n  res = ''\r\n  dig = ''\r\n  for ele in test_str:\r\n    if ele.isdigit():\r\n      dig += ele\r\n    else:\r\n      res += ele\r\n  res += dig\r\n  return (res)",
    "entry_point": "move_num",
    "input": [
      "I1love143you55three3000thousand"
    ],
    "output": "Iloveyouthreethousand1143553000",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "test_str": "I1love143you55three3000thousand"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": ""
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "dig": ""
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "ele": "I"
        }
      },
      {
        "line": 8,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "res": "I"
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "ele": "1"
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "dig": "1"
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "ele": "l"
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "res": "Il"
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "ele": "o"
        }
      },
      {
        "line": 8,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "res": "Ilo"
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "ele": "v"
        }
      },
      {
        "line": 8,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "res": "Ilov"
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "ele": "e"
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "res": "Ilove"
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "ele": "1"
        }
      },
      {
        "line": 6,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "dig": "11"
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "ele": "4"
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "dig": "114"
        }
      },
      {
        "line": 4,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "ele": "3"
        }
      },
      {
        "line": 6,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "dig": "1143"
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "ele": "y"
        }
      },
      {
        "line": 8,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "res": "Ilovey"
        }
      },
      {
        "line": 4,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "ele": "o"
        }
      },
      {
        "line": 8,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyo"
        }
      },
      {
        "line": 4,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "ele": "u"
        }
      },
      {
        "line": 8,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyou"
        }
      },
      {
        "line": 4,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "ele": "5"
        }
      },
      {
        "line": 6,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "dig": "11435"
        }
      },
      {
        "line": 6,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "dig": "114355"
        }
      },
      {
        "line": 4,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "ele": "t"
        }
      },
      {
        "line": 8,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyout"
        }
      },
      {
        "line": 4,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "ele": "h"
        }
      },
      {
        "line": 8,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouth"
        }
      },
      {
        "line": 4,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "ele": "r"
        }
      },
      {
        "line": 8,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouthr"
        }
      },
      {
        "line": 4,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "ele": "e"
        }
      },
      {
        "line": 8,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouthre"
        }
      },
      {
        "line": 8,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouthree"
        }
      },
      {
        "line": 4,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "ele": "3"
        }
      },
      {
        "line": 6,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "dig": "1143553"
        }
      },
      {
        "line": 4,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "ele": "0"
        }
      },
      {
        "line": 6,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "dig": "11435530"
        }
      },
      {
        "line": 6,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "dig": "114355300"
        }
      },
      {
        "line": 6,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "dig": "1143553000"
        }
      },
      {
        "line": 4,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "ele": "t"
        }
      },
      {
        "line": 8,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouthreet"
        }
      },
      {
        "line": 4,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "ele": "h"
        }
      },
      {
        "line": 8,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouthreeth"
        }
      },
      {
        "line": 4,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "ele": "o"
        }
      },
      {
        "line": 8,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouthreetho"
        }
      },
      {
        "line": 4,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "ele": "u"
        }
      },
      {
        "line": 8,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouthreethou"
        }
      },
      {
        "line": 4,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "ele": "s"
        }
      },
      {
        "line": 8,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouthreethous"
        }
      },
      {
        "line": 4,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "ele": "a"
        }
      },
      {
        "line": 8,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouthreethousa"
        }
      },
      {
        "line": 4,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "ele": "n"
        }
      },
      {
        "line": 8,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouthreethousan"
        }
      },
      {
        "line": 4,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "ele": "d"
        }
      },
      {
        "line": 8,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouthreethousand"
        }
      },
      {
        "line": 9,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "res": "Iloveyouthreethousand1143553000"
        }
      },
      {
        "line": 10,
        "step": 63,
        "action": "RETURN",
        "vars": {
          "__return__": "Iloveyouthreethousand1143553000"
        }
      }
    ],
    "id": 1836,
    "task_id": 619,
    "exist_function": [
      "move_num"
    ]
  },
  {
    "code": "def move_num(test_str):\r\n  res = ''\r\n  dig = ''\r\n  for ele in test_str:\r\n    if ele.isdigit():\r\n      dig += ele\r\n    else:\r\n      res += ele\r\n  res += dig\r\n  return (res)",
    "entry_point": "move_num",
    "input": [
      "Avengers124Assemble"
    ],
    "output": "AvengersAssemble124",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "test_str": "Avengers124Assemble"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": ""
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "dig": ""
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "ele": "A"
        }
      },
      {
        "line": 8,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "res": "A"
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "ele": "v"
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "res": "Av"
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "ele": "e"
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "res": "Ave"
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "ele": "n"
        }
      },
      {
        "line": 8,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "res": "Aven"
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "ele": "g"
        }
      },
      {
        "line": 8,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "res": "Aveng"
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "ele": "e"
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "res": "Avenge"
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "ele": "r"
        }
      },
      {
        "line": 8,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "res": "Avenger"
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "ele": "s"
        }
      },
      {
        "line": 8,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "res": "Avengers"
        }
      },
      {
        "line": 4,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "ele": "1"
        }
      },
      {
        "line": 6,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "dig": "1"
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "ele": "2"
        }
      },
      {
        "line": 6,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "dig": "12"
        }
      },
      {
        "line": 4,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "ele": "4"
        }
      },
      {
        "line": 6,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "dig": "124"
        }
      },
      {
        "line": 4,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "ele": "A"
        }
      },
      {
        "line": 8,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "res": "AvengersA"
        }
      },
      {
        "line": 4,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "ele": "s"
        }
      },
      {
        "line": 8,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "res": "AvengersAs"
        }
      },
      {
        "line": 8,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "res": "AvengersAss"
        }
      },
      {
        "line": 4,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "ele": "e"
        }
      },
      {
        "line": 8,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "res": "AvengersAsse"
        }
      },
      {
        "line": 4,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "ele": "m"
        }
      },
      {
        "line": 8,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "res": "AvengersAssem"
        }
      },
      {
        "line": 4,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "ele": "b"
        }
      },
      {
        "line": 8,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "res": "AvengersAssemb"
        }
      },
      {
        "line": 4,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "ele": "l"
        }
      },
      {
        "line": 8,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "res": "AvengersAssembl"
        }
      },
      {
        "line": 4,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "ele": "e"
        }
      },
      {
        "line": 8,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "res": "AvengersAssemble"
        }
      },
      {
        "line": 9,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "res": "AvengersAssemble124"
        }
      },
      {
        "line": 10,
        "step": 42,
        "action": "RETURN",
        "vars": {
          "__return__": "AvengersAssemble124"
        }
      }
    ],
    "id": 1837,
    "task_id": 619,
    "exist_function": [
      "move_num"
    ]
  },
  {
    "code": "def move_num(test_str):\r\n  res = ''\r\n  dig = ''\r\n  for ele in test_str:\r\n    if ele.isdigit():\r\n      dig += ele\r\n    else:\r\n      res += ele\r\n  res += dig\r\n  return (res)",
    "entry_point": "move_num",
    "input": [
      "Its11our12path13to14see15things16do17things"
    ],
    "output": "Itsourpathtoseethingsdothings11121314151617",
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "test_str": "Its11our12path13to14see15things16do17things"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": ""
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "dig": ""
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "ele": "I"
        }
      },
      {
        "line": 8,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "res": "I"
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "ele": "t"
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "res": "It"
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "ele": "s"
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "res": "Its"
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "ele": "1"
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "dig": "1"
        }
      },
      {
        "line": 6,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "dig": "11"
        }
      },
      {
        "line": 4,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "ele": "o"
        }
      },
      {
        "line": 8,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "res": "Itso"
        }
      },
      {
        "line": 4,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "ele": "u"
        }
      },
      {
        "line": 8,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsou"
        }
      },
      {
        "line": 4,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "ele": "r"
        }
      },
      {
        "line": 8,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsour"
        }
      },
      {
        "line": 4,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "ele": "1"
        }
      },
      {
        "line": 6,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "dig": "111"
        }
      },
      {
        "line": 4,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "ele": "2"
        }
      },
      {
        "line": 6,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "dig": "1112"
        }
      },
      {
        "line": 4,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "ele": "p"
        }
      },
      {
        "line": 8,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourp"
        }
      },
      {
        "line": 4,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "ele": "a"
        }
      },
      {
        "line": 8,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpa"
        }
      },
      {
        "line": 4,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "ele": "t"
        }
      },
      {
        "line": 8,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpat"
        }
      },
      {
        "line": 4,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "ele": "h"
        }
      },
      {
        "line": 8,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpath"
        }
      },
      {
        "line": 4,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "ele": "1"
        }
      },
      {
        "line": 6,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "dig": "11121"
        }
      },
      {
        "line": 4,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "ele": "3"
        }
      },
      {
        "line": 6,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "dig": "111213"
        }
      },
      {
        "line": 4,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "ele": "t"
        }
      },
      {
        "line": 8,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpatht"
        }
      },
      {
        "line": 4,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "ele": "o"
        }
      },
      {
        "line": 8,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathto"
        }
      },
      {
        "line": 4,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "ele": "1"
        }
      },
      {
        "line": 6,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "dig": "1112131"
        }
      },
      {
        "line": 4,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "ele": "4"
        }
      },
      {
        "line": 6,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "dig": "11121314"
        }
      },
      {
        "line": 4,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "ele": "s"
        }
      },
      {
        "line": 8,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtos"
        }
      },
      {
        "line": 4,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "ele": "e"
        }
      },
      {
        "line": 8,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtose"
        }
      },
      {
        "line": 8,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtosee"
        }
      },
      {
        "line": 4,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "ele": "1"
        }
      },
      {
        "line": 6,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "dig": "111213141"
        }
      },
      {
        "line": 4,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "ele": "5"
        }
      },
      {
        "line": 6,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "dig": "1112131415"
        }
      },
      {
        "line": 4,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "ele": "t"
        }
      },
      {
        "line": 8,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseet"
        }
      },
      {
        "line": 4,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "ele": "h"
        }
      },
      {
        "line": 8,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseeth"
        }
      },
      {
        "line": 4,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "ele": "i"
        }
      },
      {
        "line": 8,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseethi"
        }
      },
      {
        "line": 4,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "ele": "n"
        }
      },
      {
        "line": 8,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseethin"
        }
      },
      {
        "line": 4,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "ele": "g"
        }
      },
      {
        "line": 8,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseething"
        }
      },
      {
        "line": 4,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "ele": "s"
        }
      },
      {
        "line": 8,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseethings"
        }
      },
      {
        "line": 4,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "ele": "1"
        }
      },
      {
        "line": 6,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "dig": "11121314151"
        }
      },
      {
        "line": 4,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "ele": "6"
        }
      },
      {
        "line": 6,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "dig": "111213141516"
        }
      },
      {
        "line": 4,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "ele": "d"
        }
      },
      {
        "line": 8,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseethingsd"
        }
      },
      {
        "line": 4,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "ele": "o"
        }
      },
      {
        "line": 8,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseethingsdo"
        }
      },
      {
        "line": 4,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "ele": "1"
        }
      },
      {
        "line": 6,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "dig": "1112131415161"
        }
      },
      {
        "line": 4,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "ele": "7"
        }
      },
      {
        "line": 6,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "dig": "11121314151617"
        }
      },
      {
        "line": 4,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "ele": "t"
        }
      },
      {
        "line": 8,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseethingsdot"
        }
      },
      {
        "line": 4,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "ele": "h"
        }
      },
      {
        "line": 8,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseethingsdoth"
        }
      },
      {
        "line": 4,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "ele": "i"
        }
      },
      {
        "line": 8,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseethingsdothi"
        }
      },
      {
        "line": 4,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "ele": "n"
        }
      },
      {
        "line": 8,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseethingsdothin"
        }
      },
      {
        "line": 4,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "ele": "g"
        }
      },
      {
        "line": 8,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseethingsdothing"
        }
      },
      {
        "line": 4,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "ele": "s"
        }
      },
      {
        "line": 8,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseethingsdothings"
        }
      },
      {
        "line": 9,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "res": "Itsourpathtoseethingsdothings11121314151617"
        }
      },
      {
        "line": 10,
        "step": 89,
        "action": "RETURN",
        "vars": {
          "__return__": "Itsourpathtoseethingsdothings11121314151617"
        }
      }
    ],
    "id": 1838,
    "task_id": 619,
    "exist_function": [
      "move_num"
    ]
  },
  {
    "code": "def largest_subset(a, n):\r\n\tdp = [0 for i in range(n)]\r\n\tdp[n - 1] = 1; \r\n\tfor i in range(n - 2, -1, -1):\r\n\t\tmxm = 0;\r\n\t\tfor j in range(i + 1, n):\r\n\t\t\tif a[j] % a[i] == 0 or a[i] % a[j] == 0:\r\n\t\t\t\tmxm = max(mxm, dp[j])\r\n\t\tdp[i] = 1 + mxm\r\n\treturn max(dp)",
    "entry_point": "largest_subset",
    "input": [
      [
        1,
        3,
        6,
        13,
        17,
        18
      ],
      6
    ],
    "output": 4,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "a": [
            1,
            3,
            6,
            13,
            17,
            18
          ],
          "n": 6
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "dp": [
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "dp[5]": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "mxm": 0
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 9,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "dp[4]": 1
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 6,
        "step": "9~10",
        "action": "LOOP",
        "vars": {
          "j": "4→5"
        }
      },
      {
        "line": 9,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "dp[3]": 1
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 6,
        "step": "13~15",
        "action": "LOOP",
        "vars": {
          "j": "3→5"
        }
      },
      {
        "line": 8,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "mxm": 1
        }
      },
      {
        "line": 9,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "dp[2]": 2
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "mxm": 0
        }
      },
      {
        "line": 6,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "mxm": 2
        }
      },
      {
        "line": 6,
        "step": "22~24",
        "action": "LOOP",
        "vars": {
          "j": "3→5"
        }
      },
      {
        "line": 9,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "dp[1]": 3
        }
      },
      {
        "line": 4,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 5,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "mxm": 0
        }
      },
      {
        "line": 6,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "mxm": 3
        }
      },
      {
        "line": 6,
        "step": "30~33",
        "action": "LOOP",
        "vars": {
          "j": "2→5"
        }
      },
      {
        "line": 9,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "dp[0]": 4
        }
      },
      {
        "line": 10,
        "step": 35,
        "action": "RETURN",
        "vars": {
          "__return__": 4
        }
      }
    ],
    "id": 1839,
    "task_id": 620,
    "exist_function": [
      "largest_subset"
    ]
  },
  {
    "code": "def largest_subset(a, n):\r\n\tdp = [0 for i in range(n)]\r\n\tdp[n - 1] = 1; \r\n\tfor i in range(n - 2, -1, -1):\r\n\t\tmxm = 0;\r\n\t\tfor j in range(i + 1, n):\r\n\t\t\tif a[j] % a[i] == 0 or a[i] % a[j] == 0:\r\n\t\t\t\tmxm = max(mxm, dp[j])\r\n\t\tdp[i] = 1 + mxm\r\n\treturn max(dp)",
    "entry_point": "largest_subset",
    "input": [
      [
        10,
        5,
        3,
        15,
        20
      ],
      5
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "a": [
            10,
            5,
            3,
            15,
            20
          ],
          "n": 5
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "dp": [
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "dp[4]": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "mxm": 0
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 9,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "dp[3]": 1
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 8,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "mxm": 1
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 9,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "dp[2]": 2
        }
      },
      {
        "line": 4,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "mxm": 0
        }
      },
      {
        "line": 6,
        "step": "15~16",
        "action": "LOOP",
        "vars": {
          "j": "2→3"
        }
      },
      {
        "line": 8,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "mxm": 1
        }
      },
      {
        "line": 6,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 9,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "dp[1]": 2
        }
      },
      {
        "line": 4,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 5,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "mxm": 0
        }
      },
      {
        "line": 6,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "mxm": 2
        }
      },
      {
        "line": 6,
        "step": "24~26",
        "action": "LOOP",
        "vars": {
          "j": "2→4"
        }
      },
      {
        "line": 9,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "dp[0]": 3
        }
      },
      {
        "line": 10,
        "step": 28,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 1840,
    "task_id": 620,
    "exist_function": [
      "largest_subset"
    ]
  },
  {
    "code": "def largest_subset(a, n):\r\n\tdp = [0 for i in range(n)]\r\n\tdp[n - 1] = 1; \r\n\tfor i in range(n - 2, -1, -1):\r\n\t\tmxm = 0;\r\n\t\tfor j in range(i + 1, n):\r\n\t\t\tif a[j] % a[i] == 0 or a[i] % a[j] == 0:\r\n\t\t\t\tmxm = max(mxm, dp[j])\r\n\t\tdp[i] = 1 + mxm\r\n\treturn max(dp)",
    "entry_point": "largest_subset",
    "input": [
      [
        18,
        1,
        3,
        6,
        13,
        17
      ],
      6
    ],
    "output": 4,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "a": [
            18,
            1,
            3,
            6,
            13,
            17
          ],
          "n": 6
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "dp": [
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "dp[5]": 1
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "mxm": 0
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 9,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "dp[4]": 1
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 6,
        "step": "9~10",
        "action": "LOOP",
        "vars": {
          "j": "4→5"
        }
      },
      {
        "line": 9,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "dp[3]": 1
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 8,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "mxm": 1
        }
      },
      {
        "line": 6,
        "step": "15~16",
        "action": "LOOP",
        "vars": {
          "j": "4→5"
        }
      },
      {
        "line": 9,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "dp[2]": 2
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "mxm": 0
        }
      },
      {
        "line": 6,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "mxm": 2
        }
      },
      {
        "line": 6,
        "step": "22~24",
        "action": "LOOP",
        "vars": {
          "j": "3→5"
        }
      },
      {
        "line": 9,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "dp[1]": 3
        }
      },
      {
        "line": 4,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 5,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "mxm": 0
        }
      },
      {
        "line": 6,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "mxm": 3
        }
      },
      {
        "line": 6,
        "step": "30~33",
        "action": "LOOP",
        "vars": {
          "j": "2→5"
        }
      },
      {
        "line": 9,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "dp[0]": 4
        }
      },
      {
        "line": 10,
        "step": 35,
        "action": "RETURN",
        "vars": {
          "__return__": 4
        }
      }
    ],
    "id": 1841,
    "task_id": 620,
    "exist_function": [
      "largest_subset"
    ]
  },
  {
    "code": "def get_median(arr1, arr2, n):\r\n  i = 0\r\n  j = 0\r\n  m1 = -1\r\n  m2 = -1\r\n  count = 0\r\n  while count < n + 1:\r\n    count += 1\r\n    if i == n:\r\n      m1 = m2\r\n      m2 = arr2[0]\r\n      break\r\n    elif j == n:\r\n      m1 = m2\r\n      m2 = arr1[0]\r\n      break\r\n    if arr1[i] <= arr2[j]:\r\n      m1 = m2\r\n      m2 = arr1[i]\r\n      i += 1\r\n    else:\r\n      m1 = m2\r\n      m2 = arr2[j]\r\n      j += 1\r\n  return (m1 + m2)/2",
    "entry_point": "get_median",
    "input": [
      [
        1,
        12,
        15,
        26,
        38
      ],
      [
        2,
        13,
        17,
        30,
        45
      ],
      5
    ],
    "output": 16.0,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr1": [
            1,
            12,
            15,
            26,
            38
          ],
          "arr2": [
            2,
            13,
            17,
            30,
            45
          ],
          "n": 5
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "m1": -1
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "m2": -1
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 19,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "m2": 1
        }
      },
      {
        "line": 20,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 8,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 22,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "m1": 1
        }
      },
      {
        "line": 23,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "m2": 2
        }
      },
      {
        "line": 24,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 8,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 18,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "m1": 2
        }
      },
      {
        "line": 19,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "m2": 12
        }
      },
      {
        "line": 20,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 8,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "count": 4
        }
      },
      {
        "line": 22,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "m1": 12
        }
      },
      {
        "line": 23,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "m2": 13
        }
      },
      {
        "line": 24,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 8,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "count": 5
        }
      },
      {
        "line": 18,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "m1": 13
        }
      },
      {
        "line": 19,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "m2": 15
        }
      },
      {
        "line": 20,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 8,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "count": 6
        }
      },
      {
        "line": 22,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "m1": 15
        }
      },
      {
        "line": 23,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "m2": 17
        }
      },
      {
        "line": 24,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 25,
        "step": 30,
        "action": "RETURN",
        "vars": {
          "__return__": 16.0
        }
      }
    ],
    "id": 1845,
    "task_id": 622,
    "exist_function": [
      "get_median"
    ]
  }
]