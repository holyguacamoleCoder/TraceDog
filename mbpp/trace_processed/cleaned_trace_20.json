[
  {
    "code": "from sys import maxsize \r\ndef max_sub_array_sum(a,size): \r\n\tmax_so_far = -maxsize - 1\r\n\tmax_ending_here = 0\r\n\tstart = 0\r\n\tend = 0\r\n\ts = 0\r\n\tfor i in range(0,size): \r\n\t\tmax_ending_here += a[i] \r\n\t\tif max_so_far < max_ending_here: \r\n\t\t\tmax_so_far = max_ending_here \r\n\t\t\tstart = s \r\n\t\t\tend = i \r\n\t\tif max_ending_here < 0: \r\n\t\t\tmax_ending_here = 0\r\n\t\t\ts = i+1\r\n\treturn (end - start + 1)",
    "entry_point": "max_sub_array_sum",
    "input": [
      [
        1,
        -2,
        1,
        1,
        -2,
        1
      ],
      6
    ],
    "output": 2,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "a": [
            1,
            -2,
            1,
            1,
            -2,
            1
          ],
          "size": 6
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "max_so_far": -9223372036854775808
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 0
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "start": 0
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "end": 0
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "s": 0
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 1
        }
      },
      {
        "line": 11,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "max_so_far": 1
        }
      },
      {
        "line": 8,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 9,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": -1
        }
      },
      {
        "line": 15,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 0
        }
      },
      {
        "line": 16,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "s": 2
        }
      },
      {
        "line": 8,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 9,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 1
        }
      },
      {
        "line": 8,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 9,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 2
        }
      },
      {
        "line": 11,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "max_so_far": 2
        }
      },
      {
        "line": 12,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "start": 2
        }
      },
      {
        "line": 13,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "end": 3
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 9,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 0
        }
      },
      {
        "line": 8,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 9,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 1
        }
      },
      {
        "line": 17,
        "step": 25,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 2488,
    "task_id": 836,
    "exist_function": [
      "max_sub_array_sum"
    ]
  },
  {
    "code": "from sys import maxsize \r\ndef max_sub_array_sum(a,size): \r\n\tmax_so_far = -maxsize - 1\r\n\tmax_ending_here = 0\r\n\tstart = 0\r\n\tend = 0\r\n\ts = 0\r\n\tfor i in range(0,size): \r\n\t\tmax_ending_here += a[i] \r\n\t\tif max_so_far < max_ending_here: \r\n\t\t\tmax_so_far = max_ending_here \r\n\t\t\tstart = s \r\n\t\t\tend = i \r\n\t\tif max_ending_here < 0: \r\n\t\t\tmax_ending_here = 0\r\n\t\t\ts = i+1\r\n\treturn (end - start + 1)",
    "entry_point": "max_sub_array_sum",
    "input": [
      [
        -1,
        -2,
        3,
        4,
        5
      ],
      5
    ],
    "output": 3,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "a": [
            -1,
            -2,
            3,
            4,
            5
          ],
          "size": 5
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "max_so_far": -9223372036854775808
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 0
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "start": 0
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "end": 0
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "s": 0
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 9,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": -1
        }
      },
      {
        "line": 11,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "max_so_far": -1
        }
      },
      {
        "line": 15,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 0
        }
      },
      {
        "line": 16,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "s": 1
        }
      },
      {
        "line": 8,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 9,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": -2
        }
      },
      {
        "line": 15,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 0
        }
      },
      {
        "line": 16,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "s": 2
        }
      },
      {
        "line": 8,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 9,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 3
        }
      },
      {
        "line": 11,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "max_so_far": 3
        }
      },
      {
        "line": 12,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "start": 2
        }
      },
      {
        "line": 13,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "end": 2
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 9,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 7
        }
      },
      {
        "line": 11,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "max_so_far": 7
        }
      },
      {
        "line": 13,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "end": 3
        }
      },
      {
        "line": 8,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 9,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "max_ending_here": 12
        }
      },
      {
        "line": 11,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "max_so_far": 12
        }
      },
      {
        "line": 13,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "end": 4
        }
      },
      {
        "line": 17,
        "step": 29,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 2489,
    "task_id": 836,
    "exist_function": [
      "max_sub_array_sum"
    ]
  },
  {
    "code": "def cube_Sum(n): \r\n    sum = 0   \r\n    for i in range(0,n) : \r\n        sum += (2*i+1)*(2*i+1)*(2*i+1) \r\n    return sum",
    "entry_point": "cube_Sum",
    "input": [
      2
    ],
    "output": 28,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 2
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sum": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "sum": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "sum": 28
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": 28
        }
      }
    ],
    "id": 2490,
    "task_id": 837,
    "exist_function": [
      "cube_Sum"
    ]
  },
  {
    "code": "def cube_Sum(n): \r\n    sum = 0   \r\n    for i in range(0,n) : \r\n        sum += (2*i+1)*(2*i+1)*(2*i+1) \r\n    return sum",
    "entry_point": "cube_Sum",
    "input": [
      3
    ],
    "output": 153,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 3
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sum": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "sum": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "sum": 28
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "sum": 153
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": 153
        }
      }
    ],
    "id": 2491,
    "task_id": 837,
    "exist_function": [
      "cube_Sum"
    ]
  },
  {
    "code": "def cube_Sum(n): \r\n    sum = 0   \r\n    for i in range(0,n) : \r\n        sum += (2*i+1)*(2*i+1)*(2*i+1) \r\n    return sum",
    "entry_point": "cube_Sum",
    "input": [
      4
    ],
    "output": 496,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 4
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "sum": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "sum": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "sum": 28
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "sum": 153
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "sum": 496
        }
      },
      {
        "line": 5,
        "step": 11,
        "action": "RETURN",
        "vars": {
          "__return__": 496
        }
      }
    ],
    "id": 2492,
    "task_id": 837,
    "exist_function": [
      "cube_Sum"
    ]
  },
  {
    "code": "def min_Swaps(s1,s2) :  \r\n    c0 = 0; c1 = 0;  \r\n    for i in range(len(s1)) :  \r\n        if (s1[i] == '0' and s2[i] == '1') : \r\n            c0 += 1;    \r\n        elif (s1[i] == '1' and s2[i] == '0') : \r\n            c1 += 1;  \r\n    result = c0 // 2 + c1 // 2;  \r\n    if (c0 % 2 == 0 and c1 % 2 == 0) : \r\n        return result;  \r\n    elif ((c0 + c1) % 2 == 0) : \r\n        return result + 2;  \r\n    else : \r\n        return -1;",
    "entry_point": "min_Swaps",
    "input": [
      "0011",
      "1111"
    ],
    "output": 1,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "s1": "0011",
          "s2": "1111"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "c1": 0,
          "c0": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "c0": 1
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "c0": 2
        }
      },
      {
        "line": 3,
        "step": "7~8",
        "action": "LOOP",
        "vars": {
          "i": "2→3"
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "result": 1
        }
      },
      {
        "line": 10,
        "step": 10,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 2493,
    "task_id": 838,
    "exist_function": [
      "min_Swaps"
    ]
  },
  {
    "code": "def min_Swaps(s1,s2) :  \r\n    c0 = 0; c1 = 0;  \r\n    for i in range(len(s1)) :  \r\n        if (s1[i] == '0' and s2[i] == '1') : \r\n            c0 += 1;    \r\n        elif (s1[i] == '1' and s2[i] == '0') : \r\n            c1 += 1;  \r\n    result = c0 // 2 + c1 // 2;  \r\n    if (c0 % 2 == 0 and c1 % 2 == 0) : \r\n        return result;  \r\n    elif ((c0 + c1) % 2 == 0) : \r\n        return result + 2;  \r\n    else : \r\n        return -1;",
    "entry_point": "min_Swaps",
    "input": [
      "00011",
      "01001"
    ],
    "output": 2,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "s1": "00011",
          "s2": "01001"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "c1": 0,
          "c0": 0
        }
      },
      {
        "line": 3,
        "step": "3~4",
        "action": "LOOP",
        "vars": {
          "i": "0→1"
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "c0": 1
        }
      },
      {
        "line": 3,
        "step": "6~7",
        "action": "LOOP",
        "vars": {
          "i": "2→3"
        }
      },
      {
        "line": 7,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "c1": 1
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 8,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "result": 0
        }
      },
      {
        "line": 12,
        "step": 11,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 2494,
    "task_id": 838,
    "exist_function": [
      "min_Swaps"
    ]
  },
  {
    "code": "def sort_tuple(tup): \r\n\tn = len(tup) \r\n\tfor i in range(n): \r\n\t\tfor j in range(n-i-1): \r\n\t\t\tif tup[j][0] > tup[j + 1][0]: \r\n\t\t\t\ttup[j], tup[j + 1] = tup[j + 1], tup[j] \r\n\treturn tup",
    "entry_point": "sort_tuple",
    "input": [
      [
        "('Abhishek', 29)",
        "('Amana', 28)",
        "('B', 'C')",
        "('Nikhil', 21)",
        "('Zenat', 30)"
      ]
    ],
    "output": [
      "('Abhishek', 29)",
      "('Amana', 28)",
      "('B', 'C')",
      "('Nikhil', 21)",
      "('Zenat', 30)"
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "tup": [
            "('Amana', 28)",
            "('Zenat', 30)",
            "('Abhishek', 29)",
            "('Nikhil', 21)",
            "('B', 'C')"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "n": 5
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": "4~5",
        "action": "LOOP",
        "vars": {
          "j": "0→1"
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "tup[1][0]": "Abhishek",
          "tup[1][1]": 29,
          "tup[2][1]": 30,
          "tup[2][0]": "Zenat"
        }
      },
      {
        "line": 4,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "tup[3][1]": 30,
          "tup[2][1]": 21,
          "tup[2][0]": "Nikhil",
          "tup[3][0]": "Zenat"
        }
      },
      {
        "line": 4,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "tup[4][1]": 30,
          "tup[4][0]": "Zenat",
          "tup[3][1]": "C",
          "tup[3][0]": "B"
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "tup[1][0]": "Amana",
          "tup[1][1]": 28,
          "tup[0][1]": 29,
          "tup[0][0]": "Abhishek"
        }
      },
      {
        "line": 4,
        "step": "14~15",
        "action": "LOOP",
        "vars": {
          "j": "1→2"
        }
      },
      {
        "line": 6,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "tup[3][1]": 21,
          "tup[2][1]": "C",
          "tup[2][0]": "B",
          "tup[3][0]": "Nikhil"
        }
      },
      {
        "line": 3,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": "18~19",
        "action": "LOOP",
        "vars": {
          "j": "0→1"
        }
      },
      {
        "line": 3,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 4,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 3,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 7,
        "step": 23,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "('Abhishek', 29)",
            "('Amana', 28)",
            "('B', 'C')",
            "('Nikhil', 21)",
            "('Zenat', 30)"
          ]
        }
      }
    ],
    "id": 2496,
    "task_id": 839,
    "exist_function": [
      "sort_tuple"
    ]
  },
  {
    "code": "def sort_tuple(tup): \r\n\tn = len(tup) \r\n\tfor i in range(n): \r\n\t\tfor j in range(n-i-1): \r\n\t\t\tif tup[j][0] > tup[j + 1][0]: \r\n\t\t\t\ttup[j], tup[j + 1] = tup[j + 1], tup[j] \r\n\treturn tup",
    "entry_point": "sort_tuple",
    "input": [
      [
        "('aa', 30)",
        "('aaaa', 28)",
        "('bab', 29)",
        "('bb', 21)",
        "('csa', 'C')"
      ]
    ],
    "output": [
      "('aa', 30)",
      "('aaaa', 28)",
      "('bab', 29)",
      "('bb', 21)",
      "('csa', 'C')"
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "tup": [
            "('aaaa', 28)",
            "('aa', 30)",
            "('bab', 29)",
            "('bb', 21)",
            "('csa', 'C')"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "n": 5
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "tup[1][0]": "aaaa",
          "tup[1][1]": 28,
          "tup[0][1]": 30,
          "tup[0][0]": "aa"
        }
      },
      {
        "line": 4,
        "step": "6~8",
        "action": "LOOP",
        "vars": {
          "j": "1→3"
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": "10~12",
        "action": "LOOP",
        "vars": {
          "j": "0→2"
        }
      },
      {
        "line": 3,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": "14~15",
        "action": "LOOP",
        "vars": {
          "j": "0→1"
        }
      },
      {
        "line": 3,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 4,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 3,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 7,
        "step": 19,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "('aa', 30)",
            "('aaaa', 28)",
            "('bab', 29)",
            "('bb', 21)",
            "('csa', 'C')"
          ]
        }
      }
    ],
    "id": 2497,
    "task_id": 839,
    "exist_function": [
      "sort_tuple"
    ]
  },
  {
    "code": "def sort_tuple(tup): \r\n\tn = len(tup) \r\n\tfor i in range(n): \r\n\t\tfor j in range(n-i-1): \r\n\t\t\tif tup[j][0] > tup[j + 1][0]: \r\n\t\t\t\ttup[j], tup[j + 1] = tup[j + 1], tup[j] \r\n\treturn tup",
    "entry_point": "sort_tuple",
    "input": [
      [
        "('Ayesha', 30)",
        "('G', 'H')",
        "('Sai', 21)",
        "('Sarala', 28)",
        "('Suman', 29)"
      ]
    ],
    "output": [
      "('Ayesha', 30)",
      "('G', 'H')",
      "('Sai', 21)",
      "('Sarala', 28)",
      "('Suman', 29)"
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "tup": [
            "('Sarala', 28)",
            "('Ayesha', 30)",
            "('Suman', 29)",
            "('Sai', 21)",
            "('G', 'H')"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "n": 5
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "tup[1][0]": "Sarala",
          "tup[1][1]": 28,
          "tup[0][1]": 30,
          "tup[0][0]": "Ayesha"
        }
      },
      {
        "line": 4,
        "step": "6~7",
        "action": "LOOP",
        "vars": {
          "j": "1→2"
        }
      },
      {
        "line": 6,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "tup[3][1]": 29,
          "tup[2][1]": 21,
          "tup[2][0]": "Sai",
          "tup[3][0]": "Suman"
        }
      },
      {
        "line": 4,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "tup[4][1]": 29,
          "tup[4][0]": "Suman",
          "tup[3][1]": "H",
          "tup[3][0]": "G"
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": "12~13",
        "action": "LOOP",
        "vars": {
          "j": "0→1"
        }
      },
      {
        "line": 6,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "tup[1][0]": "Sai",
          "tup[1][1]": 21,
          "tup[2][1]": 28,
          "tup[2][0]": "Sarala"
        }
      },
      {
        "line": 4,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "tup[3][1]": 28,
          "tup[2][1]": "H",
          "tup[2][0]": "G",
          "tup[3][0]": "Sarala"
        }
      },
      {
        "line": 3,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": "18~19",
        "action": "LOOP",
        "vars": {
          "j": "0→1"
        }
      },
      {
        "line": 6,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "tup[1][0]": "G",
          "tup[1][1]": "H",
          "tup[2][1]": 21,
          "tup[2][0]": "Sai"
        }
      },
      {
        "line": 3,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 3,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 7,
        "step": 24,
        "action": "RETURN",
        "vars": {
          "__return__": [
            "('Ayesha', 30)",
            "('G', 'H')",
            "('Sai', 21)",
            "('Sarala', 28)",
            "('Suman', 29)"
          ]
        }
      }
    ],
    "id": 2498,
    "task_id": 839,
    "exist_function": [
      "sort_tuple"
    ]
  },
  {
    "code": "def len_log(list1):\r\n    max=len(list1[0])\r\n    for i in list1:\r\n        if len(i)>max:\r\n            max=len(i)\r\n    return max",
    "entry_point": "len_log",
    "input": [
      [
        "python",
        "PHP",
        "bigdata"
      ]
    ],
    "output": 7,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list1": [
            "python",
            "PHP",
            "bigdata"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "max": 6
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": "python"
        }
      },
      {
        "line": 3,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": "PHP"
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": "bigdata"
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "max": 7
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": 7
        }
      }
    ],
    "id": 267,
    "task_id": 90,
    "exist_function": [
      "len_log"
    ]
  },
  {
    "code": "def len_log(list1):\r\n    max=len(list1[0])\r\n    for i in list1:\r\n        if len(i)>max:\r\n            max=len(i)\r\n    return max",
    "entry_point": "len_log",
    "input": [
      [
        "a",
        "ab",
        "abc"
      ]
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list1": [
            "a",
            "ab",
            "abc"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "max": 1
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": "a"
        }
      },
      {
        "line": 3,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": "ab"
        }
      },
      {
        "line": 5,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "max": 2
        }
      },
      {
        "line": 3,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": "abc"
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "max": 3
        }
      },
      {
        "line": 6,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 268,
    "task_id": 90,
    "exist_function": [
      "len_log"
    ]
  },
  {
    "code": "def len_log(list1):\r\n    max=len(list1[0])\r\n    for i in list1:\r\n        if len(i)>max:\r\n            max=len(i)\r\n    return max",
    "entry_point": "len_log",
    "input": [
      [
        "small",
        "big",
        "tall"
      ]
    ],
    "output": 5,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list1": [
            "small",
            "big",
            "tall"
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "max": 5
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": "small"
        }
      },
      {
        "line": 3,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": "big"
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": "tall"
        }
      },
      {
        "line": 6,
        "step": 6,
        "action": "RETURN",
        "vars": {
          "__return__": 5
        }
      }
    ],
    "id": 269,
    "task_id": 90,
    "exist_function": [
      "len_log"
    ]
  },
  {
    "code": "def is_undulating(n): \r\n\tif (len(n) <= 2): \r\n\t\treturn False\r\n\tfor i in range(2, len(n)): \r\n\t\tif (n[i - 2] != n[i]): \r\n\t\t\treturn False\r\n\treturn True",
    "entry_point": "is_undulating",
    "input": [
      "1212121"
    ],
    "output": true,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": "1212121"
        }
      },
      {
        "line": 4,
        "step": "2~6",
        "action": "LOOP",
        "vars": {
          "i": "2→6"
        }
      },
      {
        "line": 7,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": true
        }
      }
    ],
    "id": 273,
    "task_id": 92,
    "exist_function": [
      "is_undulating"
    ]
  },
  {
    "code": "def power(a,b):\r\n\tif b==0:\r\n\t\treturn 1\r\n\telif a==0:\r\n\t\treturn 0\r\n\telif b==1:\r\n\t\treturn a\r\n\telse:\r\n\t\treturn a*power(a,b-1)",
    "entry_point": "power",
    "input": [
      3,
      4
    ],
    "output": 81,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "a": 3,
          "b": 1
        }
      },
      {
        "line": 7,
        "step": 2,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      },
      {
        "line": 7,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "b": 1
        }
      },
      {
        "line": 9,
        "step": 3,
        "action": "RETURN",
        "vars": {
          "__return__": 9
        }
      },
      {
        "line": 7,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "b": 1
        }
      },
      {
        "line": 9,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 27
        }
      },
      {
        "line": 7,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "b": 1
        }
      },
      {
        "line": 9,
        "step": 5,
        "action": "RETURN",
        "vars": {
          "__return__": 81
        }
      }
    ],
    "id": 276,
    "task_id": 93,
    "exist_function": [
      "power"
    ]
  },
  {
    "code": "def power(a,b):\r\n\tif b==0:\r\n\t\treturn 1\r\n\telif a==0:\r\n\t\treturn 0\r\n\telif b==1:\r\n\t\treturn a\r\n\telse:\r\n\t\treturn a*power(a,b-1)",
    "entry_point": "power",
    "input": [
      2,
      3
    ],
    "output": 8,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "a": 2,
          "b": 1
        }
      },
      {
        "line": 7,
        "step": 2,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      },
      {
        "line": 7,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "b": 1
        }
      },
      {
        "line": 9,
        "step": 3,
        "action": "RETURN",
        "vars": {
          "__return__": 4
        }
      },
      {
        "line": 7,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "b": 1
        }
      },
      {
        "line": 9,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 8
        }
      }
    ],
    "id": 277,
    "task_id": 93,
    "exist_function": [
      "power"
    ]
  },
  {
    "code": "def power(a,b):\r\n\tif b==0:\r\n\t\treturn 1\r\n\telif a==0:\r\n\t\treturn 0\r\n\telif b==1:\r\n\t\treturn a\r\n\telse:\r\n\t\treturn a*power(a,b-1)",
    "entry_point": "power",
    "input": [
      5,
      5
    ],
    "output": 3125,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "a": 5,
          "b": 1
        }
      },
      {
        "line": 7,
        "step": 2,
        "action": "RETURN",
        "vars": {
          "__return__": 5
        }
      },
      {
        "line": 7,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "b": 1
        }
      },
      {
        "line": 9,
        "step": 3,
        "action": "RETURN",
        "vars": {
          "__return__": 25
        }
      },
      {
        "line": 7,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "b": 1
        }
      },
      {
        "line": 9,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 125
        }
      },
      {
        "line": 7,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "b": 1
        }
      },
      {
        "line": 9,
        "step": 5,
        "action": "RETURN",
        "vars": {
          "__return__": 625
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "b": 1
        }
      },
      {
        "line": 9,
        "step": 6,
        "action": "RETURN",
        "vars": {
          "__return__": 3125
        }
      }
    ],
    "id": 278,
    "task_id": 93,
    "exist_function": [
      "power"
    ]
  },
  {
    "code": "def divisor(n):\r\n  for i in range(n):\r\n    x = len([i for i in range(1,n+1) if not n % i])\r\n  return x",
    "entry_point": "divisor",
    "input": [
      15
    ],
    "output": 4,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 15
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "x": 4
        }
      },
      {
        "line": 2,
        "step": "4~17",
        "action": "LOOP",
        "vars": {
          "i": "1→14"
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "RETURN",
        "vars": {
          "__return__": 4
        }
      }
    ],
    "id": 285,
    "task_id": 96,
    "exist_function": [
      "divisor"
    ]
  },
  {
    "code": "def divisor(n):\r\n  for i in range(n):\r\n    x = len([i for i in range(1,n+1) if not n % i])\r\n  return x",
    "entry_point": "divisor",
    "input": [
      12
    ],
    "output": 6,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 12
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "x": 6
        }
      },
      {
        "line": 2,
        "step": "4~14",
        "action": "LOOP",
        "vars": {
          "i": "1→11"
        }
      },
      {
        "line": 4,
        "step": 15,
        "action": "RETURN",
        "vars": {
          "__return__": 6
        }
      }
    ],
    "id": 286,
    "task_id": 96,
    "exist_function": [
      "divisor"
    ]
  },
  {
    "code": "def divisor(n):\r\n  for i in range(n):\r\n    x = len([i for i in range(1,n+1) if not n % i])\r\n  return x",
    "entry_point": "divisor",
    "input": [
      9
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 9
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "x": 3
        }
      },
      {
        "line": 2,
        "step": "4~11",
        "action": "LOOP",
        "vars": {
          "i": "1→8"
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 287,
    "task_id": 96,
    "exist_function": [
      "divisor"
    ]
  },
  {
    "code": "def frequency_lists(list1):\r\n    list1 = [item for sublist in list1 for item in sublist]\r\n    dic_data = {}\r\n    for num in list1:\r\n        if num in dic_data.keys():\r\n            dic_data[num] += 1\r\n        else:\r\n            key = num\r\n            value = 1\r\n            dic_data[key] = value\r\n    return dic_data",
    "entry_point": "frequency_lists",
    "input": [
      [
        [
          1,
          2,
          3,
          2
        ],
        [
          4,
          5,
          6,
          2
        ],
        [
          7,
          8,
          9,
          5
        ]
      ]
    ],
    "output": {
      "1": 1,
      "2": 3,
      "3": 1,
      "4": 1,
      "5": 2,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 1
    },
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list1": [
            [
              1,
              2,
              3,
              2
            ],
            [
              4,
              5,
              6,
              2
            ],
            [
              7,
              8,
              9,
              5
            ]
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "list1[7]": 2,
          "list1[10]": 9,
          "list1[9]": 8,
          "list1[5]": 5,
          "list1[6]": 6,
          "list1[11]": 5,
          "list1[8]": 7,
          "list1[0]": 1,
          "list1[4]": 4,
          "list1[1]": 2,
          "list1[2]": 3,
          "list1[3]": 2
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {}
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "num": 1
        }
      },
      {
        "line": 8,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "key": 1
        }
      },
      {
        "line": 9,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "value": 1
        }
      },
      {
        "line": 10,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1
          }
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "num": 2
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "key": 2
        }
      },
      {
        "line": 10,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1
          }
        }
      },
      {
        "line": 4,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "num": 3
        }
      },
      {
        "line": 8,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "key": 3
        }
      },
      {
        "line": 10,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1,
            "3": 1
          }
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "num": 2
        }
      },
      {
        "line": 6,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 2,
            "3": 1
          }
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "num": 4
        }
      },
      {
        "line": 8,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "key": 4
        }
      },
      {
        "line": 10,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 2,
            "3": 1,
            "4": 1
          }
        }
      },
      {
        "line": 4,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "num": 5
        }
      },
      {
        "line": 8,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "key": 5
        }
      },
      {
        "line": 10,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 2,
            "3": 1,
            "4": 1,
            "5": 1
          }
        }
      },
      {
        "line": 4,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "num": 6
        }
      },
      {
        "line": 8,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "key": 6
        }
      },
      {
        "line": 10,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 2,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1
          }
        }
      },
      {
        "line": 4,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "num": 2
        }
      },
      {
        "line": 6,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 3,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1
          }
        }
      },
      {
        "line": 4,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "num": 7
        }
      },
      {
        "line": 8,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "key": 7
        }
      },
      {
        "line": 10,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 3,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1
          }
        }
      },
      {
        "line": 4,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "num": 8
        }
      },
      {
        "line": 8,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "key": 8
        }
      },
      {
        "line": 10,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 3,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1,
            "8": 1
          }
        }
      },
      {
        "line": 4,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "num": 9
        }
      },
      {
        "line": 8,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "key": 9
        }
      },
      {
        "line": 10,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 3,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1,
            "8": 1,
            "9": 1
          }
        }
      },
      {
        "line": 4,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "num": 5
        }
      },
      {
        "line": 6,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 3,
            "3": 1,
            "4": 1,
            "5": 2,
            "6": 1,
            "7": 1,
            "8": 1,
            "9": 1
          }
        }
      },
      {
        "line": 11,
        "step": 38,
        "action": "RETURN",
        "vars": {
          "__return__": {
            "1": 1,
            "2": 3,
            "3": 1,
            "4": 1,
            "5": 2,
            "6": 1,
            "7": 1,
            "8": 1,
            "9": 1
          }
        }
      }
    ],
    "id": 288,
    "task_id": 97,
    "exist_function": [
      "frequency_lists"
    ]
  },
  {
    "code": "def frequency_lists(list1):\r\n    list1 = [item for sublist in list1 for item in sublist]\r\n    dic_data = {}\r\n    for num in list1:\r\n        if num in dic_data.keys():\r\n            dic_data[num] += 1\r\n        else:\r\n            key = num\r\n            value = 1\r\n            dic_data[key] = value\r\n    return dic_data",
    "entry_point": "frequency_lists",
    "input": [
      [
        [
          1,
          2,
          3,
          4
        ],
        [
          5,
          6,
          7,
          8
        ],
        [
          9,
          10,
          11,
          12
        ]
      ]
    ],
    "output": {
      "1": 1,
      "2": 1,
      "3": 1,
      "4": 1,
      "5": 1,
      "6": 1,
      "7": 1,
      "8": 1,
      "9": 1,
      "10": 1,
      "11": 1,
      "12": 1
    },
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list1": [
            [
              1,
              2,
              3,
              4
            ],
            [
              5,
              6,
              7,
              8
            ],
            [
              9,
              10,
              11,
              12
            ]
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "list1[7]": 8,
          "list1[10]": 11,
          "list1[9]": 10,
          "list1[5]": 6,
          "list1[6]": 7,
          "list1[11]": 12,
          "list1[8]": 9,
          "list1[0]": 1,
          "list1[4]": 5,
          "list1[1]": 2,
          "list1[2]": 3,
          "list1[3]": 4
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {}
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "num": 1
        }
      },
      {
        "line": 8,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "key": 1
        }
      },
      {
        "line": 9,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "value": 1
        }
      },
      {
        "line": 10,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1
          }
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "num": 2
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "key": 2
        }
      },
      {
        "line": 10,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1
          }
        }
      },
      {
        "line": 4,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "num": 3
        }
      },
      {
        "line": 8,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "key": 3
        }
      },
      {
        "line": 10,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1,
            "3": 1
          }
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "num": 4
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "key": 4
        }
      },
      {
        "line": 10,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1
          }
        }
      },
      {
        "line": 4,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "num": 5
        }
      },
      {
        "line": 8,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "key": 5
        }
      },
      {
        "line": 10,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1
          }
        }
      },
      {
        "line": 4,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "num": 6
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "key": 6
        }
      },
      {
        "line": 10,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1
          }
        }
      },
      {
        "line": 4,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "num": 7
        }
      },
      {
        "line": 8,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "key": 7
        }
      },
      {
        "line": 10,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1
          }
        }
      },
      {
        "line": 4,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "num": 8
        }
      },
      {
        "line": 8,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "key": 8
        }
      },
      {
        "line": 10,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1,
            "8": 1
          }
        }
      },
      {
        "line": 4,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "num": 9
        }
      },
      {
        "line": 8,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "key": 9
        }
      },
      {
        "line": 10,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1,
            "8": 1,
            "9": 1
          }
        }
      },
      {
        "line": 4,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "num": 10
        }
      },
      {
        "line": 8,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "key": 10
        }
      },
      {
        "line": 10,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1,
            "8": 1,
            "9": 1,
            "10": 1
          }
        }
      },
      {
        "line": 4,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "num": 11
        }
      },
      {
        "line": 8,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "key": 11
        }
      },
      {
        "line": 10,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1,
            "8": 1,
            "9": 1,
            "10": 1,
            "11": 1
          }
        }
      },
      {
        "line": 4,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "num": 12
        }
      },
      {
        "line": 8,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "key": 12
        }
      },
      {
        "line": 10,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1,
            "8": 1,
            "9": 1,
            "10": 1,
            "11": 1,
            "12": 1
          }
        }
      },
      {
        "line": 11,
        "step": 41,
        "action": "RETURN",
        "vars": {
          "__return__": {
            "1": 1,
            "2": 1,
            "3": 1,
            "4": 1,
            "5": 1,
            "6": 1,
            "7": 1,
            "8": 1,
            "9": 1,
            "10": 1,
            "11": 1,
            "12": 1
          }
        }
      }
    ],
    "id": 289,
    "task_id": 97,
    "exist_function": [
      "frequency_lists"
    ]
  },
  {
    "code": "def frequency_lists(list1):\r\n    list1 = [item for sublist in list1 for item in sublist]\r\n    dic_data = {}\r\n    for num in list1:\r\n        if num in dic_data.keys():\r\n            dic_data[num] += 1\r\n        else:\r\n            key = num\r\n            value = 1\r\n            dic_data[key] = value\r\n    return dic_data",
    "entry_point": "frequency_lists",
    "input": [
      [
        [
          20,
          30,
          40,
          17
        ],
        [
          18,
          16,
          14,
          13
        ],
        [
          10,
          20,
          30,
          40
        ]
      ]
    ],
    "output": {
      "20": 2,
      "30": 2,
      "40": 2,
      "17": 1,
      "18": 1,
      "16": 1,
      "14": 1,
      "13": 1,
      "10": 1
    },
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "list1": [
            [
              20,
              30,
              40,
              17
            ],
            [
              18,
              16,
              14,
              13
            ],
            [
              10,
              20,
              30,
              40
            ]
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "list1[7]": 13,
          "list1[10]": 30,
          "list1[9]": 20,
          "list1[5]": 16,
          "list1[6]": 14,
          "list1[11]": 40,
          "list1[8]": 10,
          "list1[0]": 20,
          "list1[4]": 18,
          "list1[1]": 30,
          "list1[2]": 40,
          "list1[3]": 17
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {}
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "num": 20
        }
      },
      {
        "line": 8,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "key": 20
        }
      },
      {
        "line": 9,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "value": 1
        }
      },
      {
        "line": 10,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "20": 1
          }
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "num": 30
        }
      },
      {
        "line": 8,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "key": 30
        }
      },
      {
        "line": 10,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "20": 1,
            "30": 1
          }
        }
      },
      {
        "line": 4,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "num": 40
        }
      },
      {
        "line": 8,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "key": 40
        }
      },
      {
        "line": 10,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "20": 1,
            "30": 1,
            "40": 1
          }
        }
      },
      {
        "line": 4,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "num": 17
        }
      },
      {
        "line": 8,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "key": 17
        }
      },
      {
        "line": 10,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "20": 1,
            "30": 1,
            "40": 1,
            "17": 1
          }
        }
      },
      {
        "line": 4,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "num": 18
        }
      },
      {
        "line": 8,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "key": 18
        }
      },
      {
        "line": 10,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "20": 1,
            "30": 1,
            "40": 1,
            "17": 1,
            "18": 1
          }
        }
      },
      {
        "line": 4,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "num": 16
        }
      },
      {
        "line": 8,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "key": 16
        }
      },
      {
        "line": 10,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "20": 1,
            "30": 1,
            "40": 1,
            "17": 1,
            "18": 1,
            "16": 1
          }
        }
      },
      {
        "line": 4,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "num": 14
        }
      },
      {
        "line": 8,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "key": 14
        }
      },
      {
        "line": 10,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "20": 1,
            "30": 1,
            "40": 1,
            "17": 1,
            "18": 1,
            "16": 1,
            "14": 1
          }
        }
      },
      {
        "line": 4,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "num": 13
        }
      },
      {
        "line": 8,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "key": 13
        }
      },
      {
        "line": 10,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "20": 1,
            "30": 1,
            "40": 1,
            "17": 1,
            "18": 1,
            "16": 1,
            "14": 1,
            "13": 1
          }
        }
      },
      {
        "line": 4,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "num": 10
        }
      },
      {
        "line": 8,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "key": 10
        }
      },
      {
        "line": 10,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "20": 1,
            "30": 1,
            "40": 1,
            "17": 1,
            "18": 1,
            "16": 1,
            "14": 1,
            "13": 1,
            "10": 1
          }
        }
      },
      {
        "line": 4,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "num": 20
        }
      },
      {
        "line": 6,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "20": 2,
            "30": 1,
            "40": 1,
            "17": 1,
            "18": 1,
            "16": 1,
            "14": 1,
            "13": 1,
            "10": 1
          }
        }
      },
      {
        "line": 4,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "num": 30
        }
      },
      {
        "line": 6,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "20": 2,
            "30": 2,
            "40": 1,
            "17": 1,
            "18": 1,
            "16": 1,
            "14": 1,
            "13": 1,
            "10": 1
          }
        }
      },
      {
        "line": 4,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "num": 40
        }
      },
      {
        "line": 6,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "dic_data": {
            "20": 2,
            "30": 2,
            "40": 2,
            "17": 1,
            "18": 1,
            "16": 1,
            "14": 1,
            "13": 1,
            "10": 1
          }
        }
      },
      {
        "line": 11,
        "step": 38,
        "action": "RETURN",
        "vars": {
          "__return__": {
            "20": 2,
            "30": 2,
            "40": 2,
            "17": 1,
            "18": 1,
            "16": 1,
            "14": 1,
            "13": 1,
            "10": 1
          }
        }
      }
    ],
    "id": 290,
    "task_id": 97,
    "exist_function": [
      "frequency_lists"
    ]
  },
  {
    "code": "def multiply_num(numbers):  \r\n    total = 1\r\n    for x in numbers:\r\n        total *= x  \r\n    return total/len(numbers)",
    "entry_point": "multiply_num",
    "input": [
      "(8, 2, 3, -1, 7)"
    ],
    "output": -67.2,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "numbers": "(8, 2, 3, -1, 7)"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "total": 1
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "x": 8
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "total": 8
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "x": 2
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "total": 16
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "x": 3
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "total": 48
        }
      },
      {
        "line": 3,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "x": -1
        }
      },
      {
        "line": 4,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "total": -48
        }
      },
      {
        "line": 3,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "x": 7
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "total": -336
        }
      },
      {
        "line": 5,
        "step": 13,
        "action": "RETURN",
        "vars": {
          "__return__": -67.2
        }
      }
    ],
    "id": 291,
    "task_id": 98,
    "exist_function": [
      "multiply_num"
    ]
  },
  {
    "code": "def multiply_num(numbers):  \r\n    total = 1\r\n    for x in numbers:\r\n        total *= x  \r\n    return total/len(numbers)",
    "entry_point": "multiply_num",
    "input": [
      "(-10, -20, -30)"
    ],
    "output": -2000.0,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "numbers": "(-10, -20, -30)"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "total": 1
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "x": -10
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "total": -10
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "x": -20
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "total": 200
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "x": -30
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "total": -6000
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": -2000.0
        }
      }
    ],
    "id": 292,
    "task_id": 98,
    "exist_function": [
      "multiply_num"
    ]
  },
  {
    "code": "def multiply_num(numbers):  \r\n    total = 1\r\n    for x in numbers:\r\n        total *= x  \r\n    return total/len(numbers)",
    "entry_point": "multiply_num",
    "input": [
      "(19, 15, 18)"
    ],
    "output": 1710.0,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "numbers": "(19, 15, 18)"
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "total": 1
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "x": 19
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "total": 19
        }
      },
      {
        "line": 3,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "x": 15
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "total": 285
        }
      },
      {
        "line": 3,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "x": 18
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "total": 5130
        }
      },
      {
        "line": 5,
        "step": 9,
        "action": "RETURN",
        "vars": {
          "__return__": 1710.0
        }
      }
    ],
    "id": 293,
    "task_id": 98,
    "exist_function": [
      "multiply_num"
    ]
  },
  {
    "code": "import sys\r\ndef next_smallest_palindrome(num):\r\n    numstr = str(num)\r\n    for i in range(num+1,sys.maxsize):\r\n        if str(i) == str(i)[::-1]:\r\n            return i",
    "entry_point": "next_smallest_palindrome",
    "input": [
      99
    ],
    "output": 101,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "num": 99
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "numstr": "99"
        }
      },
      {
        "line": 4,
        "step": "3~4",
        "action": "LOOP",
        "vars": {
          "i": "100→101"
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "RETURN",
        "vars": {
          "__return__": 101
        }
      }
    ],
    "id": 297,
    "task_id": 100,
    "exist_function": [
      "next_smallest_palindrome"
    ]
  },
  {
    "code": "import sys\r\ndef next_smallest_palindrome(num):\r\n    numstr = str(num)\r\n    for i in range(num+1,sys.maxsize):\r\n        if str(i) == str(i)[::-1]:\r\n            return i",
    "entry_point": "next_smallest_palindrome",
    "input": [
      1221
    ],
    "output": 1331,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "num": 1221
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "numstr": "1221"
        }
      },
      {
        "line": 4,
        "step": "3~112",
        "action": "LOOP",
        "vars": {
          "i": "1222→1331"
        }
      },
      {
        "line": 6,
        "step": 113,
        "action": "RETURN",
        "vars": {
          "__return__": 1331
        }
      }
    ],
    "id": 298,
    "task_id": 100,
    "exist_function": [
      "next_smallest_palindrome"
    ]
  },
  {
    "code": "import sys\r\ndef next_smallest_palindrome(num):\r\n    numstr = str(num)\r\n    for i in range(num+1,sys.maxsize):\r\n        if str(i) == str(i)[::-1]:\r\n            return i",
    "entry_point": "next_smallest_palindrome",
    "input": [
      120
    ],
    "output": 121,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "num": 120
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "numstr": "120"
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 121
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 121
        }
      }
    ],
    "id": 299,
    "task_id": 100,
    "exist_function": [
      "next_smallest_palindrome"
    ]
  },
  {
    "code": "def get_inv_count(arr, n): \r\n\tinv_count = 0\r\n\tfor i in range(n): \r\n\t\tfor j in range(i + 1, n): \r\n\t\t\tif (arr[i] > arr[j]): \r\n\t\t\t\tinv_count += 1\r\n\treturn inv_count",
    "entry_point": "get_inv_count",
    "input": [
      [
        1,
        20,
        6,
        4,
        5
      ],
      5
    ],
    "output": 5,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            1,
            20,
            6,
            4,
            5
          ],
          "n": 5
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": "4~7",
        "action": "LOOP",
        "vars": {
          "j": "1→4"
        }
      },
      {
        "line": 3,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 1
        }
      },
      {
        "line": 4,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 2
        }
      },
      {
        "line": 4,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 3
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 4,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 4
        }
      },
      {
        "line": 4,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 5
        }
      },
      {
        "line": 3,
        "step": "20~21",
        "action": "LOOP",
        "vars": {
          "i": "3→4"
        }
      },
      {
        "line": 7,
        "step": 22,
        "action": "RETURN",
        "vars": {
          "__return__": 5
        }
      }
    ],
    "id": 2502,
    "task_id": 841,
    "exist_function": [
      "get_inv_count"
    ]
  },
  {
    "code": "def get_inv_count(arr, n): \r\n\tinv_count = 0\r\n\tfor i in range(n): \r\n\t\tfor j in range(i + 1, n): \r\n\t\t\tif (arr[i] > arr[j]): \r\n\t\t\t\tinv_count += 1\r\n\treturn inv_count",
    "entry_point": "get_inv_count",
    "input": [
      [
        8,
        4,
        2,
        1
      ],
      4
    ],
    "output": 6,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            8,
            4,
            2,
            1
          ],
          "n": 4
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 1
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 2
        }
      },
      {
        "line": 4,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 3
        }
      },
      {
        "line": 3,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 4,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 4
        }
      },
      {
        "line": 4,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 5
        }
      },
      {
        "line": 3,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 6,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 6
        }
      },
      {
        "line": 3,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 7,
        "step": 18,
        "action": "RETURN",
        "vars": {
          "__return__": 6
        }
      }
    ],
    "id": 2503,
    "task_id": 841,
    "exist_function": [
      "get_inv_count"
    ]
  },
  {
    "code": "def get_inv_count(arr, n): \r\n\tinv_count = 0\r\n\tfor i in range(n): \r\n\t\tfor j in range(i + 1, n): \r\n\t\t\tif (arr[i] > arr[j]): \r\n\t\t\t\tinv_count += 1\r\n\treturn inv_count",
    "entry_point": "get_inv_count",
    "input": [
      [
        3,
        1,
        2
      ],
      3
    ],
    "output": 2,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            3,
            1,
            2
          ],
          "n": 3
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 1
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "inv_count": 2
        }
      },
      {
        "line": 3,
        "step": "8~9",
        "action": "LOOP",
        "vars": {
          "i": "1→2"
        }
      },
      {
        "line": 7,
        "step": 10,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 2504,
    "task_id": 841,
    "exist_function": [
      "get_inv_count"
    ]
  },
  {
    "code": "def get_odd_occurence(arr, arr_size):\r\n  for i in range(0, arr_size):\r\n    count = 0\r\n    for j in range(0, arr_size):\r\n      if arr[i] == arr[j]:\r\n        count += 1\r\n    if (count % 2 != 0):\r\n      return arr[i]\r\n  return -1",
    "entry_point": "get_odd_occurence",
    "input": [
      [
        2,
        3,
        5,
        4,
        5,
        2,
        4,
        3,
        5,
        2,
        4,
        4,
        2
      ],
      13
    ],
    "output": 5,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            2,
            3,
            5,
            4,
            5,
            2,
            4,
            3,
            5,
            2,
            4,
            4,
            2
          ],
          "arr_size": 13
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 4,
        "step": "6~10",
        "action": "LOOP",
        "vars": {
          "j": "1→5"
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 4,
        "step": "12~15",
        "action": "LOOP",
        "vars": {
          "j": "6→9"
        }
      },
      {
        "line": 6,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 4,
        "step": "17~19",
        "action": "LOOP",
        "vars": {
          "j": "10→12"
        }
      },
      {
        "line": 6,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "count": 4
        }
      },
      {
        "line": 2,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 3,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 4,
        "step": "23~24",
        "action": "LOOP",
        "vars": {
          "j": "0→1"
        }
      },
      {
        "line": 6,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 4,
        "step": "26~31",
        "action": "LOOP",
        "vars": {
          "j": "2→7"
        }
      },
      {
        "line": 6,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 4,
        "step": "33~37",
        "action": "LOOP",
        "vars": {
          "j": "8→12"
        }
      },
      {
        "line": 2,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 3,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 4,
        "step": "40~42",
        "action": "LOOP",
        "vars": {
          "j": "0→2"
        }
      },
      {
        "line": 6,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 4,
        "step": "44~45",
        "action": "LOOP",
        "vars": {
          "j": "3→4"
        }
      },
      {
        "line": 6,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 4,
        "step": "47~50",
        "action": "LOOP",
        "vars": {
          "j": "5→8"
        }
      },
      {
        "line": 6,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 4,
        "step": "52~55",
        "action": "LOOP",
        "vars": {
          "j": "9→12"
        }
      },
      {
        "line": 8,
        "step": 56,
        "action": "RETURN",
        "vars": {
          "__return__": 5
        }
      }
    ],
    "id": 2505,
    "task_id": 842,
    "exist_function": [
      "get_odd_occurence"
    ]
  },
  {
    "code": "def get_odd_occurence(arr, arr_size):\r\n  for i in range(0, arr_size):\r\n    count = 0\r\n    for j in range(0, arr_size):\r\n      if arr[i] == arr[j]:\r\n        count += 1\r\n    if (count % 2 != 0):\r\n      return arr[i]\r\n  return -1",
    "entry_point": "get_odd_occurence",
    "input": [
      [
        1,
        2,
        3,
        2,
        3,
        1,
        3
      ],
      7
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            1,
            2,
            3,
            2,
            3,
            1,
            3
          ],
          "arr_size": 7
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 4,
        "step": "6~10",
        "action": "LOOP",
        "vars": {
          "j": "1→5"
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 4,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 2,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 3,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 4,
        "step": "15~16",
        "action": "LOOP",
        "vars": {
          "j": "0→1"
        }
      },
      {
        "line": 6,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 4,
        "step": "18~19",
        "action": "LOOP",
        "vars": {
          "j": "2→3"
        }
      },
      {
        "line": 6,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 4,
        "step": "21~23",
        "action": "LOOP",
        "vars": {
          "j": "4→6"
        }
      },
      {
        "line": 2,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 3,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 4,
        "step": "26~28",
        "action": "LOOP",
        "vars": {
          "j": "0→2"
        }
      },
      {
        "line": 6,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 4,
        "step": "30~31",
        "action": "LOOP",
        "vars": {
          "j": "3→4"
        }
      },
      {
        "line": 6,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 4,
        "step": "33~34",
        "action": "LOOP",
        "vars": {
          "j": "5→6"
        }
      },
      {
        "line": 6,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 8,
        "step": 36,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 2506,
    "task_id": 842,
    "exist_function": [
      "get_odd_occurence"
    ]
  },
  {
    "code": "def get_odd_occurence(arr, arr_size):\r\n  for i in range(0, arr_size):\r\n    count = 0\r\n    for j in range(0, arr_size):\r\n      if arr[i] == arr[j]:\r\n        count += 1\r\n    if (count % 2 != 0):\r\n      return arr[i]\r\n  return -1",
    "entry_point": "get_odd_occurence",
    "input": [
      [
        5,
        7,
        2,
        7,
        5,
        2,
        5
      ],
      7
    ],
    "output": 5,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            5,
            7,
            2,
            7,
            5,
            2,
            5
          ],
          "arr_size": 7
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 4,
        "step": "6~9",
        "action": "LOOP",
        "vars": {
          "j": "1→4"
        }
      },
      {
        "line": 6,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 4,
        "step": "11~12",
        "action": "LOOP",
        "vars": {
          "j": "5→6"
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "count": 3
        }
      },
      {
        "line": 8,
        "step": 14,
        "action": "RETURN",
        "vars": {
          "__return__": 5
        }
      }
    ],
    "id": 2507,
    "task_id": 842,
    "exist_function": [
      "get_odd_occurence"
    ]
  },
  {
    "code": "def get_Number(n, k): \r\n    arr = [0] * n; \r\n    i = 0; \r\n    odd = 1; \r\n    while (odd <= n):   \r\n        arr[i] = odd; \r\n        i += 1; \r\n        odd += 2;\r\n    even = 2; \r\n    while (even <= n): \r\n        arr[i] = even; \r\n        i += 1;\r\n        even += 2; \r\n    return arr[k - 1];",
    "entry_point": "get_Number",
    "input": [
      8,
      5
    ],
    "output": 2,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 8,
          "k": 5
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "arr": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "odd": 1
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "arr[0]": 1
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "odd": 3
        }
      },
      {
        "line": 6,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "arr[1]": 3
        }
      },
      {
        "line": 7,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 8,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "odd": 5
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "arr[2]": 5
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 8,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "odd": 7
        }
      },
      {
        "line": 6,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "arr[3]": 7
        }
      },
      {
        "line": 7,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 8,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "odd": 9
        }
      },
      {
        "line": 9,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "even": 2
        }
      },
      {
        "line": 11,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "arr[4]": 2
        }
      },
      {
        "line": 12,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 13,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "even": 4
        }
      },
      {
        "line": 11,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "arr[5]": 4
        }
      },
      {
        "line": 12,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 13,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "even": 6
        }
      },
      {
        "line": 11,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "arr[6]": 6
        }
      },
      {
        "line": 12,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 13,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "even": 8
        }
      },
      {
        "line": 11,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "arr[7]": 8
        }
      },
      {
        "line": 12,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "i": 8
        }
      },
      {
        "line": 13,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "even": 10
        }
      },
      {
        "line": 14,
        "step": 30,
        "action": "RETURN",
        "vars": {
          "__return__": 2
        }
      }
    ],
    "id": 2508,
    "task_id": 844,
    "exist_function": [
      "get_Number"
    ]
  },
  {
    "code": "def get_Number(n, k): \r\n    arr = [0] * n; \r\n    i = 0; \r\n    odd = 1; \r\n    while (odd <= n):   \r\n        arr[i] = odd; \r\n        i += 1; \r\n        odd += 2;\r\n    even = 2; \r\n    while (even <= n): \r\n        arr[i] = even; \r\n        i += 1;\r\n        even += 2; \r\n    return arr[k - 1];",
    "entry_point": "get_Number",
    "input": [
      7,
      2
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 7,
          "k": 2
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "arr": [
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "odd": 1
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "arr[0]": 1
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "odd": 3
        }
      },
      {
        "line": 6,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "arr[1]": 3
        }
      },
      {
        "line": 7,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 8,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "odd": 5
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "arr[2]": 5
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 8,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "odd": 7
        }
      },
      {
        "line": 6,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "arr[3]": 7
        }
      },
      {
        "line": 7,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 8,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "odd": 9
        }
      },
      {
        "line": 9,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "even": 2
        }
      },
      {
        "line": 11,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "arr[4]": 2
        }
      },
      {
        "line": 12,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 13,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "even": 4
        }
      },
      {
        "line": 11,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "arr[5]": 4
        }
      },
      {
        "line": 12,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 13,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "even": 6
        }
      },
      {
        "line": 11,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "arr[6]": 6
        }
      },
      {
        "line": 12,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "i": 7
        }
      },
      {
        "line": 13,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "even": 8
        }
      },
      {
        "line": 14,
        "step": 27,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 2509,
    "task_id": 844,
    "exist_function": [
      "get_Number"
    ]
  },
  {
    "code": "def get_Number(n, k): \r\n    arr = [0] * n; \r\n    i = 0; \r\n    odd = 1; \r\n    while (odd <= n):   \r\n        arr[i] = odd; \r\n        i += 1; \r\n        odd += 2;\r\n    even = 2; \r\n    while (even <= n): \r\n        arr[i] = even; \r\n        i += 1;\r\n        even += 2; \r\n    return arr[k - 1];",
    "entry_point": "get_Number",
    "input": [
      5,
      2
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 5,
          "k": 2
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "arr": [
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 0
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "odd": 1
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "arr[0]": 1
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 8,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "odd": 3
        }
      },
      {
        "line": 6,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "arr[1]": 3
        }
      },
      {
        "line": 7,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 8,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "odd": 5
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "arr[2]": 5
        }
      },
      {
        "line": 7,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 8,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "odd": 7
        }
      },
      {
        "line": 9,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "even": 2
        }
      },
      {
        "line": 11,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "arr[3]": 2
        }
      },
      {
        "line": 12,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 13,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "even": 4
        }
      },
      {
        "line": 11,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "arr[4]": 4
        }
      },
      {
        "line": 12,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 13,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "even": 6
        }
      },
      {
        "line": 14,
        "step": 21,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 2510,
    "task_id": 844,
    "exist_function": [
      "get_Number"
    ]
  },
  {
    "code": "def find_platform(arr, dep, n): \r\n    arr.sort() \r\n    dep.sort() \r\n    plat_needed = 1\r\n    result = 1\r\n    i = 1\r\n    j = 0\r\n    while (i < n and j < n): \r\n        if (arr[i] <= dep[j]):           \r\n            plat_needed+= 1\r\n            i+= 1\r\n        elif (arr[i] > dep[j]):           \r\n            plat_needed-= 1\r\n            j+= 1\r\n        if (plat_needed > result):  \r\n            result = plat_needed           \r\n    return result",
    "entry_point": "find_platform",
    "input": [
      [
        900,
        940,
        950,
        1100,
        1500,
        1800
      ],
      [
        910,
        1120,
        1130,
        1200,
        1900,
        2000
      ],
      6
    ],
    "output": 3,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            900,
            940,
            950,
            1100,
            1500,
            1800
          ],
          "dep": [
            910,
            1200,
            1120,
            1130,
            1900,
            2000
          ],
          "n": 6
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "dep[2]": 1130,
          "dep[3]": 1200,
          "dep[1]": 1120
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 1
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "result": 1
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 13,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 0
        }
      },
      {
        "line": 14,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 10,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 1
        }
      },
      {
        "line": 11,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 10,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 2
        }
      },
      {
        "line": 11,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 16,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "result": 2
        }
      },
      {
        "line": 10,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 3
        }
      },
      {
        "line": 11,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 16,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "result": 3
        }
      },
      {
        "line": 13,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 2
        }
      },
      {
        "line": 14,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 13,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 1
        }
      },
      {
        "line": 14,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 13,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 0
        }
      },
      {
        "line": 14,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 10,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 1
        }
      },
      {
        "line": 11,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "i": 5
        }
      },
      {
        "line": 10,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 2
        }
      },
      {
        "line": 11,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "i": 6
        }
      },
      {
        "line": 17,
        "step": 27,
        "action": "RETURN",
        "vars": {
          "__return__": 3
        }
      }
    ],
    "id": 2514,
    "task_id": 846,
    "exist_function": [
      "find_platform"
    ]
  },
  {
    "code": "def find_platform(arr, dep, n): \r\n    arr.sort() \r\n    dep.sort() \r\n    plat_needed = 1\r\n    result = 1\r\n    i = 1\r\n    j = 0\r\n    while (i < n and j < n): \r\n        if (arr[i] <= dep[j]):           \r\n            plat_needed+= 1\r\n            i+= 1\r\n        elif (arr[i] > dep[j]):           \r\n            plat_needed-= 1\r\n            j+= 1\r\n        if (plat_needed > result):  \r\n            result = plat_needed           \r\n    return result",
    "entry_point": "find_platform",
    "input": [
      [
        100,
        200,
        300,
        400
      ],
      [
        700,
        800,
        900,
        1000
      ],
      4
    ],
    "output": 4,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            100,
            200,
            300,
            400
          ],
          "dep": [
            700,
            800,
            900,
            1000
          ],
          "n": 4
        }
      },
      {
        "line": 4,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 1
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "result": 1
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 10,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 2
        }
      },
      {
        "line": 11,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 16,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "result": 2
        }
      },
      {
        "line": 10,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 3
        }
      },
      {
        "line": 11,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 16,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "result": 3
        }
      },
      {
        "line": 10,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 4
        }
      },
      {
        "line": 11,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "i": 4
        }
      },
      {
        "line": 16,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "result": 4
        }
      },
      {
        "line": 17,
        "step": 15,
        "action": "RETURN",
        "vars": {
          "__return__": 4
        }
      }
    ],
    "id": 2515,
    "task_id": 846,
    "exist_function": [
      "find_platform"
    ]
  },
  {
    "code": "def find_platform(arr, dep, n): \r\n    arr.sort() \r\n    dep.sort() \r\n    plat_needed = 1\r\n    result = 1\r\n    i = 1\r\n    j = 0\r\n    while (i < n and j < n): \r\n        if (arr[i] <= dep[j]):           \r\n            plat_needed+= 1\r\n            i+= 1\r\n        elif (arr[i] > dep[j]):           \r\n            plat_needed-= 1\r\n            j+= 1\r\n        if (plat_needed > result):  \r\n            result = plat_needed           \r\n    return result",
    "entry_point": "find_platform",
    "input": [
      [
        5,
        6,
        7,
        8
      ],
      [
        1,
        2,
        3,
        4
      ],
      4
    ],
    "output": 1,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "arr": [
            5,
            6,
            7,
            8
          ],
          "dep": [
            4,
            3,
            2,
            1
          ],
          "n": 4
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "dep[3]": 4,
          "dep[0]": 1,
          "dep[2]": 3,
          "dep[1]": 2
        }
      },
      {
        "line": 4,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 1
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "result": 1
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "i": 1
        }
      },
      {
        "line": 7,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 0
        }
      },
      {
        "line": 13,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": 0
        }
      },
      {
        "line": 14,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 1
        }
      },
      {
        "line": 13,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": -1
        }
      },
      {
        "line": 14,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 13,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": -2
        }
      },
      {
        "line": 14,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 13,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "plat_needed": -3
        }
      },
      {
        "line": 14,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 17,
        "step": 15,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 2516,
    "task_id": 846,
    "exist_function": [
      "find_platform"
    ]
  },
  {
    "code": "def Sum(N): \r\n    SumOfPrimeDivisors = [0]*(N + 1)   \r\n    for i in range(2,N + 1) : \r\n        if (SumOfPrimeDivisors[i] == 0) : \r\n            for j in range(i,N + 1,i) : \r\n                SumOfPrimeDivisors[j] += i           \r\n    return SumOfPrimeDivisors[N]",
    "entry_point": "Sum",
    "input": [
      60
    ],
    "output": 10,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "N": 60
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[2]": 2
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[4]": 2
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[6]": 2
        }
      },
      {
        "line": 5,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[8]": 2
        }
      },
      {
        "line": 5,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[10]": 2
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "j": 12
        }
      },
      {
        "line": 6,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[12]": 2
        }
      },
      {
        "line": 5,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "j": 14
        }
      },
      {
        "line": 6,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[14]": 2
        }
      },
      {
        "line": 5,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "j": 16
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[16]": 2
        }
      },
      {
        "line": 5,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "j": 18
        }
      },
      {
        "line": 6,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[18]": 2
        }
      },
      {
        "line": 5,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "j": 20
        }
      },
      {
        "line": 6,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[20]": 2
        }
      },
      {
        "line": 5,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "j": 22
        }
      },
      {
        "line": 6,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[22]": 2
        }
      },
      {
        "line": 5,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "j": 24
        }
      },
      {
        "line": 6,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[24]": 2
        }
      },
      {
        "line": 5,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "j": 26
        }
      },
      {
        "line": 6,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[26]": 2
        }
      },
      {
        "line": 5,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "j": 28
        }
      },
      {
        "line": 6,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[28]": 2
        }
      },
      {
        "line": 5,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "j": 30
        }
      },
      {
        "line": 6,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[30]": 2
        }
      },
      {
        "line": 5,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "j": 32
        }
      },
      {
        "line": 6,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[32]": 2
        }
      },
      {
        "line": 5,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "j": 34
        }
      },
      {
        "line": 6,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[34]": 2
        }
      },
      {
        "line": 5,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "j": 36
        }
      },
      {
        "line": 6,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[36]": 2
        }
      },
      {
        "line": 5,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "j": 38
        }
      },
      {
        "line": 6,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[38]": 2
        }
      },
      {
        "line": 5,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "j": 40
        }
      },
      {
        "line": 6,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[40]": 2
        }
      },
      {
        "line": 5,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "j": 42
        }
      },
      {
        "line": 6,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[42]": 2
        }
      },
      {
        "line": 5,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "j": 44
        }
      },
      {
        "line": 6,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[44]": 2
        }
      },
      {
        "line": 5,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "j": 46
        }
      },
      {
        "line": 6,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[46]": 2
        }
      },
      {
        "line": 5,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "j": 48
        }
      },
      {
        "line": 6,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[48]": 2
        }
      },
      {
        "line": 5,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "j": 50
        }
      },
      {
        "line": 6,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[50]": 2
        }
      },
      {
        "line": 5,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "j": 52
        }
      },
      {
        "line": 6,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[52]": 2
        }
      },
      {
        "line": 5,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "j": 54
        }
      },
      {
        "line": 6,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[54]": 2
        }
      },
      {
        "line": 5,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "j": 56
        }
      },
      {
        "line": 6,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[56]": 2
        }
      },
      {
        "line": 5,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "j": 58
        }
      },
      {
        "line": 6,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[58]": 2
        }
      },
      {
        "line": 5,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "j": 60
        }
      },
      {
        "line": 6,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[60]": 2
        }
      },
      {
        "line": 3,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[3]": 3
        }
      },
      {
        "line": 5,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[6]": 5
        }
      },
      {
        "line": 5,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[9]": 3
        }
      },
      {
        "line": 5,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "j": 12
        }
      },
      {
        "line": 6,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[12]": 5
        }
      },
      {
        "line": 5,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "j": 15
        }
      },
      {
        "line": 6,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[15]": 3
        }
      },
      {
        "line": 5,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "j": 18
        }
      },
      {
        "line": 6,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[18]": 5
        }
      },
      {
        "line": 5,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "j": 21
        }
      },
      {
        "line": 6,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[21]": 3
        }
      },
      {
        "line": 5,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "j": 24
        }
      },
      {
        "line": 6,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[24]": 5
        }
      },
      {
        "line": 5,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "j": 27
        }
      },
      {
        "line": 6,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[27]": 3
        }
      },
      {
        "line": 5,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "j": 30
        }
      },
      {
        "line": 6,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[30]": 5
        }
      },
      {
        "line": 5,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "j": 33
        }
      },
      {
        "line": 6,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[33]": 3
        }
      },
      {
        "line": 5,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "j": 36
        }
      },
      {
        "line": 6,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[36]": 5
        }
      },
      {
        "line": 5,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "j": 39
        }
      },
      {
        "line": 6,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[39]": 3
        }
      },
      {
        "line": 5,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "j": 42
        }
      },
      {
        "line": 6,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[42]": 5
        }
      },
      {
        "line": 5,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "j": 45
        }
      },
      {
        "line": 6,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[45]": 3
        }
      },
      {
        "line": 5,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "j": 48
        }
      },
      {
        "line": 6,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[48]": 5
        }
      },
      {
        "line": 5,
        "step": 97,
        "action": "EXECUTE",
        "vars": {
          "j": 51
        }
      },
      {
        "line": 6,
        "step": 98,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[51]": 3
        }
      },
      {
        "line": 5,
        "step": 99,
        "action": "EXECUTE",
        "vars": {
          "j": 54
        }
      },
      {
        "line": 6,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[54]": 5
        }
      },
      {
        "line": 5,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "j": 57
        }
      },
      {
        "line": 6,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[57]": 3
        }
      },
      {
        "line": 5,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "j": 60
        }
      },
      {
        "line": 6,
        "step": 104,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[60]": 5
        }
      },
      {
        "line": 3,
        "step": "105~106",
        "action": "LOOP",
        "vars": {
          "i": "4→5"
        }
      },
      {
        "line": 5,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[5]": 5
        }
      },
      {
        "line": 5,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 6,
        "step": 110,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[10]": 7
        }
      },
      {
        "line": 5,
        "step": 111,
        "action": "EXECUTE",
        "vars": {
          "j": 15
        }
      },
      {
        "line": 6,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[15]": 8
        }
      },
      {
        "line": 5,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "j": 20
        }
      },
      {
        "line": 6,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[20]": 7
        }
      },
      {
        "line": 5,
        "step": 115,
        "action": "EXECUTE",
        "vars": {
          "j": 25
        }
      },
      {
        "line": 6,
        "step": 116,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[25]": 5
        }
      },
      {
        "line": 5,
        "step": 117,
        "action": "EXECUTE",
        "vars": {
          "j": 30
        }
      },
      {
        "line": 6,
        "step": 118,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[30]": 10
        }
      },
      {
        "line": 5,
        "step": 119,
        "action": "EXECUTE",
        "vars": {
          "j": 35
        }
      },
      {
        "line": 6,
        "step": 120,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[35]": 5
        }
      },
      {
        "line": 5,
        "step": 121,
        "action": "EXECUTE",
        "vars": {
          "j": 40
        }
      },
      {
        "line": 6,
        "step": 122,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[40]": 7
        }
      },
      {
        "line": 5,
        "step": 123,
        "action": "EXECUTE",
        "vars": {
          "j": 45
        }
      },
      {
        "line": 6,
        "step": 124,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[45]": 8
        }
      },
      {
        "line": 5,
        "step": 125,
        "action": "EXECUTE",
        "vars": {
          "j": 50
        }
      },
      {
        "line": 6,
        "step": 126,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[50]": 7
        }
      },
      {
        "line": 5,
        "step": 127,
        "action": "EXECUTE",
        "vars": {
          "j": 55
        }
      },
      {
        "line": 6,
        "step": 128,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[55]": 5
        }
      },
      {
        "line": 5,
        "step": 129,
        "action": "EXECUTE",
        "vars": {
          "j": 60
        }
      },
      {
        "line": 6,
        "step": 130,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[60]": 10
        }
      },
      {
        "line": 3,
        "step": "131~132",
        "action": "LOOP",
        "vars": {
          "i": "6→7"
        }
      },
      {
        "line": 5,
        "step": 133,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 134,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[7]": 7
        }
      },
      {
        "line": 5,
        "step": 135,
        "action": "EXECUTE",
        "vars": {
          "j": 14
        }
      },
      {
        "line": 6,
        "step": 136,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[14]": 9
        }
      },
      {
        "line": 5,
        "step": 137,
        "action": "EXECUTE",
        "vars": {
          "j": 21
        }
      },
      {
        "line": 6,
        "step": 138,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[21]": 10
        }
      },
      {
        "line": 5,
        "step": 139,
        "action": "EXECUTE",
        "vars": {
          "j": 28
        }
      },
      {
        "line": 6,
        "step": 140,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[28]": 9
        }
      },
      {
        "line": 5,
        "step": 141,
        "action": "EXECUTE",
        "vars": {
          "j": 35
        }
      },
      {
        "line": 6,
        "step": 142,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[35]": 12
        }
      },
      {
        "line": 5,
        "step": 143,
        "action": "EXECUTE",
        "vars": {
          "j": 42
        }
      },
      {
        "line": 6,
        "step": 144,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[42]": 12
        }
      },
      {
        "line": 5,
        "step": 145,
        "action": "EXECUTE",
        "vars": {
          "j": 49
        }
      },
      {
        "line": 6,
        "step": 146,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[49]": 7
        }
      },
      {
        "line": 5,
        "step": 147,
        "action": "EXECUTE",
        "vars": {
          "j": 56
        }
      },
      {
        "line": 6,
        "step": 148,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[56]": 9
        }
      },
      {
        "line": 3,
        "step": "149~152",
        "action": "LOOP",
        "vars": {
          "i": "8→11"
        }
      },
      {
        "line": 5,
        "step": 153,
        "action": "EXECUTE",
        "vars": {
          "j": 11
        }
      },
      {
        "line": 6,
        "step": 154,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[11]": 11
        }
      },
      {
        "line": 5,
        "step": 155,
        "action": "EXECUTE",
        "vars": {
          "j": 22
        }
      },
      {
        "line": 6,
        "step": 156,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[22]": 13
        }
      },
      {
        "line": 5,
        "step": 157,
        "action": "EXECUTE",
        "vars": {
          "j": 33
        }
      },
      {
        "line": 6,
        "step": 158,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[33]": 14
        }
      },
      {
        "line": 5,
        "step": 159,
        "action": "EXECUTE",
        "vars": {
          "j": 44
        }
      },
      {
        "line": 6,
        "step": 160,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[44]": 13
        }
      },
      {
        "line": 5,
        "step": 161,
        "action": "EXECUTE",
        "vars": {
          "j": 55
        }
      },
      {
        "line": 6,
        "step": 162,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[55]": 16
        }
      },
      {
        "line": 3,
        "step": "163~164",
        "action": "LOOP",
        "vars": {
          "i": "12→13"
        }
      },
      {
        "line": 5,
        "step": 165,
        "action": "EXECUTE",
        "vars": {
          "j": 13
        }
      },
      {
        "line": 6,
        "step": 166,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[13]": 13
        }
      },
      {
        "line": 5,
        "step": 167,
        "action": "EXECUTE",
        "vars": {
          "j": 26
        }
      },
      {
        "line": 6,
        "step": 168,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[26]": 15
        }
      },
      {
        "line": 5,
        "step": 169,
        "action": "EXECUTE",
        "vars": {
          "j": 39
        }
      },
      {
        "line": 6,
        "step": 170,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[39]": 16
        }
      },
      {
        "line": 5,
        "step": 171,
        "action": "EXECUTE",
        "vars": {
          "j": 52
        }
      },
      {
        "line": 6,
        "step": 172,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[52]": 15
        }
      },
      {
        "line": 3,
        "step": "173~176",
        "action": "LOOP",
        "vars": {
          "i": "14→17"
        }
      },
      {
        "line": 5,
        "step": 177,
        "action": "EXECUTE",
        "vars": {
          "j": 17
        }
      },
      {
        "line": 6,
        "step": 178,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[17]": 17
        }
      },
      {
        "line": 5,
        "step": 179,
        "action": "EXECUTE",
        "vars": {
          "j": 34
        }
      },
      {
        "line": 6,
        "step": 180,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[34]": 19
        }
      },
      {
        "line": 5,
        "step": 181,
        "action": "EXECUTE",
        "vars": {
          "j": 51
        }
      },
      {
        "line": 6,
        "step": 182,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[51]": 20
        }
      },
      {
        "line": 3,
        "step": "183~184",
        "action": "LOOP",
        "vars": {
          "i": "18→19"
        }
      },
      {
        "line": 5,
        "step": 185,
        "action": "EXECUTE",
        "vars": {
          "j": 19
        }
      },
      {
        "line": 6,
        "step": 186,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[19]": 19
        }
      },
      {
        "line": 5,
        "step": 187,
        "action": "EXECUTE",
        "vars": {
          "j": 38
        }
      },
      {
        "line": 6,
        "step": 188,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[38]": 21
        }
      },
      {
        "line": 5,
        "step": 189,
        "action": "EXECUTE",
        "vars": {
          "j": 57
        }
      },
      {
        "line": 6,
        "step": 190,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[57]": 22
        }
      },
      {
        "line": 3,
        "step": "191~194",
        "action": "LOOP",
        "vars": {
          "i": "20→23"
        }
      },
      {
        "line": 5,
        "step": 195,
        "action": "EXECUTE",
        "vars": {
          "j": 23
        }
      },
      {
        "line": 6,
        "step": 196,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[23]": 23
        }
      },
      {
        "line": 5,
        "step": 197,
        "action": "EXECUTE",
        "vars": {
          "j": 46
        }
      },
      {
        "line": 6,
        "step": 198,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[46]": 25
        }
      },
      {
        "line": 3,
        "step": "199~204",
        "action": "LOOP",
        "vars": {
          "i": "24→29"
        }
      },
      {
        "line": 5,
        "step": 205,
        "action": "EXECUTE",
        "vars": {
          "j": 29
        }
      },
      {
        "line": 6,
        "step": 206,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[29]": 29
        }
      },
      {
        "line": 5,
        "step": 207,
        "action": "EXECUTE",
        "vars": {
          "j": 58
        }
      },
      {
        "line": 6,
        "step": 208,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[58]": 31
        }
      },
      {
        "line": 3,
        "step": "209~210",
        "action": "LOOP",
        "vars": {
          "i": "30→31"
        }
      },
      {
        "line": 5,
        "step": 211,
        "action": "EXECUTE",
        "vars": {
          "j": 31
        }
      },
      {
        "line": 6,
        "step": 212,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[31]": 31
        }
      },
      {
        "line": 3,
        "step": "213~218",
        "action": "LOOP",
        "vars": {
          "i": "32→37"
        }
      },
      {
        "line": 5,
        "step": 219,
        "action": "EXECUTE",
        "vars": {
          "j": 37
        }
      },
      {
        "line": 6,
        "step": 220,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[37]": 37
        }
      },
      {
        "line": 3,
        "step": "221~224",
        "action": "LOOP",
        "vars": {
          "i": "38→41"
        }
      },
      {
        "line": 5,
        "step": 225,
        "action": "EXECUTE",
        "vars": {
          "j": 41
        }
      },
      {
        "line": 6,
        "step": 226,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[41]": 41
        }
      },
      {
        "line": 3,
        "step": "227~228",
        "action": "LOOP",
        "vars": {
          "i": "42→43"
        }
      },
      {
        "line": 5,
        "step": 229,
        "action": "EXECUTE",
        "vars": {
          "j": 43
        }
      },
      {
        "line": 6,
        "step": 230,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[43]": 43
        }
      },
      {
        "line": 3,
        "step": "231~234",
        "action": "LOOP",
        "vars": {
          "i": "44→47"
        }
      },
      {
        "line": 5,
        "step": 235,
        "action": "EXECUTE",
        "vars": {
          "j": 47
        }
      },
      {
        "line": 6,
        "step": 236,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[47]": 47
        }
      },
      {
        "line": 3,
        "step": "237~242",
        "action": "LOOP",
        "vars": {
          "i": "48→53"
        }
      },
      {
        "line": 5,
        "step": 243,
        "action": "EXECUTE",
        "vars": {
          "j": 53
        }
      },
      {
        "line": 6,
        "step": 244,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[53]": 53
        }
      },
      {
        "line": 3,
        "step": "245~250",
        "action": "LOOP",
        "vars": {
          "i": "54→59"
        }
      },
      {
        "line": 5,
        "step": 251,
        "action": "EXECUTE",
        "vars": {
          "j": 59
        }
      },
      {
        "line": 6,
        "step": 252,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[59]": 59
        }
      },
      {
        "line": 3,
        "step": 253,
        "action": "EXECUTE",
        "vars": {
          "i": 60
        }
      },
      {
        "line": 7,
        "step": 254,
        "action": "RETURN",
        "vars": {
          "__return__": 10
        }
      }
    ],
    "id": 2523,
    "task_id": 849,
    "exist_function": [
      "Sum"
    ]
  },
  {
    "code": "def Sum(N): \r\n    SumOfPrimeDivisors = [0]*(N + 1)   \r\n    for i in range(2,N + 1) : \r\n        if (SumOfPrimeDivisors[i] == 0) : \r\n            for j in range(i,N + 1,i) : \r\n                SumOfPrimeDivisors[j] += i           \r\n    return SumOfPrimeDivisors[N]",
    "entry_point": "Sum",
    "input": [
      39
    ],
    "output": 16,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "N": 39
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[2]": 2
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[4]": 2
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[6]": 2
        }
      },
      {
        "line": 5,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[8]": 2
        }
      },
      {
        "line": 5,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[10]": 2
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "j": 12
        }
      },
      {
        "line": 6,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[12]": 2
        }
      },
      {
        "line": 5,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "j": 14
        }
      },
      {
        "line": 6,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[14]": 2
        }
      },
      {
        "line": 5,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "j": 16
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[16]": 2
        }
      },
      {
        "line": 5,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "j": 18
        }
      },
      {
        "line": 6,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[18]": 2
        }
      },
      {
        "line": 5,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "j": 20
        }
      },
      {
        "line": 6,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[20]": 2
        }
      },
      {
        "line": 5,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "j": 22
        }
      },
      {
        "line": 6,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[22]": 2
        }
      },
      {
        "line": 5,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "j": 24
        }
      },
      {
        "line": 6,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[24]": 2
        }
      },
      {
        "line": 5,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "j": 26
        }
      },
      {
        "line": 6,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[26]": 2
        }
      },
      {
        "line": 5,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "j": 28
        }
      },
      {
        "line": 6,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[28]": 2
        }
      },
      {
        "line": 5,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "j": 30
        }
      },
      {
        "line": 6,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[30]": 2
        }
      },
      {
        "line": 5,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "j": 32
        }
      },
      {
        "line": 6,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[32]": 2
        }
      },
      {
        "line": 5,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "j": 34
        }
      },
      {
        "line": 6,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[34]": 2
        }
      },
      {
        "line": 5,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "j": 36
        }
      },
      {
        "line": 6,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[36]": 2
        }
      },
      {
        "line": 5,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "j": 38
        }
      },
      {
        "line": 6,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[38]": 2
        }
      },
      {
        "line": 3,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[3]": 3
        }
      },
      {
        "line": 5,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[6]": 5
        }
      },
      {
        "line": 5,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[9]": 3
        }
      },
      {
        "line": 5,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "j": 12
        }
      },
      {
        "line": 6,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[12]": 5
        }
      },
      {
        "line": 5,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "j": 15
        }
      },
      {
        "line": 6,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[15]": 3
        }
      },
      {
        "line": 5,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "j": 18
        }
      },
      {
        "line": 6,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[18]": 5
        }
      },
      {
        "line": 5,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "j": 21
        }
      },
      {
        "line": 6,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[21]": 3
        }
      },
      {
        "line": 5,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "j": 24
        }
      },
      {
        "line": 6,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[24]": 5
        }
      },
      {
        "line": 5,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "j": 27
        }
      },
      {
        "line": 6,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[27]": 3
        }
      },
      {
        "line": 5,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "j": 30
        }
      },
      {
        "line": 6,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[30]": 5
        }
      },
      {
        "line": 5,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "j": 33
        }
      },
      {
        "line": 6,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[33]": 3
        }
      },
      {
        "line": 5,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "j": 36
        }
      },
      {
        "line": 6,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[36]": 5
        }
      },
      {
        "line": 5,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "j": 39
        }
      },
      {
        "line": 6,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[39]": 3
        }
      },
      {
        "line": 3,
        "step": "69~70",
        "action": "LOOP",
        "vars": {
          "i": "4→5"
        }
      },
      {
        "line": 5,
        "step": 71,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 72,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[5]": 5
        }
      },
      {
        "line": 5,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 6,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[10]": 7
        }
      },
      {
        "line": 5,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "j": 15
        }
      },
      {
        "line": 6,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[15]": 8
        }
      },
      {
        "line": 5,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "j": 20
        }
      },
      {
        "line": 6,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[20]": 7
        }
      },
      {
        "line": 5,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "j": 25
        }
      },
      {
        "line": 6,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[25]": 5
        }
      },
      {
        "line": 5,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "j": 30
        }
      },
      {
        "line": 6,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[30]": 10
        }
      },
      {
        "line": 5,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "j": 35
        }
      },
      {
        "line": 6,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[35]": 5
        }
      },
      {
        "line": 3,
        "step": "85~86",
        "action": "LOOP",
        "vars": {
          "i": "6→7"
        }
      },
      {
        "line": 5,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[7]": 7
        }
      },
      {
        "line": 5,
        "step": 89,
        "action": "EXECUTE",
        "vars": {
          "j": 14
        }
      },
      {
        "line": 6,
        "step": 90,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[14]": 9
        }
      },
      {
        "line": 5,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "j": 21
        }
      },
      {
        "line": 6,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[21]": 10
        }
      },
      {
        "line": 5,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "j": 28
        }
      },
      {
        "line": 6,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[28]": 9
        }
      },
      {
        "line": 5,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "j": 35
        }
      },
      {
        "line": 6,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[35]": 12
        }
      },
      {
        "line": 3,
        "step": "97~100",
        "action": "LOOP",
        "vars": {
          "i": "8→11"
        }
      },
      {
        "line": 5,
        "step": 101,
        "action": "EXECUTE",
        "vars": {
          "j": 11
        }
      },
      {
        "line": 6,
        "step": 102,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[11]": 11
        }
      },
      {
        "line": 5,
        "step": 103,
        "action": "EXECUTE",
        "vars": {
          "j": 22
        }
      },
      {
        "line": 6,
        "step": 104,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[22]": 13
        }
      },
      {
        "line": 5,
        "step": 105,
        "action": "EXECUTE",
        "vars": {
          "j": 33
        }
      },
      {
        "line": 6,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[33]": 14
        }
      },
      {
        "line": 3,
        "step": "107~108",
        "action": "LOOP",
        "vars": {
          "i": "12→13"
        }
      },
      {
        "line": 5,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "j": 13
        }
      },
      {
        "line": 6,
        "step": 110,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[13]": 13
        }
      },
      {
        "line": 5,
        "step": 111,
        "action": "EXECUTE",
        "vars": {
          "j": 26
        }
      },
      {
        "line": 6,
        "step": 112,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[26]": 15
        }
      },
      {
        "line": 5,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "j": 39
        }
      },
      {
        "line": 6,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[39]": 16
        }
      },
      {
        "line": 3,
        "step": "115~118",
        "action": "LOOP",
        "vars": {
          "i": "14→17"
        }
      },
      {
        "line": 5,
        "step": 119,
        "action": "EXECUTE",
        "vars": {
          "j": 17
        }
      },
      {
        "line": 6,
        "step": 120,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[17]": 17
        }
      },
      {
        "line": 5,
        "step": 121,
        "action": "EXECUTE",
        "vars": {
          "j": 34
        }
      },
      {
        "line": 6,
        "step": 122,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[34]": 19
        }
      },
      {
        "line": 3,
        "step": "123~124",
        "action": "LOOP",
        "vars": {
          "i": "18→19"
        }
      },
      {
        "line": 5,
        "step": 125,
        "action": "EXECUTE",
        "vars": {
          "j": 19
        }
      },
      {
        "line": 6,
        "step": 126,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[19]": 19
        }
      },
      {
        "line": 5,
        "step": 127,
        "action": "EXECUTE",
        "vars": {
          "j": 38
        }
      },
      {
        "line": 6,
        "step": 128,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[38]": 21
        }
      },
      {
        "line": 3,
        "step": "129~132",
        "action": "LOOP",
        "vars": {
          "i": "20→23"
        }
      },
      {
        "line": 5,
        "step": 133,
        "action": "EXECUTE",
        "vars": {
          "j": 23
        }
      },
      {
        "line": 6,
        "step": 134,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[23]": 23
        }
      },
      {
        "line": 3,
        "step": "135~140",
        "action": "LOOP",
        "vars": {
          "i": "24→29"
        }
      },
      {
        "line": 5,
        "step": 141,
        "action": "EXECUTE",
        "vars": {
          "j": 29
        }
      },
      {
        "line": 6,
        "step": 142,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[29]": 29
        }
      },
      {
        "line": 3,
        "step": "143~144",
        "action": "LOOP",
        "vars": {
          "i": "30→31"
        }
      },
      {
        "line": 5,
        "step": 145,
        "action": "EXECUTE",
        "vars": {
          "j": 31
        }
      },
      {
        "line": 6,
        "step": 146,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[31]": 31
        }
      },
      {
        "line": 3,
        "step": "147~152",
        "action": "LOOP",
        "vars": {
          "i": "32→37"
        }
      },
      {
        "line": 5,
        "step": 153,
        "action": "EXECUTE",
        "vars": {
          "j": 37
        }
      },
      {
        "line": 6,
        "step": 154,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[37]": 37
        }
      },
      {
        "line": 3,
        "step": "155~156",
        "action": "LOOP",
        "vars": {
          "i": "38→39"
        }
      },
      {
        "line": 7,
        "step": 157,
        "action": "RETURN",
        "vars": {
          "__return__": 16
        }
      }
    ],
    "id": 2524,
    "task_id": 849,
    "exist_function": [
      "Sum"
    ]
  },
  {
    "code": "def Sum(N): \r\n    SumOfPrimeDivisors = [0]*(N + 1)   \r\n    for i in range(2,N + 1) : \r\n        if (SumOfPrimeDivisors[i] == 0) : \r\n            for j in range(i,N + 1,i) : \r\n                SumOfPrimeDivisors[j] += i           \r\n    return SumOfPrimeDivisors[N]",
    "entry_point": "Sum",
    "input": [
      40
    ],
    "output": 7,
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "N": 40
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors": [
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0,
            0
          ]
        }
      },
      {
        "line": 3,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "i": 2
        }
      },
      {
        "line": 5,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "j": 2
        }
      },
      {
        "line": 6,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[2]": 2
        }
      },
      {
        "line": 5,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "j": 4
        }
      },
      {
        "line": 6,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[4]": 2
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[6]": 2
        }
      },
      {
        "line": 5,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "j": 8
        }
      },
      {
        "line": 6,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[8]": 2
        }
      },
      {
        "line": 5,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 6,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[10]": 2
        }
      },
      {
        "line": 5,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "j": 12
        }
      },
      {
        "line": 6,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[12]": 2
        }
      },
      {
        "line": 5,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "j": 14
        }
      },
      {
        "line": 6,
        "step": 17,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[14]": 2
        }
      },
      {
        "line": 5,
        "step": 18,
        "action": "EXECUTE",
        "vars": {
          "j": 16
        }
      },
      {
        "line": 6,
        "step": 19,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[16]": 2
        }
      },
      {
        "line": 5,
        "step": 20,
        "action": "EXECUTE",
        "vars": {
          "j": 18
        }
      },
      {
        "line": 6,
        "step": 21,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[18]": 2
        }
      },
      {
        "line": 5,
        "step": 22,
        "action": "EXECUTE",
        "vars": {
          "j": 20
        }
      },
      {
        "line": 6,
        "step": 23,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[20]": 2
        }
      },
      {
        "line": 5,
        "step": 24,
        "action": "EXECUTE",
        "vars": {
          "j": 22
        }
      },
      {
        "line": 6,
        "step": 25,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[22]": 2
        }
      },
      {
        "line": 5,
        "step": 26,
        "action": "EXECUTE",
        "vars": {
          "j": 24
        }
      },
      {
        "line": 6,
        "step": 27,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[24]": 2
        }
      },
      {
        "line": 5,
        "step": 28,
        "action": "EXECUTE",
        "vars": {
          "j": 26
        }
      },
      {
        "line": 6,
        "step": 29,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[26]": 2
        }
      },
      {
        "line": 5,
        "step": 30,
        "action": "EXECUTE",
        "vars": {
          "j": 28
        }
      },
      {
        "line": 6,
        "step": 31,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[28]": 2
        }
      },
      {
        "line": 5,
        "step": 32,
        "action": "EXECUTE",
        "vars": {
          "j": 30
        }
      },
      {
        "line": 6,
        "step": 33,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[30]": 2
        }
      },
      {
        "line": 5,
        "step": 34,
        "action": "EXECUTE",
        "vars": {
          "j": 32
        }
      },
      {
        "line": 6,
        "step": 35,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[32]": 2
        }
      },
      {
        "line": 5,
        "step": 36,
        "action": "EXECUTE",
        "vars": {
          "j": 34
        }
      },
      {
        "line": 6,
        "step": 37,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[34]": 2
        }
      },
      {
        "line": 5,
        "step": 38,
        "action": "EXECUTE",
        "vars": {
          "j": 36
        }
      },
      {
        "line": 6,
        "step": 39,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[36]": 2
        }
      },
      {
        "line": 5,
        "step": 40,
        "action": "EXECUTE",
        "vars": {
          "j": 38
        }
      },
      {
        "line": 6,
        "step": 41,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[38]": 2
        }
      },
      {
        "line": 5,
        "step": 42,
        "action": "EXECUTE",
        "vars": {
          "j": 40
        }
      },
      {
        "line": 6,
        "step": 43,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[40]": 2
        }
      },
      {
        "line": 3,
        "step": 44,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 5,
        "step": 45,
        "action": "EXECUTE",
        "vars": {
          "j": 3
        }
      },
      {
        "line": 6,
        "step": 46,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[3]": 3
        }
      },
      {
        "line": 5,
        "step": 47,
        "action": "EXECUTE",
        "vars": {
          "j": 6
        }
      },
      {
        "line": 6,
        "step": 48,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[6]": 5
        }
      },
      {
        "line": 5,
        "step": 49,
        "action": "EXECUTE",
        "vars": {
          "j": 9
        }
      },
      {
        "line": 6,
        "step": 50,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[9]": 3
        }
      },
      {
        "line": 5,
        "step": 51,
        "action": "EXECUTE",
        "vars": {
          "j": 12
        }
      },
      {
        "line": 6,
        "step": 52,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[12]": 5
        }
      },
      {
        "line": 5,
        "step": 53,
        "action": "EXECUTE",
        "vars": {
          "j": 15
        }
      },
      {
        "line": 6,
        "step": 54,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[15]": 3
        }
      },
      {
        "line": 5,
        "step": 55,
        "action": "EXECUTE",
        "vars": {
          "j": 18
        }
      },
      {
        "line": 6,
        "step": 56,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[18]": 5
        }
      },
      {
        "line": 5,
        "step": 57,
        "action": "EXECUTE",
        "vars": {
          "j": 21
        }
      },
      {
        "line": 6,
        "step": 58,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[21]": 3
        }
      },
      {
        "line": 5,
        "step": 59,
        "action": "EXECUTE",
        "vars": {
          "j": 24
        }
      },
      {
        "line": 6,
        "step": 60,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[24]": 5
        }
      },
      {
        "line": 5,
        "step": 61,
        "action": "EXECUTE",
        "vars": {
          "j": 27
        }
      },
      {
        "line": 6,
        "step": 62,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[27]": 3
        }
      },
      {
        "line": 5,
        "step": 63,
        "action": "EXECUTE",
        "vars": {
          "j": 30
        }
      },
      {
        "line": 6,
        "step": 64,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[30]": 5
        }
      },
      {
        "line": 5,
        "step": 65,
        "action": "EXECUTE",
        "vars": {
          "j": 33
        }
      },
      {
        "line": 6,
        "step": 66,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[33]": 3
        }
      },
      {
        "line": 5,
        "step": 67,
        "action": "EXECUTE",
        "vars": {
          "j": 36
        }
      },
      {
        "line": 6,
        "step": 68,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[36]": 5
        }
      },
      {
        "line": 5,
        "step": 69,
        "action": "EXECUTE",
        "vars": {
          "j": 39
        }
      },
      {
        "line": 6,
        "step": 70,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[39]": 3
        }
      },
      {
        "line": 3,
        "step": "71~72",
        "action": "LOOP",
        "vars": {
          "i": "4→5"
        }
      },
      {
        "line": 5,
        "step": 73,
        "action": "EXECUTE",
        "vars": {
          "j": 5
        }
      },
      {
        "line": 6,
        "step": 74,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[5]": 5
        }
      },
      {
        "line": 5,
        "step": 75,
        "action": "EXECUTE",
        "vars": {
          "j": 10
        }
      },
      {
        "line": 6,
        "step": 76,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[10]": 7
        }
      },
      {
        "line": 5,
        "step": 77,
        "action": "EXECUTE",
        "vars": {
          "j": 15
        }
      },
      {
        "line": 6,
        "step": 78,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[15]": 8
        }
      },
      {
        "line": 5,
        "step": 79,
        "action": "EXECUTE",
        "vars": {
          "j": 20
        }
      },
      {
        "line": 6,
        "step": 80,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[20]": 7
        }
      },
      {
        "line": 5,
        "step": 81,
        "action": "EXECUTE",
        "vars": {
          "j": 25
        }
      },
      {
        "line": 6,
        "step": 82,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[25]": 5
        }
      },
      {
        "line": 5,
        "step": 83,
        "action": "EXECUTE",
        "vars": {
          "j": 30
        }
      },
      {
        "line": 6,
        "step": 84,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[30]": 10
        }
      },
      {
        "line": 5,
        "step": 85,
        "action": "EXECUTE",
        "vars": {
          "j": 35
        }
      },
      {
        "line": 6,
        "step": 86,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[35]": 5
        }
      },
      {
        "line": 5,
        "step": 87,
        "action": "EXECUTE",
        "vars": {
          "j": 40
        }
      },
      {
        "line": 6,
        "step": 88,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[40]": 7
        }
      },
      {
        "line": 3,
        "step": "89~90",
        "action": "LOOP",
        "vars": {
          "i": "6→7"
        }
      },
      {
        "line": 5,
        "step": 91,
        "action": "EXECUTE",
        "vars": {
          "j": 7
        }
      },
      {
        "line": 6,
        "step": 92,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[7]": 7
        }
      },
      {
        "line": 5,
        "step": 93,
        "action": "EXECUTE",
        "vars": {
          "j": 14
        }
      },
      {
        "line": 6,
        "step": 94,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[14]": 9
        }
      },
      {
        "line": 5,
        "step": 95,
        "action": "EXECUTE",
        "vars": {
          "j": 21
        }
      },
      {
        "line": 6,
        "step": 96,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[21]": 10
        }
      },
      {
        "line": 5,
        "step": 97,
        "action": "EXECUTE",
        "vars": {
          "j": 28
        }
      },
      {
        "line": 6,
        "step": 98,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[28]": 9
        }
      },
      {
        "line": 5,
        "step": 99,
        "action": "EXECUTE",
        "vars": {
          "j": 35
        }
      },
      {
        "line": 6,
        "step": 100,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[35]": 12
        }
      },
      {
        "line": 3,
        "step": "101~104",
        "action": "LOOP",
        "vars": {
          "i": "8→11"
        }
      },
      {
        "line": 5,
        "step": 105,
        "action": "EXECUTE",
        "vars": {
          "j": 11
        }
      },
      {
        "line": 6,
        "step": 106,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[11]": 11
        }
      },
      {
        "line": 5,
        "step": 107,
        "action": "EXECUTE",
        "vars": {
          "j": 22
        }
      },
      {
        "line": 6,
        "step": 108,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[22]": 13
        }
      },
      {
        "line": 5,
        "step": 109,
        "action": "EXECUTE",
        "vars": {
          "j": 33
        }
      },
      {
        "line": 6,
        "step": 110,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[33]": 14
        }
      },
      {
        "line": 3,
        "step": "111~112",
        "action": "LOOP",
        "vars": {
          "i": "12→13"
        }
      },
      {
        "line": 5,
        "step": 113,
        "action": "EXECUTE",
        "vars": {
          "j": 13
        }
      },
      {
        "line": 6,
        "step": 114,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[13]": 13
        }
      },
      {
        "line": 5,
        "step": 115,
        "action": "EXECUTE",
        "vars": {
          "j": 26
        }
      },
      {
        "line": 6,
        "step": 116,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[26]": 15
        }
      },
      {
        "line": 5,
        "step": 117,
        "action": "EXECUTE",
        "vars": {
          "j": 39
        }
      },
      {
        "line": 6,
        "step": 118,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[39]": 16
        }
      },
      {
        "line": 3,
        "step": "119~122",
        "action": "LOOP",
        "vars": {
          "i": "14→17"
        }
      },
      {
        "line": 5,
        "step": 123,
        "action": "EXECUTE",
        "vars": {
          "j": 17
        }
      },
      {
        "line": 6,
        "step": 124,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[17]": 17
        }
      },
      {
        "line": 5,
        "step": 125,
        "action": "EXECUTE",
        "vars": {
          "j": 34
        }
      },
      {
        "line": 6,
        "step": 126,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[34]": 19
        }
      },
      {
        "line": 3,
        "step": "127~128",
        "action": "LOOP",
        "vars": {
          "i": "18→19"
        }
      },
      {
        "line": 5,
        "step": 129,
        "action": "EXECUTE",
        "vars": {
          "j": 19
        }
      },
      {
        "line": 6,
        "step": 130,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[19]": 19
        }
      },
      {
        "line": 5,
        "step": 131,
        "action": "EXECUTE",
        "vars": {
          "j": 38
        }
      },
      {
        "line": 6,
        "step": 132,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[38]": 21
        }
      },
      {
        "line": 3,
        "step": "133~136",
        "action": "LOOP",
        "vars": {
          "i": "20→23"
        }
      },
      {
        "line": 5,
        "step": 137,
        "action": "EXECUTE",
        "vars": {
          "j": 23
        }
      },
      {
        "line": 6,
        "step": 138,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[23]": 23
        }
      },
      {
        "line": 3,
        "step": "139~144",
        "action": "LOOP",
        "vars": {
          "i": "24→29"
        }
      },
      {
        "line": 5,
        "step": 145,
        "action": "EXECUTE",
        "vars": {
          "j": 29
        }
      },
      {
        "line": 6,
        "step": 146,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[29]": 29
        }
      },
      {
        "line": 3,
        "step": "147~148",
        "action": "LOOP",
        "vars": {
          "i": "30→31"
        }
      },
      {
        "line": 5,
        "step": 149,
        "action": "EXECUTE",
        "vars": {
          "j": 31
        }
      },
      {
        "line": 6,
        "step": 150,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[31]": 31
        }
      },
      {
        "line": 3,
        "step": "151~156",
        "action": "LOOP",
        "vars": {
          "i": "32→37"
        }
      },
      {
        "line": 5,
        "step": 157,
        "action": "EXECUTE",
        "vars": {
          "j": 37
        }
      },
      {
        "line": 6,
        "step": 158,
        "action": "EXECUTE",
        "vars": {
          "SumOfPrimeDivisors[37]": 37
        }
      },
      {
        "line": 3,
        "step": "159~161",
        "action": "LOOP",
        "vars": {
          "i": "38→40"
        }
      },
      {
        "line": 7,
        "step": 162,
        "action": "RETURN",
        "vars": {
          "__return__": 7
        }
      }
    ],
    "id": 2525,
    "task_id": 849,
    "exist_function": [
      "Sum"
    ]
  },
  {
    "code": "def remove_negs(num_list): \r\n    for item in num_list: \r\n        if item < 0: \r\n           num_list.remove(item) \r\n    return num_list",
    "entry_point": "remove_negs",
    "input": [
      [
        1,
        3
      ]
    ],
    "output": [
      1,
      3
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "num_list": [
            1,
            -2,
            3,
            -4
          ]
        }
      },
      {
        "line": 2,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "item": 1
        }
      },
      {
        "line": 2,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "item": -2
        }
      },
      {
        "line": 4,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "num_list[1]": 3,
          "num_list[2]": -4
        }
      },
      {
        "line": 2,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "item": -4
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "num_list": [
            1,
            3
          ]
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": [
            1,
            3
          ]
        }
      }
    ],
    "id": 2532,
    "task_id": 852,
    "exist_function": [
      "remove_negs"
    ]
  },
  {
    "code": "def remove_negs(num_list): \r\n    for item in num_list: \r\n        if item < 0: \r\n           num_list.remove(item) \r\n    return num_list",
    "entry_point": "remove_negs",
    "input": [
      [
        1,
        2,
        3
      ]
    ],
    "output": [
      1,
      2,
      3
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "num_list": [
            1,
            2,
            3,
            -4
          ]
        }
      },
      {
        "line": 2,
        "step": "2~4",
        "action": "LOOP",
        "vars": {
          "item": "1→3"
        }
      },
      {
        "line": 2,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "item": -4
        }
      },
      {
        "line": 4,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "num_list": [
            1,
            2,
            3
          ]
        }
      },
      {
        "line": 5,
        "step": 7,
        "action": "RETURN",
        "vars": {
          "__return__": [
            1,
            2,
            3
          ]
        }
      }
    ],
    "id": 2533,
    "task_id": 852,
    "exist_function": [
      "remove_negs"
    ]
  },
  {
    "code": "def remove_negs(num_list): \r\n    for item in num_list: \r\n        if item < 0: \r\n           num_list.remove(item) \r\n    return num_list",
    "entry_point": "remove_negs",
    "input": [
      [
        4,
        5,
        7
      ]
    ],
    "output": [
      4,
      5,
      7
    ],
    "traces": [
      {
        "line": 1,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "num_list": [
            4,
            5,
            -6,
            7,
            -8
          ]
        }
      },
      {
        "line": 2,
        "step": "2~3",
        "action": "LOOP",
        "vars": {
          "item": "4→5"
        }
      },
      {
        "line": 2,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "item": -6
        }
      },
      {
        "line": 4,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "num_list[2]": 7,
          "num_list[3]": -8
        }
      },
      {
        "line": 2,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "item": -8
        }
      },
      {
        "line": 4,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "num_list": [
            4,
            5,
            7
          ]
        }
      },
      {
        "line": 5,
        "step": 8,
        "action": "RETURN",
        "vars": {
          "__return__": [
            4,
            5,
            7
          ]
        }
      }
    ],
    "id": 2534,
    "task_id": 852,
    "exist_function": [
      "remove_negs"
    ]
  },
  {
    "code": "import math\r\ndef sum_of_odd_Factors(n): \r\n    res = 1\r\n    while n % 2 == 0: \r\n        n = n // 2 \r\n    for i in range(3,int(math.sqrt(n) + 1)): \r\n        count = 0\r\n        curr_sum = 1\r\n        curr_term = 1\r\n        while n % i == 0: \r\n            count+=1 \r\n            n = n // i \r\n            curr_term *= i \r\n            curr_sum += curr_term    \r\n        res *= curr_sum  \r\n    if n >= 2: \r\n        res *= (1 + n) \r\n    return res",
    "entry_point": "sum_of_odd_Factors",
    "input": [
      30
    ],
    "output": 24,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 30
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": 1
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "n": 15
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 8,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "curr_sum": 1
        }
      },
      {
        "line": 9,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "curr_term": 1
        }
      },
      {
        "line": 11,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 12,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "n": 5
        }
      },
      {
        "line": 13,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "curr_term": 3
        }
      },
      {
        "line": 14,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "curr_sum": 4
        }
      },
      {
        "line": 15,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "res": 4
        }
      },
      {
        "line": 17,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "res": 24
        }
      },
      {
        "line": 18,
        "step": 14,
        "action": "RETURN",
        "vars": {
          "__return__": 24
        }
      }
    ],
    "id": 2535,
    "task_id": 853,
    "exist_function": [
      "sum_of_odd_Factors"
    ]
  },
  {
    "code": "import math\r\ndef sum_of_odd_Factors(n): \r\n    res = 1\r\n    while n % 2 == 0: \r\n        n = n // 2 \r\n    for i in range(3,int(math.sqrt(n) + 1)): \r\n        count = 0\r\n        curr_sum = 1\r\n        curr_term = 1\r\n        while n % i == 0: \r\n            count+=1 \r\n            n = n // i \r\n            curr_term *= i \r\n            curr_sum += curr_term    \r\n        res *= curr_sum  \r\n    if n >= 2: \r\n        res *= (1 + n) \r\n    return res",
    "entry_point": "sum_of_odd_Factors",
    "input": [
      18
    ],
    "output": 13,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 18
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": 1
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "n": 9
        }
      },
      {
        "line": 6,
        "step": 4,
        "action": "EXECUTE",
        "vars": {
          "i": 3
        }
      },
      {
        "line": 7,
        "step": 5,
        "action": "EXECUTE",
        "vars": {
          "count": 0
        }
      },
      {
        "line": 8,
        "step": 6,
        "action": "EXECUTE",
        "vars": {
          "curr_sum": 1
        }
      },
      {
        "line": 9,
        "step": 7,
        "action": "EXECUTE",
        "vars": {
          "curr_term": 1
        }
      },
      {
        "line": 11,
        "step": 8,
        "action": "EXECUTE",
        "vars": {
          "count": 1
        }
      },
      {
        "line": 12,
        "step": 9,
        "action": "EXECUTE",
        "vars": {
          "n": 3
        }
      },
      {
        "line": 13,
        "step": 10,
        "action": "EXECUTE",
        "vars": {
          "curr_term": 3
        }
      },
      {
        "line": 14,
        "step": 11,
        "action": "EXECUTE",
        "vars": {
          "curr_sum": 4
        }
      },
      {
        "line": 11,
        "step": 12,
        "action": "EXECUTE",
        "vars": {
          "count": 2
        }
      },
      {
        "line": 12,
        "step": 13,
        "action": "EXECUTE",
        "vars": {
          "n": 1
        }
      },
      {
        "line": 13,
        "step": 14,
        "action": "EXECUTE",
        "vars": {
          "curr_term": 9
        }
      },
      {
        "line": 14,
        "step": 15,
        "action": "EXECUTE",
        "vars": {
          "curr_sum": 13
        }
      },
      {
        "line": 15,
        "step": 16,
        "action": "EXECUTE",
        "vars": {
          "res": 13
        }
      },
      {
        "line": 18,
        "step": 17,
        "action": "RETURN",
        "vars": {
          "__return__": 13
        }
      }
    ],
    "id": 2536,
    "task_id": 853,
    "exist_function": [
      "sum_of_odd_Factors"
    ]
  },
  {
    "code": "import math\r\ndef sum_of_odd_Factors(n): \r\n    res = 1\r\n    while n % 2 == 0: \r\n        n = n // 2 \r\n    for i in range(3,int(math.sqrt(n) + 1)): \r\n        count = 0\r\n        curr_sum = 1\r\n        curr_term = 1\r\n        while n % i == 0: \r\n            count+=1 \r\n            n = n // i \r\n            curr_term *= i \r\n            curr_sum += curr_term    \r\n        res *= curr_sum  \r\n    if n >= 2: \r\n        res *= (1 + n) \r\n    return res",
    "entry_point": "sum_of_odd_Factors",
    "input": [
      2
    ],
    "output": 1,
    "traces": [
      {
        "line": 2,
        "step": 1,
        "action": "INPUT",
        "vars": {
          "n": 2
        }
      },
      {
        "line": 3,
        "step": 2,
        "action": "EXECUTE",
        "vars": {
          "res": 1
        }
      },
      {
        "line": 5,
        "step": 3,
        "action": "EXECUTE",
        "vars": {
          "n": 1
        }
      },
      {
        "line": 18,
        "step": 4,
        "action": "RETURN",
        "vars": {
          "__return__": 1
        }
      }
    ],
    "id": 2537,
    "task_id": 853,
    "exist_function": [
      "sum_of_odd_Factors"
    ]
  }
]